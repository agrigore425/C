

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar  1 01:15:18 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     _RXFCON0bits	set	3540
    29  0000                     _RXB1CONbits	set	3920
    30  0000                     _RXB1D0	set	3926
    31  0000                     _RXB1D1	set	3927
    32  0000                     _RXB1D2	set	3928
    33  0000                     _RXB1D3	set	3929
    34  0000                     _RXB1D4	set	3930
    35  0000                     _RXB1D5	set	3931
    36  0000                     _RXB1D6	set	3932
    37  0000                     _RXB1D7	set	3933
    38  0000                     _RXB1SIDH	set	3921
    39  0000                     _RXB1SIDL	set	3922
    40  0000                     _RXF0SIDH	set	3840
    41  0000                     _RXF0SIDL	set	3841
    42  0000                     _RXF0SIDLbits	set	3841
    43  0000                     _RXF1SIDLbits	set	3845
    44  0000                     _RXF2SIDH	set	3848
    45  0000                     _RXF2SIDL	set	3849
    46  0000                     _RXM0SIDH	set	3864
    47  0000                     _RXM0SIDL	set	3865
    48  0000                     _RXM1SIDH	set	3868
    49  0000                     _RXM1SIDL	set	3869
    50  0000                     _TXB0CONbits	set	3904
    51  0000                     _TXB0D0	set	3910
    52  0000                     _TXB0D1	set	3911
    53  0000                     _TXB0D2	set	3912
    54  0000                     _TXB0D3	set	3913
    55  0000                     _TXB0D4	set	3914
    56  0000                     _TXB0D5	set	3915
    57  0000                     _TXB0D6	set	3916
    58  0000                     _TXB0D7	set	3917
    59  0000                     _TXB0DLC	set	3909
    60  0000                     _TXB0SIDH	set	3905
    61  0000                     _TXB0SIDL	set	3906
    62  0000                     _TXB0SIDLbits	set	3906
    63  0000                     _RXB1DLC	set	3925
    64  0000                     _ADCON0bits	set	4034
    65  0000                     _ADCON1bits	set	4033
    66  0000                     _ADCON2bits	set	4032
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADRESL	set	4035
    69  0000                     _BRGCON1bits	set	3952
    70  0000                     _BRGCON2bits	set	3953
    71  0000                     _BRGCON3bits	set	3954
    72  0000                     _CANCONbits	set	3951
    73  0000                     _CANSTATbits	set	3950
    74  0000                     _CIOCONbits	set	3955
    75  0000                     _ECANCONbits	set	3959
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _OSCTUNEbits	set	3995
    78  0000                     _RXB0CONbits	set	3936
    79  0000                     _RXB0D0	set	3942
    80  0000                     _RXB0D1	set	3943
    81  0000                     _RXB0D2	set	3944
    82  0000                     _RXB0D3	set	3945
    83  0000                     _RXB0D4	set	3946
    84  0000                     _RXB0D5	set	3947
    85  0000                     _RXB0D6	set	3948
    86  0000                     _RXB0D7	set	3949
    87  0000                     _RXB0SIDH	set	3937
    88  0000                     _RXB0SIDL	set	3938
    89  0000                     _SSPADD	set	4040
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPCON1	set	4038
    92  0000                     _SSPCON1bits	set	4038
    93  0000                     _SSPCON2	set	4037
    94  0000                     _SSPCON2bits	set	4037
    95  0000                     _SSPSTAT	set	4039
    96  0000                     _SSPSTATbits	set	4039
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISCbits	set	3988
   100  0000                     _TRISDbits	set	3989
   101  0000                     _TRISEbits	set	3990
   102  0000                     _RXB0DLC	set	3941
   103  0000                     _ACKDT	set	32301
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  000582                     __pcinit:
   109                           	opt stack 0
   110  000582                     start_initialization:
   111                           	opt stack 0
   112  000582                     __initialization:
   113                           	opt stack 0
   114  000582                     end_of_initialization:
   115                           	opt stack 0
   116  000582                     __end_of__initialization:
   117                           	opt stack 0
   118  000582  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  000584  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  000586  0100               	movlb	0
   121  000588  EF55  F000         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	cstackBANK0
   124  000060                     __pcstackBANK0:
   125                           	opt stack 0
   126  000060                     main@xAccel:
   127                           	opt stack 0
   128                           
   129                           ; 3 bytes @ 0x0
   130  000060                     	ds	3
   131  000063                     main@yAccel:
   132                           	opt stack 0
   133                           
   134                           ; 3 bytes @ 0x3
   135  000063                     	ds	3
   136  000066                     main@zAccel:
   137                           	opt stack 0
   138                           
   139                           ; 3 bytes @ 0x6
   140  000066                     	ds	3
   141  000069                     main@loopPeriod:
   142                           	opt stack 0
   143                           
   144                           ; 3 bytes @ 0x9
   145  000069                     	ds	3
   146  00006C                     main@xGyro:
   147                           	opt stack 0
   148                           
   149                           ; 3 bytes @ 0xC
   150  00006C                     	ds	3
   151  00006F                     main@yGyro:
   152                           	opt stack 0
   153                           
   154                           ; 3 bytes @ 0xF
   155  00006F                     	ds	3
   156  000072                     main@zGyro:
   157                           	opt stack 0
   158                           
   159                           ; 3 bytes @ 0x12
   160  000072                     	ds	3
   161  000075                     main@yAccelRaw:
   162                           	opt stack 0
   163                           
   164                           ; 2 bytes @ 0x15
   165  000075                     	ds	2
   166  000077                     main@zAccelRaw:
   167                           	opt stack 0
   168                           
   169                           ; 2 bytes @ 0x17
   170  000077                     	ds	2
   171  000079                     main@xGyroRaw:
   172                           	opt stack 0
   173                           
   174                           ; 2 bytes @ 0x19
   175  000079                     	ds	2
   176  00007B                     main@yGyroRaw:
   177                           	opt stack 0
   178                           
   179                           ; 2 bytes @ 0x1B
   180  00007B                     	ds	2
   181  00007D                     main@zGyroRaw:
   182                           	opt stack 0
   183                           
   184                           ; 2 bytes @ 0x1D
   185  00007D                     	ds	2
   186  00007F                     main@tempOne:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0x1F
   190  00007F                     	ds	2
   191  000081                     main@tempTwo:
   192                           	opt stack 0
   193                           
   194                           ; 2 bytes @ 0x21
   195  000081                     	ds	2
   196  000083                     main@checkRegReady:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x23
   200  000083                     	ds	1
   201  000084                     main@xAccelRaw:
   202                           	opt stack 0
   203                           
   204                           ; 2 bytes @ 0x24
   205  000084                     	ds	2
   206  000086                     main@slaveAddr0:
   207                           	opt stack 0
   208                           
   209                           ; 1 bytes @ 0x26
   210  000086                     	ds	1
   211  000087                     main@destAddr0:
   212                           	opt stack 0
   213                           
   214                           ; 1 bytes @ 0x27
   215  000087                     	ds	1
   216  000088                     main@sendData0:
   217                           	opt stack 0
   218                           
   219                           ; 1 bytes @ 0x28
   220  000088                     	ds	1
   221  000089                     main@accelPack:
   222                           	opt stack 0
   223                           
   224                           ; 11 bytes @ 0x29
   225  000089                     	ds	11
   226                           
   227                           	psect	cstackCOMRAM
   228  000001                     __pcstackCOMRAM:
   229                           	opt stack 0
   230  000001                     ??_high_isr:
   231  000001                     
   232                           ; 1 bytes @ 0x0
   233  000001                     	ds	14
   234  00000F                     ??_low_isr:
   235                           
   236                           ; 1 bytes @ 0xE
   237  00000F                     	ds	17
   238  000020                     ??_ecan_init:
   239  000020                     ??_i2c_wait:
   240  000020                     ecan_send@mess:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x1F
   244  000020                     	ds	1
   245  000021                     i2c_write@data:
   246                           	opt stack 0
   247  000021                     i2c_address@mode:
   248                           	opt stack 0
   249  000021                     i2c_read@ack:
   250                           	opt stack 0
   251                           
   252                           ; 1 bytes @ 0x20
   253  000021                     	ds	1
   254  000022                     ??_ecan_send:
   255  000022                     i2c_address@address:
   256                           	opt stack 0
   257  000022                     i2c_read@i2cReadData:
   258                           	opt stack 0
   259  000022                     ecan_init@sid0:
   260                           	opt stack 0
   261                           
   262                           ; 2 bytes @ 0x21
   263  000022                     	ds	1
   264  000023                     ?_i2c_get_byte:
   265                           	opt stack 0
   266  000023                     i2c_get_byte@dataAddr:
   267                           	opt stack 0
   268  000023                     i2c_writeToReg@destAddr:
   269                           	opt stack 0
   270                           
   271                           ; 1 bytes @ 0x22
   272  000023                     	ds	1
   273  000024                     i2c_writeToReg@sendData:
   274                           	opt stack 0
   275  000024                     ecan_init@mask0:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x23
   279  000024                     	ds	1
   280  000025                     i2c_get_byte@data1:
   281                           	opt stack 0
   282  000025                     i2c_writeToReg@slaveAddr:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x24
   286  000025                     	ds	1
   287  000026                     i2c_get_byte@slaveAddr:
   288                           	opt stack 0
   289  000026                     ecan_init@sid1:
   290                           	opt stack 0
   291                           
   292                           ; 2 bytes @ 0x25
   293  000026                     	ds	2
   294  000028                     ecan_init@mask1:
   295                           	opt stack 0
   296                           
   297                           ; 2 bytes @ 0x27
   298  000028                     	ds	2
   299  00002A                     
   300                           ; 1 bytes @ 0x29
   301 ;;
   302 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   303 ;;
   304 ;; *************** function _main *****************
   305 ;; Defined at:
   306 ;;		line 54 in file "main.c"
   307 ;; Parameters:    Size  Location     Type
   308 ;;		None
   309 ;; Auto vars:     Size  Location     Type
   310 ;;  accelPack      11   41[BANK0 ] struct Message
   311 ;;  zGyro           3   18[BANK0 ] float 
   312 ;;  yGyro           3   15[BANK0 ] float 
   313 ;;  xGyro           3   12[BANK0 ] float 
   314 ;;  loopPeriod      3    9[BANK0 ] float 
   315 ;;  zAccel          3    6[BANK0 ] float 
   316 ;;  yAccel          3    3[BANK0 ] float 
   317 ;;  xAccel          3    0[BANK0 ] float 
   318 ;;  xAccelRaw       2   36[BANK0 ] short 
   319 ;;  tempTwo         2   33[BANK0 ] unsigned int 
   320 ;;  tempOne         2   31[BANK0 ] unsigned int 
   321 ;;  zGyroRaw        2   29[BANK0 ] int 
   322 ;;  yGyroRaw        2   27[BANK0 ] int 
   323 ;;  xGyroRaw        2   25[BANK0 ] int 
   324 ;;  zAccelRaw       2   23[BANK0 ] short 
   325 ;;  yAccelRaw       2   21[BANK0 ] short 
   326 ;;  sendData0       1   40[BANK0 ] unsigned char 
   327 ;;  destAddr0       1   39[BANK0 ] unsigned char 
   328 ;;  slaveAddr0      1   38[BANK0 ] unsigned char 
   329 ;;  checkRegRead    1   35[BANK0 ] unsigned char 
   330 ;; Return value:  Size  Location     Type
   331 ;;                  1    wreg      void 
   332 ;; Registers used:
   333 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   334 ;; Tracked objects:
   335 ;;		On entry : 0/0
   336 ;;		On exit  : 0/0
   337 ;;		Unchanged: 0/0
   338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   340 ;;      Locals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0
   341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   342 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0
   343 ;;Total ram usage:       52 bytes
   344 ;; Hardware stack levels required when called:    5
   345 ;; This function calls:
   346 ;;		_ConfigureOscillator
   347 ;;		_ecan_init
   348 ;;		_ecan_send
   349 ;;		_i2c_get_byte
   350 ;;		_i2c_init
   351 ;;		_i2c_writeToReg
   352 ;; This function is called by:
   353 ;;		Startup code after reset
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text0
   358  0000AA                     __ptext0:
   359                           	opt stack 0
   360  0000AA                     _main:
   361                           	opt stack 26
   362                           
   363                           ;main.c: 57: ConfigureOscillator();
   364                           
   365                           ;incstack = 0
   366  0000AA  ECB4  F002         	call	_ConfigureOscillator	;wreg free
   367                           
   368                           ;main.c: 60: ecan_init();
   369  0000AE  EC0D  F001         	call	_ecan_init	;wreg free
   370                           
   371                           ;main.c: 61: i2c_init();
   372  0000B2  EC98  F002         	call	_i2c_init	;wreg free
   373                           
   374                           ;main.c: 66: char checkRegReady = 0xA7;
   375  0000B6  0EA7               	movlw	167
   376  0000B8  0100               	movlb	0	; () banked
   377  0000BA  6F83               	movwf	main@checkRegReady& (0+255),b
   378                           
   379                           ; BSR set to: 0
   380                           ;main.c: 68: short xAccelRaw = 0;
   381  0000BC  0E00               	movlw	0
   382  0000BE  0100               	movlb	0	; () banked
   383  0000C0  6F85               	movwf	(main@xAccelRaw+1)& (0+255),b
   384  0000C2  0E00               	movlw	0
   385  0000C4  6F84               	movwf	main@xAccelRaw& (0+255),b
   386                           
   387                           ; BSR set to: 0
   388                           ;main.c: 69: short yAccelRaw = 0;
   389  0000C6  0E00               	movlw	0
   390  0000C8  0100               	movlb	0	; () banked
   391  0000CA  6F76               	movwf	(main@yAccelRaw+1)& (0+255),b
   392  0000CC  0E00               	movlw	0
   393  0000CE  6F75               	movwf	main@yAccelRaw& (0+255),b
   394                           
   395                           ; BSR set to: 0
   396                           ;main.c: 70: short zAccelRaw = 0;
   397  0000D0  0E00               	movlw	0
   398  0000D2  0100               	movlb	0	; () banked
   399  0000D4  6F78               	movwf	(main@zAccelRaw+1)& (0+255),b
   400  0000D6  0E00               	movlw	0
   401  0000D8  6F77               	movwf	main@zAccelRaw& (0+255),b
   402                           
   403                           ; BSR set to: 0
   404                           ;main.c: 72: float xAccel = 0;
   405  0000DA  0E00               	movlw	0
   406  0000DC  0100               	movlb	0	; () banked
   407  0000DE  6F60               	movwf	main@xAccel& (0+255),b
   408  0000E0  0E00               	movlw	0
   409  0000E2  0100               	movlb	0	; () banked
   410  0000E4  6F61               	movwf	(main@xAccel+1)& (0+255),b
   411  0000E6  0E00               	movlw	0
   412  0000E8  0100               	movlb	0	; () banked
   413  0000EA  6F62               	movwf	(main@xAccel+2)& (0+255),b
   414                           
   415                           ; BSR set to: 0
   416                           ;main.c: 73: float yAccel = 0;
   417  0000EC  0E00               	movlw	0
   418  0000EE  0100               	movlb	0	; () banked
   419  0000F0  6F63               	movwf	main@yAccel& (0+255),b
   420  0000F2  0E00               	movlw	0
   421  0000F4  0100               	movlb	0	; () banked
   422  0000F6  6F64               	movwf	(main@yAccel+1)& (0+255),b
   423  0000F8  0E00               	movlw	0
   424  0000FA  0100               	movlb	0	; () banked
   425  0000FC  6F65               	movwf	(main@yAccel+2)& (0+255),b
   426                           
   427                           ; BSR set to: 0
   428                           ;main.c: 74: float zAccel = 0;
   429  0000FE  0E00               	movlw	0
   430  000100  0100               	movlb	0	; () banked
   431  000102  6F66               	movwf	main@zAccel& (0+255),b
   432  000104  0E00               	movlw	0
   433  000106  0100               	movlb	0	; () banked
   434  000108  6F67               	movwf	(main@zAccel+1)& (0+255),b
   435  00010A  0E00               	movlw	0
   436  00010C  0100               	movlb	0	; () banked
   437  00010E  6F68               	movwf	(main@zAccel+2)& (0+255),b
   438                           
   439                           ; BSR set to: 0
   440                           ;main.c: 77: int16_t xGyroRaw = 0;
   441  000110  0E00               	movlw	0
   442  000112  0100               	movlb	0	; () banked
   443  000114  6F7A               	movwf	(main@xGyroRaw+1)& (0+255),b
   444  000116  0E00               	movlw	0
   445  000118  6F79               	movwf	main@xGyroRaw& (0+255),b
   446                           
   447                           ; BSR set to: 0
   448                           ;main.c: 78: int16_t yGyroRaw = 0;
   449  00011A  0E00               	movlw	0
   450  00011C  0100               	movlb	0	; () banked
   451  00011E  6F7C               	movwf	(main@yGyroRaw+1)& (0+255),b
   452  000120  0E00               	movlw	0
   453  000122  6F7B               	movwf	main@yGyroRaw& (0+255),b
   454                           
   455                           ; BSR set to: 0
   456                           ;main.c: 79: int16_t zGyroRaw = 0;
   457  000124  0E00               	movlw	0
   458  000126  0100               	movlb	0	; () banked
   459  000128  6F7E               	movwf	(main@zGyroRaw+1)& (0+255),b
   460  00012A  0E00               	movlw	0
   461  00012C  6F7D               	movwf	main@zGyroRaw& (0+255),b
   462                           
   463                           ; BSR set to: 0
   464                           ;main.c: 81: double loopPeriod = 0.01;
   465  00012E  0ED7               	movlw	215
   466  000130  0100               	movlb	0	; () banked
   467  000132  6F69               	movwf	main@loopPeriod& (0+255),b
   468  000134  0E23               	movlw	35
   469  000136  0100               	movlb	0	; () banked
   470  000138  6F6A               	movwf	(main@loopPeriod+1)& (0+255),b
   471  00013A  0E3C               	movlw	60
   472  00013C  0100               	movlb	0	; () banked
   473  00013E  6F6B               	movwf	(main@loopPeriod+2)& (0+255),b
   474                           
   475                           ; BSR set to: 0
   476                           ;main.c: 84: float xGyro = 0;
   477  000140  0E00               	movlw	0
   478  000142  0100               	movlb	0	; () banked
   479  000144  6F6C               	movwf	main@xGyro& (0+255),b
   480  000146  0E00               	movlw	0
   481  000148  0100               	movlb	0	; () banked
   482  00014A  6F6D               	movwf	(main@xGyro+1)& (0+255),b
   483  00014C  0E00               	movlw	0
   484  00014E  0100               	movlb	0	; () banked
   485  000150  6F6E               	movwf	(main@xGyro+2)& (0+255),b
   486                           
   487                           ; BSR set to: 0
   488                           ;main.c: 85: float yGyro = 0;
   489  000152  0E00               	movlw	0
   490  000154  0100               	movlb	0	; () banked
   491  000156  6F6F               	movwf	main@yGyro& (0+255),b
   492  000158  0E00               	movlw	0
   493  00015A  0100               	movlb	0	; () banked
   494  00015C  6F70               	movwf	(main@yGyro+1)& (0+255),b
   495  00015E  0E00               	movlw	0
   496  000160  0100               	movlb	0	; () banked
   497  000162  6F71               	movwf	(main@yGyro+2)& (0+255),b
   498                           
   499                           ; BSR set to: 0
   500                           ;main.c: 86: float zGyro = 0;
   501  000164  0E00               	movlw	0
   502  000166  0100               	movlb	0	; () banked
   503  000168  6F72               	movwf	main@zGyro& (0+255),b
   504  00016A  0E00               	movlw	0
   505  00016C  0100               	movlb	0	; () banked
   506  00016E  6F73               	movwf	(main@zGyro+1)& (0+255),b
   507  000170  0E00               	movlw	0
   508  000172  0100               	movlb	0	; () banked
   509  000174  6F74               	movwf	(main@zGyro+2)& (0+255),b
   510                           
   511                           ; BSR set to: 0
   512                           ;main.c: 88: unsigned int tempOne = 0;
   513  000176  0E00               	movlw	0
   514  000178  0100               	movlb	0	; () banked
   515  00017A  6F80               	movwf	(main@tempOne+1)& (0+255),b
   516  00017C  0E00               	movlw	0
   517  00017E  6F7F               	movwf	main@tempOne& (0+255),b
   518                           
   519                           ; BSR set to: 0
   520                           ;main.c: 89: unsigned int tempTwo = 0;
   521  000180  0E00               	movlw	0
   522  000182  0100               	movlb	0	; () banked
   523  000184  6F82               	movwf	(main@tempTwo+1)& (0+255),b
   524  000186  0E00               	movlw	0
   525  000188  6F81               	movwf	main@tempTwo& (0+255),b
   526                           
   527                           ; BSR set to: 0
   528                           ;main.c: 92: char slaveAddr0 = 0x1E;
   529  00018A  0E1E               	movlw	30
   530  00018C  0100               	movlb	0	; () banked
   531  00018E  6F86               	movwf	main@slaveAddr0& (0+255),b
   532                           
   533                           ; BSR set to: 0
   534                           ;main.c: 93: char destAddr0 = 0x20;
   535  000190  0E20               	movlw	32
   536  000192  0100               	movlb	0	; () banked
   537  000194  6F87               	movwf	main@destAddr0& (0+255),b
   538                           
   539                           ; BSR set to: 0
   540                           ;main.c: 94: char sendData0 = 0b01100111;
   541  000196  0E67               	movlw	103
   542  000198  0100               	movlb	0	; () banked
   543  00019A  6F88               	movwf	main@sendData0& (0+255),b
   544                           
   545                           ;main.c: 95: i2c_writeToReg(slaveAddr0, destAddr0, sendData0);
   546  00019C  C087  F023         	movff	main@destAddr0,i2c_writeToReg@destAddr
   547  0001A0  C088  F024         	movff	main@sendData0,i2c_writeToReg@sendData
   548  0001A4  0100               	movlb	0	; () banked
   549  0001A6  5186               	movf	main@slaveAddr0& (0+255),w,b
   550  0001A8  EC87  F002         	call	_i2c_writeToReg
   551                           
   552                           ;main.c: 98: slaveAddr0 = 0x1E;
   553  0001AC  0E1E               	movlw	30
   554  0001AE  0100               	movlb	0	; () banked
   555  0001B0  6F86               	movwf	main@slaveAddr0& (0+255),b
   556                           
   557                           ; BSR set to: 0
   558                           ;main.c: 99: destAddr0 = 0x24;
   559  0001B2  0E24               	movlw	36
   560  0001B4  0100               	movlb	0	; () banked
   561  0001B6  6F87               	movwf	main@destAddr0& (0+255),b
   562                           
   563                           ; BSR set to: 0
   564                           ;main.c: 100: sendData0 = 0b11110000;
   565  0001B8  0EF0               	movlw	240
   566  0001BA  0100               	movlb	0	; () banked
   567  0001BC  6F88               	movwf	main@sendData0& (0+255),b
   568                           
   569                           ; BSR set to: 0
   570                           ;main.c: 101: i2c_writeToReg(slaveAddr0, destAddr0, sendData0);
   571  0001BE  C087  F023         	movff	main@destAddr0,i2c_writeToReg@destAddr
   572  0001C2  C088  F024         	movff	main@sendData0,i2c_writeToReg@sendData
   573  0001C6  0100               	movlb	0	; () banked
   574  0001C8  5186               	movf	main@slaveAddr0& (0+255),w,b
   575  0001CA  EC87  F002         	call	_i2c_writeToReg
   576  0001CE                     l1447:
   577                           
   578                           ;main.c: 104: {
   579                           ;main.c: 121: xAccelRaw = i2c_get_byte(0x1E ,0x28);
   580  0001CE  0E28               	movlw	40
   581  0001D0  6E23               	movwf	i2c_get_byte@dataAddr,c
   582  0001D2  0E1E               	movlw	30
   583  0001D4  EC58  F002         	call	_i2c_get_byte
   584  0001D8  C023  F084         	movff	?_i2c_get_byte,main@xAccelRaw
   585  0001DC  C024  F085         	movff	?_i2c_get_byte+1,main@xAccelRaw+1
   586                           
   587                           ;main.c: 122: xAccelRaw += i2c_get_byte(0x1E,0x29) << 8;
   588  0001E0  0E29               	movlw	41
   589  0001E2  6E23               	movwf	i2c_get_byte@dataAddr,c
   590  0001E4  0E1E               	movlw	30
   591  0001E6  EC58  F002         	call	_i2c_get_byte
   592  0001EA  5023               	movf	?_i2c_get_byte,w,c
   593  0001EC  0100               	movlb	0	; () banked
   594  0001EE  2785               	addwf	(main@xAccelRaw+1)& (0+255),f,b
   595                           
   596                           ;main.c: 125: Message accelPack;
   597                           ;main.c: 126: accelPack.sid = 0x000;
   598  0001F0  0E00               	movlw	0
   599  0001F2  0100               	movlb	0	; () banked
   600  0001F4  6F92               	movwf	(main@accelPack+9)& (0+255),b
   601  0001F6  0E00               	movlw	0
   602  0001F8  6F91               	movwf	(main@accelPack+8)& (0+255),b
   603                           
   604                           ;main.c: 127: accelPack.len = 2;
   605  0001FA  0E02               	movlw	2
   606  0001FC  0100               	movlb	0	; () banked
   607  0001FE  6F93               	movwf	(main@accelPack+10)& (0+255),b
   608                           
   609                           ; BSR set to: 0
   610                           ;main.c: 128: accelPack.data[0] = xAccelRaw;
   611  000200  C084  F089         	movff	main@xAccelRaw,main@accelPack
   612                           
   613                           ;main.c: 129: accelPack.data[1] = xAccelRaw >> 8;
   614  000204  0100               	movlb	0	; () banked
   615  000206  5185               	movf	(main@xAccelRaw+1)& (0+255),w,b
   616  000208  0100               	movlb	0	; () banked
   617  00020A  6F8A               	movwf	(main@accelPack+1)& (0+255),b
   618                           
   619                           ; BSR set to: 0
   620                           ;main.c: 131: ecan_send(&accelPack);
   621  00020C  0E89               	movlw	low main@accelPack
   622  00020E  6E20               	movwf	ecan_send@mess,c
   623  000210  0E00               	movlw	high main@accelPack
   624  000212  6E21               	movwf	ecan_send@mess+1,c
   625  000214  ECA7  F001         	call	_ecan_send	;wreg free
   626  000218  D7DA               	goto	l1447
   627  00021A                     __end_of_main:
   628                           	opt stack 0
   629                           
   630 ;; *************** function _i2c_writeToReg *****************
   631 ;; Defined at:
   632 ;;		line 138 in file "i2c.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  slaveAddr       1    wreg     unsigned char 
   635 ;;  destAddr        1   34[COMRAM] unsigned char 
   636 ;;  sendData        1   35[COMRAM] unsigned char 
   637 ;; Auto vars:     Size  Location     Type
   638 ;;  slaveAddr       1   36[COMRAM] unsigned char 
   639 ;; Return value:  Size  Location     Type
   640 ;;                  1    wreg      void 
   641 ;; Registers used:
   642 ;;		wreg, status,2, status,0, cstack
   643 ;; Tracked objects:
   644 ;;		On entry : 0/0
   645 ;;		On exit  : 0/0
   646 ;;		Unchanged: 0/0
   647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   651 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   652 ;;Total ram usage:        3 bytes
   653 ;; Hardware stack levels used:    1
   654 ;; Hardware stack levels required when called:    4
   655 ;; This function calls:
   656 ;;		_i2c_address
   657 ;;		_i2c_start
   658 ;;		_i2c_stop
   659 ;;		_i2c_write
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text1
   666  00050E                     __ptext1:
   667                           	opt stack 0
   668  00050E                     _i2c_writeToReg:
   669                           	opt stack 26
   670                           
   671                           ;incstack = 0
   672                           ;i2c_writeToReg@slaveAddr stored from wreg
   673  00050E  6E25               	movwf	i2c_writeToReg@slaveAddr,c
   674                           
   675                           ;i2c.c: 140: i2c_start();
   676  000510  ECCA  F002         	call	_i2c_start	;wreg free
   677                           
   678                           ;i2c.c: 141: i2c_address(slaveAddr, 0);
   679  000514  0E00               	movlw	0
   680  000516  6E21               	movwf	i2c_address@mode,c
   681  000518  5025               	movf	i2c_writeToReg@slaveAddr,w,c
   682  00051A  ECAC  F002         	call	_i2c_address
   683                           
   684                           ;i2c.c: 142: i2c_write(destAddr);
   685  00051E  5023               	movf	i2c_writeToReg@destAddr,w,c
   686  000520  ECBB  F002         	call	_i2c_write
   687                           
   688                           ;i2c.c: 143: i2c_write(sendData);
   689  000524  5024               	movf	i2c_writeToReg@sendData,w,c
   690  000526  ECBB  F002         	call	_i2c_write
   691                           
   692                           ;i2c.c: 144: i2c_stop();
   693  00052A  ECC6  F002         	call	_i2c_stop	;wreg free
   694  00052E  0012               	return		;funcret
   695  000530                     __end_of_i2c_writeToReg:
   696                           	opt stack 0
   697                           
   698 ;; *************** function _i2c_init *****************
   699 ;; Defined at:
   700 ;;		line 13 in file "i2c.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;		None
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg, status,2
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   718 ;;Total ram usage:        0 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    2
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_main
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           	psect	text2
   729  000530                     __ptext2:
   730                           	opt stack 0
   731  000530                     _i2c_init:
   732                           	opt stack 28
   733                           
   734                           ;i2c.c: 16: TRISCbits.RC3 = 1;
   735                           
   736                           ;incstack = 0
   737  000530  8694               	bsf	3988,3,c	;volatile
   738                           
   739                           ;i2c.c: 17: TRISCbits.RC4 = 1;
   740  000532  8894               	bsf	3988,4,c	;volatile
   741                           
   742                           ;i2c.c: 20: SSPCON1= 0b00101000;
   743  000534  0E28               	movlw	40
   744  000536  6EC6               	movwf	4038,c	;volatile
   745                           
   746                           ;i2c.c: 21: SSPCON2 = 0x00;
   747  000538  0E00               	movlw	0
   748  00053A  6EC5               	movwf	4037,c	;volatile
   749                           
   750                           ;i2c.c: 24: SSPADD = 79;
   751  00053C  0E4F               	movlw	79
   752  00053E  6EC8               	movwf	4040,c	;volatile
   753                           
   754                           ;i2c.c: 25: SSPSTAT = 0b11000000;
   755  000540  0EC0               	movlw	192
   756  000542  6EC7               	movwf	4039,c	;volatile
   757  000544  0012               	return		;funcret
   758  000546                     __end_of_i2c_init:
   759                           	opt stack 0
   760                           
   761 ;; *************** function _i2c_get_byte *****************
   762 ;; Defined at:
   763 ;;		line 126 in file "i2c.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  slaveAddr       1    wreg     unsigned char 
   766 ;;  dataAddr        1   34[COMRAM] unsigned char 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  slaveAddr       1   37[COMRAM] unsigned char 
   769 ;;  data1           1   36[COMRAM] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2   34[COMRAM] short 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    4
   786 ;; This function calls:
   787 ;;		_i2c_address
   788 ;;		_i2c_read
   789 ;;		_i2c_restart
   790 ;;		_i2c_start
   791 ;;		_i2c_stop
   792 ;;		_i2c_write
   793 ;; This function is called by:
   794 ;;		_main
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           	psect	text3
   799  0004B0                     __ptext3:
   800                           	opt stack 0
   801  0004B0                     _i2c_get_byte:
   802                           	opt stack 26
   803                           
   804                           ;incstack = 0
   805                           ;i2c_get_byte@slaveAddr stored from wreg
   806  0004B0  6E26               	movwf	i2c_get_byte@slaveAddr,c
   807                           
   808                           ;i2c.c: 128: i2c_start();
   809  0004B2  ECCA  F002         	call	_i2c_start	;wreg free
   810                           
   811                           ;i2c.c: 129: i2c_address(slaveAddr, 0);
   812  0004B6  0E00               	movlw	0
   813  0004B8  6E21               	movwf	i2c_address@mode,c
   814  0004BA  5026               	movf	i2c_get_byte@slaveAddr,w,c
   815  0004BC  ECAC  F002         	call	_i2c_address
   816                           
   817                           ;i2c.c: 130: i2c_write(dataAddr);
   818  0004C0  5023               	movf	i2c_get_byte@dataAddr,w,c
   819  0004C2  ECBB  F002         	call	_i2c_write
   820                           
   821                           ;i2c.c: 131: i2c_restart();
   822  0004C6  ECCE  F002         	call	_i2c_restart	;wreg free
   823                           
   824                           ;i2c.c: 132: i2c_address(slaveAddr, 1);
   825  0004CA  0E01               	movlw	1
   826  0004CC  6E21               	movwf	i2c_address@mode,c
   827  0004CE  5026               	movf	i2c_get_byte@slaveAddr,w,c
   828  0004D0  ECAC  F002         	call	_i2c_address
   829                           
   830                           ;i2c.c: 133: unsigned char data1 = i2c_read(0);
   831  0004D4  0E00               	movlw	0
   832  0004D6  EC74  F002         	call	_i2c_read
   833  0004DA  6E25               	movwf	i2c_get_byte@data1,c
   834                           
   835                           ;i2c.c: 134: i2c_stop();
   836  0004DC  ECC6  F002         	call	_i2c_stop	;wreg free
   837                           
   838                           ;i2c.c: 135: return data1;
   839  0004E0  C025  F023         	movff	i2c_get_byte@data1,?_i2c_get_byte
   840  0004E4  6A24               	clrf	?_i2c_get_byte+1,c
   841  0004E6  0012               	return	
   842  0004E8                     __end_of_i2c_get_byte:
   843                           	opt stack 0
   844                           
   845 ;; *************** function _i2c_write *****************
   846 ;; Defined at:
   847 ;;		line 55 in file "i2c.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;  data            1    wreg     unsigned char 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  data            1   32[COMRAM] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   862 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   864 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   865 ;;Total ram usage:        1 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    3
   868 ;; This function calls:
   869 ;;		_i2c_wait
   870 ;; This function is called by:
   871 ;;		_i2c_get_byte
   872 ;;		_i2c_writeToReg
   873 ;;		_i2c_get_udata
   874 ;;		_i2c_get_data
   875 ;;		_i2c_write_raw
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text4
   880  000576                     __ptext4:
   881                           	opt stack 0
   882  000576                     _i2c_write:
   883                           	opt stack 26
   884                           
   885                           ;incstack = 0
   886                           ;i2c_write@data stored from wreg
   887  000576  6E21               	movwf	i2c_write@data,c
   888                           
   889                           ;i2c.c: 57: i2c_wait();
   890  000578  ECA3  F002         	call	_i2c_wait	;wreg free
   891                           
   892                           ;i2c.c: 58: SSPBUF = data;
   893  00057C  C021  FFC9         	movff	i2c_write@data,4041	;volatile
   894  000580  0012               	return		;funcret
   895  000582                     __end_of_i2c_write:
   896                           	opt stack 0
   897                           
   898 ;; *************** function _i2c_stop *****************
   899 ;; Defined at:
   900 ;;		line 48 in file "i2c.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    3
   921 ;; This function calls:
   922 ;;		_i2c_wait
   923 ;; This function is called by:
   924 ;;		_i2c_get_byte
   925 ;;		_i2c_writeToReg
   926 ;;		_i2c_get_udata
   927 ;;		_i2c_get_data
   928 ;;		_i2c_write_raw
   929 ;; This function uses a non-reentrant model
   930 ;;
   931                           
   932                           	psect	text5
   933  00058C                     __ptext5:
   934                           	opt stack 0
   935  00058C                     _i2c_stop:
   936                           	opt stack 26
   937                           
   938                           ;i2c.c: 50: i2c_wait();
   939                           
   940                           ;incstack = 0
   941  00058C  ECA3  F002         	call	_i2c_wait	;wreg free
   942                           
   943                           ;i2c.c: 51: SSPCON2bits.PEN = 1;
   944  000590  84C5               	bsf	4037,2,c	;volatile
   945  000592  0012               	return		;funcret
   946  000594                     __end_of_i2c_stop:
   947                           	opt stack 0
   948                           
   949 ;; *************** function _i2c_start *****************
   950 ;; Defined at:
   951 ;;		line 35 in file "i2c.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;		None
   954 ;; Auto vars:     Size  Location     Type
   955 ;;		None
   956 ;; Return value:  Size  Location     Type
   957 ;;                  1    wreg      void 
   958 ;; Registers used:
   959 ;;		wreg, status,2, status,0, cstack
   960 ;; Tracked objects:
   961 ;;		On entry : 0/0
   962 ;;		On exit  : 0/0
   963 ;;		Unchanged: 0/0
   964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   969 ;;Total ram usage:        0 bytes
   970 ;; Hardware stack levels used:    1
   971 ;; Hardware stack levels required when called:    3
   972 ;; This function calls:
   973 ;;		_i2c_wait
   974 ;; This function is called by:
   975 ;;		_i2c_get_byte
   976 ;;		_i2c_writeToReg
   977 ;;		_i2c_get_udata
   978 ;;		_i2c_get_data
   979 ;;		_i2c_write_raw
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text6
   984  000594                     __ptext6:
   985                           	opt stack 0
   986  000594                     _i2c_start:
   987                           	opt stack 26
   988                           
   989                           ;i2c.c: 37: i2c_wait();
   990                           
   991                           ;incstack = 0
   992  000594  ECA3  F002         	call	_i2c_wait	;wreg free
   993                           
   994                           ;i2c.c: 38: SSPCON2bits.SEN = 1;
   995  000598  80C5               	bsf	4037,0,c	;volatile
   996  00059A  0012               	return		;funcret
   997  00059C                     __end_of_i2c_start:
   998                           	opt stack 0
   999                           
  1000 ;; *************** function _i2c_restart *****************
  1001 ;; Defined at:
  1002 ;;		line 42 in file "i2c.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    3
  1023 ;; This function calls:
  1024 ;;		_i2c_wait
  1025 ;; This function is called by:
  1026 ;;		_i2c_get_byte
  1027 ;;		_i2c_get_udata
  1028 ;;		_i2c_get_data
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           	psect	text7
  1033  00059C                     __ptext7:
  1034                           	opt stack 0
  1035  00059C                     _i2c_restart:
  1036                           	opt stack 26
  1037                           
  1038                           ;i2c.c: 43: i2c_wait();
  1039                           
  1040                           ;incstack = 0
  1041  00059C  ECA3  F002         	call	_i2c_wait	;wreg free
  1042                           
  1043                           ;i2c.c: 44: SSPCON2bits.RSEN = 1;
  1044  0005A0  82C5               	bsf	4037,1,c	;volatile
  1045  0005A2  0012               	return		;funcret
  1046  0005A4                     __end_of_i2c_restart:
  1047                           	opt stack 0
  1048                           
  1049 ;; *************** function _i2c_read *****************
  1050 ;; Defined at:
  1051 ;;		line 70 in file "i2c.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  ack             1    wreg     unsigned char 
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;  ack             1   32[COMRAM] unsigned char 
  1056 ;;  i2cReadData     1   33[COMRAM] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      unsigned char 
  1059 ;; Registers used:
  1060 ;;		wreg, status,2, status,0, cstack
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1070 ;;Total ram usage:        2 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; Hardware stack levels required when called:    3
  1073 ;; This function calls:
  1074 ;;		_i2c_wait
  1075 ;; This function is called by:
  1076 ;;		_i2c_get_byte
  1077 ;;		_i2c_get_udata
  1078 ;;		_i2c_get_data
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text8
  1083  0004E8                     __ptext8:
  1084                           	opt stack 0
  1085  0004E8                     _i2c_read:
  1086                           	opt stack 26
  1087                           
  1088                           ;incstack = 0
  1089                           ;i2c_read@ack stored from wreg
  1090  0004E8  6E21               	movwf	i2c_read@ack,c
  1091                           
  1092                           ;i2c.c: 75: unsigned char i2cReadData;
  1093                           ;i2c.c: 77: i2c_wait();
  1094  0004EA  ECA3  F002         	call	_i2c_wait	;wreg free
  1095                           
  1096                           ;i2c.c: 78: SSPCON2bits.RCEN = 1;
  1097  0004EE  86C5               	bsf	4037,3,c	;volatile
  1098                           
  1099                           ;i2c.c: 79: i2c_wait();
  1100  0004F0  ECA3  F002         	call	_i2c_wait	;wreg free
  1101                           
  1102                           ;i2c.c: 80: i2cReadData = SSPBUF;
  1103  0004F4  CFC9 F022          	movff	4041,i2c_read@i2cReadData	;volatile
  1104                           
  1105                           ;i2c.c: 81: i2c_wait();
  1106  0004F8  ECA3  F002         	call	_i2c_wait	;wreg free
  1107                           
  1108                           ;i2c.c: 82: if (ack)
  1109  0004FC  5021               	movf	i2c_read@ack,w,c
  1110  0004FE  B4D8               	btfsc	status,2,c
  1111  000500  D002               	goto	l330
  1112                           
  1113                           ;i2c.c: 83: ACKDT = 0;
  1114  000502  9AC5               	bcf	4037,5,c	;volatile
  1115  000504  D001               	goto	l331
  1116  000506                     l330:
  1117                           
  1118                           ;i2c.c: 84: else
  1119                           ;i2c.c: 85: ACKDT = 1;
  1120  000506  8AC5               	bsf	4037,5,c	;volatile
  1121  000508                     l331:
  1122                           
  1123                           ;i2c.c: 86: SSPCON2bits.ACKEN = 1;
  1124  000508  88C5               	bsf	4037,4,c	;volatile
  1125                           
  1126                           ;i2c.c: 88: return i2cReadData;
  1127  00050A  5022               	movf	i2c_read@i2cReadData,w,c
  1128  00050C  0012               	return	
  1129  00050E                     __end_of_i2c_read:
  1130                           	opt stack 0
  1131                           status	equ	0xFD8
  1132                           
  1133 ;; *************** function _i2c_address *****************
  1134 ;; Defined at:
  1135 ;;		line 63 in file "i2c.c"
  1136 ;; Parameters:    Size  Location     Type
  1137 ;;  address         1    wreg     unsigned char 
  1138 ;;  mode            1   32[COMRAM] unsigned char 
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;  address         1   33[COMRAM] unsigned char 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, status,2, status,0, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1150 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;Total ram usage:        2 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    3
  1157 ;; This function calls:
  1158 ;;		_i2c_wait
  1159 ;; This function is called by:
  1160 ;;		_i2c_get_byte
  1161 ;;		_i2c_writeToReg
  1162 ;;		_i2c_get_udata
  1163 ;;		_i2c_get_data
  1164 ;;		_i2c_write_raw
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text9
  1169  000558                     __ptext9:
  1170                           	opt stack 0
  1171  000558                     _i2c_address:
  1172                           	opt stack 26
  1173                           
  1174                           ;incstack = 0
  1175                           ;i2c_address@address stored from wreg
  1176  000558  6E22               	movwf	i2c_address@address,c
  1177                           
  1178                           ;i2c.c: 65: i2c_wait();
  1179  00055A  ECA3  F002         	call	_i2c_wait	;wreg free
  1180                           
  1181                           ;i2c.c: 66: SSPBUF = (address << 1) + mode;
  1182  00055E  5022               	movf	i2c_address@address,w,c
  1183  000560  2422               	addwf	i2c_address@address,w,c
  1184  000562  2421               	addwf	i2c_address@mode,w,c
  1185  000564  6EC9               	movwf	4041,c	;volatile
  1186  000566  0012               	return		;funcret
  1187  000568                     __end_of_i2c_address:
  1188                           	opt stack 0
  1189                           status	equ	0xFD8
  1190                           
  1191 ;; *************** function _i2c_wait *****************
  1192 ;; Defined at:
  1193 ;;		line 30 in file "i2c.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1211 ;;Total ram usage:        1 bytes
  1212 ;; Hardware stack levels used:    1
  1213 ;; Hardware stack levels required when called:    2
  1214 ;; This function calls:
  1215 ;;		Nothing
  1216 ;; This function is called by:
  1217 ;;		_i2c_start
  1218 ;;		_i2c_restart
  1219 ;;		_i2c_stop
  1220 ;;		_i2c_write
  1221 ;;		_i2c_address
  1222 ;;		_i2c_read
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text10
  1227  000546                     __ptext10:
  1228                           	opt stack 0
  1229  000546                     _i2c_wait:
  1230                           	opt stack 26
  1231  000546                     l1287:
  1232  000546  CFC5 F020          	movff	4037,??_i2c_wait	;volatile
  1233  00054A  0E1F               	movlw	31
  1234  00054C  1620               	andwf	??_i2c_wait,f,c
  1235  00054E  A4D8               	btfss	status,2,c
  1236  000550  D7FA               	goto	l1287
  1237  000552  A4C7               	btfss	4039,2,c	;volatile
  1238  000554  0012               	return	
  1239  000556  D7F7               	goto	l1287
  1240  000558                     __end_of_i2c_wait:
  1241                           	opt stack 0
  1242                           status	equ	0xFD8
  1243                           
  1244 ;; *************** function _ecan_send *****************
  1245 ;; Defined at:
  1246 ;;		line 110 in file "can.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;  mess            2   31[COMRAM] PTR struct Message
  1249 ;;		 -> main@accelPack(11), 
  1250 ;; Auto vars:     Size  Location     Type
  1251 ;;		None
  1252 ;; Return value:  Size  Location     Type
  1253 ;;                  1    wreg      void 
  1254 ;; Registers used:
  1255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1256 ;; Tracked objects:
  1257 ;;		On entry : 0/0
  1258 ;;		On exit  : 0/0
  1259 ;;		Unchanged: 0/0
  1260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1261 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1264 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1265 ;;Total ram usage:        4 bytes
  1266 ;; Hardware stack levels used:    1
  1267 ;; Hardware stack levels required when called:    2
  1268 ;; This function calls:
  1269 ;;		Nothing
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text11
  1276  00034E                     __ptext11:
  1277                           	opt stack 0
  1278  00034E                     _ecan_send:
  1279                           	opt stack 28
  1280                           
  1281                           ;can.c: 112: TXB0D7 = mess->data[7];
  1282                           
  1283                           ;incstack = 0
  1284  00034E  EE20 F007          	lfsr	2,7
  1285  000352  5020               	movf	ecan_send@mess,w,c
  1286  000354  26D9               	addwf	fsr2l,f,c
  1287  000356  5021               	movf	ecan_send@mess+1,w,c
  1288  000358  22DA               	addwfc	fsr2h,f,c
  1289  00035A  50DF               	movf	indf2,w,c
  1290  00035C  010F               	movlb	15	; () banked
  1291  00035E  6F4D               	movwf	77,b	;volatile
  1292                           
  1293                           ;can.c: 113: TXB0D6 = mess->data[6];
  1294  000360  EE20 F006          	lfsr	2,6
  1295  000364  5020               	movf	ecan_send@mess,w,c
  1296  000366  26D9               	addwf	fsr2l,f,c
  1297  000368  5021               	movf	ecan_send@mess+1,w,c
  1298  00036A  22DA               	addwfc	fsr2h,f,c
  1299  00036C  50DF               	movf	indf2,w,c
  1300  00036E  010F               	movlb	15	; () banked
  1301  000370  6F4C               	movwf	76,b	;volatile
  1302                           
  1303                           ;can.c: 114: TXB0D5 = mess->data[5];
  1304  000372  EE20 F005          	lfsr	2,5
  1305  000376  5020               	movf	ecan_send@mess,w,c
  1306  000378  26D9               	addwf	fsr2l,f,c
  1307  00037A  5021               	movf	ecan_send@mess+1,w,c
  1308  00037C  22DA               	addwfc	fsr2h,f,c
  1309  00037E  50DF               	movf	indf2,w,c
  1310  000380  010F               	movlb	15	; () banked
  1311  000382  6F4B               	movwf	75,b	;volatile
  1312                           
  1313                           ;can.c: 115: TXB0D4 = mess->data[4];
  1314  000384  EE20 F004          	lfsr	2,4
  1315  000388  5020               	movf	ecan_send@mess,w,c
  1316  00038A  26D9               	addwf	fsr2l,f,c
  1317  00038C  5021               	movf	ecan_send@mess+1,w,c
  1318  00038E  22DA               	addwfc	fsr2h,f,c
  1319  000390  50DF               	movf	indf2,w,c
  1320  000392  010F               	movlb	15	; () banked
  1321  000394  6F4A               	movwf	74,b	;volatile
  1322                           
  1323                           ;can.c: 116: TXB0D3 = mess->data[3];
  1324  000396  EE20 F003          	lfsr	2,3
  1325  00039A  5020               	movf	ecan_send@mess,w,c
  1326  00039C  26D9               	addwf	fsr2l,f,c
  1327  00039E  5021               	movf	ecan_send@mess+1,w,c
  1328  0003A0  22DA               	addwfc	fsr2h,f,c
  1329  0003A2  50DF               	movf	indf2,w,c
  1330  0003A4  010F               	movlb	15	; () banked
  1331  0003A6  6F49               	movwf	73,b	;volatile
  1332                           
  1333                           ;can.c: 117: TXB0D2 = mess->data[2];
  1334  0003A8  EE20 F002          	lfsr	2,2
  1335  0003AC  5020               	movf	ecan_send@mess,w,c
  1336  0003AE  26D9               	addwf	fsr2l,f,c
  1337  0003B0  5021               	movf	ecan_send@mess+1,w,c
  1338  0003B2  22DA               	addwfc	fsr2h,f,c
  1339  0003B4  50DF               	movf	indf2,w,c
  1340  0003B6  010F               	movlb	15	; () banked
  1341  0003B8  6F48               	movwf	72,b	;volatile
  1342                           
  1343                           ;can.c: 118: TXB0D1 = mess->data[1];
  1344  0003BA  EE20 F001          	lfsr	2,1
  1345  0003BE  5020               	movf	ecan_send@mess,w,c
  1346  0003C0  26D9               	addwf	fsr2l,f,c
  1347  0003C2  5021               	movf	ecan_send@mess+1,w,c
  1348  0003C4  22DA               	addwfc	fsr2h,f,c
  1349  0003C6  50DF               	movf	indf2,w,c
  1350  0003C8  010F               	movlb	15	; () banked
  1351  0003CA  6F47               	movwf	71,b	;volatile
  1352                           
  1353                           ; BSR set to: 15
  1354                           ;can.c: 119: TXB0D0 = mess->data[0];
  1355  0003CC  C020  FFD9         	movff	ecan_send@mess,fsr2l
  1356  0003D0  C021  FFDA         	movff	ecan_send@mess+1,fsr2h
  1357  0003D4  50DF               	movf	indf2,w,c
  1358  0003D6  010F               	movlb	15	; () banked
  1359  0003D8  6F46               	movwf	70,b	;volatile
  1360                           
  1361                           ; BSR set to: 15
  1362                           ;can.c: 121: TXB0DLC = mess->len;
  1363  0003DA  EE20 F00A          	lfsr	2,10
  1364  0003DE  5020               	movf	ecan_send@mess,w,c
  1365  0003E0  26D9               	addwf	fsr2l,f,c
  1366  0003E2  5021               	movf	ecan_send@mess+1,w,c
  1367  0003E4  22DA               	addwfc	fsr2h,f,c
  1368  0003E6  50DF               	movf	indf2,w,c
  1369  0003E8  010F               	movlb	15	; () banked
  1370  0003EA  6F45               	movwf	69,b	;volatile
  1371                           
  1372                           ; BSR set to: 15
  1373                           ;can.c: 124: TXB0SIDH = (mess->sid) >> 3;
  1374  0003EC  EE20 F008          	lfsr	2,8
  1375  0003F0  5020               	movf	ecan_send@mess,w,c
  1376  0003F2  26D9               	addwf	fsr2l,f,c
  1377  0003F4  5021               	movf	ecan_send@mess+1,w,c
  1378  0003F6  22DA               	addwfc	fsr2h,f,c
  1379  0003F8  CFDE F022          	movff	postinc2,??_ecan_send
  1380  0003FC  CFDD F023          	movff	postdec2,??_ecan_send+1
  1381  000400  3423               	rlcf	??_ecan_send+1,w,c
  1382  000402  3223               	rrcf	??_ecan_send+1,f,c
  1383  000404  3222               	rrcf	??_ecan_send,f,c
  1384  000406  3423               	rlcf	??_ecan_send+1,w,c
  1385  000408  3223               	rrcf	??_ecan_send+1,f,c
  1386  00040A  3222               	rrcf	??_ecan_send,f,c
  1387  00040C  3423               	rlcf	??_ecan_send+1,w,c
  1388  00040E  3223               	rrcf	??_ecan_send+1,f,c
  1389  000410  3222               	rrcf	??_ecan_send,f,c
  1390  000412  5022               	movf	??_ecan_send,w,c
  1391  000414  010F               	movlb	15	; () banked
  1392  000416  6F41               	movwf	65,b	;volatile
  1393                           
  1394                           ; BSR set to: 15
  1395                           ;can.c: 125: TXB0SIDL = (mess->sid) << 5;
  1396  000418  EE20 F008          	lfsr	2,8
  1397  00041C  5020               	movf	ecan_send@mess,w,c
  1398  00041E  26D9               	addwf	fsr2l,f,c
  1399  000420  5021               	movf	ecan_send@mess+1,w,c
  1400  000422  22DA               	addwfc	fsr2h,f,c
  1401  000424  50DF               	movf	indf2,w,c
  1402  000426  6E22               	movwf	??_ecan_send& (0+255),c
  1403  000428  0E05               	movlw	5
  1404  00042A  6E23               	movwf	(??_ecan_send+1)& (0+255),c
  1405  00042C                     u305:
  1406  00042C  90D8               	bcf	status,0,c
  1407  00042E  3622               	rlcf	??_ecan_send,f,c
  1408  000430  2E23               	decfsz	(??_ecan_send+1)& (0+255),f,c
  1409  000432  D7FC               	goto	u305
  1410  000434  5022               	movf	??_ecan_send,w,c
  1411  000436  010F               	movlb	15	; () banked
  1412  000438  6F42               	movwf	66,b	;volatile
  1413                           
  1414                           ; BSR set to: 15
  1415                           ;can.c: 126: TXB0SIDLbits.EXIDE = 0;
  1416  00043A  010F               	movlb	15	; () banked
  1417  00043C  9742               	bcf	66,3,b	;volatile
  1418                           
  1419                           ; BSR set to: 15
  1420                           ;can.c: 129: TXB0CONbits.TXREQ = 1;
  1421  00043E  010F               	movlb	15	; () banked
  1422  000440  8740               	bsf	64,3,b	;volatile
  1423                           
  1424                           ; BSR set to: 15
  1425  000442  0012               	return		;funcret
  1426  000444                     __end_of_ecan_send:
  1427                           	opt stack 0
  1428                           indf2	equ	0xFDF
  1429                           postinc2	equ	0xFDE
  1430                           postdec2	equ	0xFDD
  1431                           fsr2h	equ	0xFDA
  1432                           fsr2l	equ	0xFD9
  1433                           status	equ	0xFD8
  1434                           
  1435 ;; *************** function _ecan_init *****************
  1436 ;; Defined at:
  1437 ;;		line 11 in file "can.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;		None
  1440 ;; Auto vars:     Size  Location     Type
  1441 ;;  mask1           2   39[COMRAM] short 
  1442 ;;  sid1            2   37[COMRAM] short 
  1443 ;;  mask0           2   35[COMRAM] short 
  1444 ;;  sid0            2   33[COMRAM] short 
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1455 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1456 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1457 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1458 ;;Total ram usage:       10 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    2
  1461 ;; This function calls:
  1462 ;;		Nothing
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           	psect	text12
  1469  00021A                     __ptext12:
  1470                           	opt stack 0
  1471  00021A                     _ecan_init:
  1472                           	opt stack 28
  1473                           
  1474                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  1475                           
  1476                           ; BSR set to: 15
  1477                           ;incstack = 0
  1478  00021A  9493               	bcf	3987,2,c	;volatile
  1479                           
  1480                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  1481  00021C  8693               	bsf	3987,3,c	;volatile
  1482                           
  1483                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  1484  00021E  8E6F               	bsf	3951,7,c	;volatile
  1485  000220                     l256:
  1486  000220  AE6E               	btfss	3950,7,c	;volatile
  1487  000222  AC6E               	btfss	3950,6,c	;volatile
  1488  000224  D002               	goto	l260
  1489  000226  BA6E               	btfsc	3950,5,c	;volatile
  1490  000228  D7FB               	goto	l256
  1491  00022A                     l260:
  1492                           
  1493                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  1494  00022A  9A73               	bcf	3955,5,c	;volatile
  1495                           
  1496                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  1497  00022C  9E70               	bcf	3952,7,c	;volatile
  1498                           
  1499                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  1500  00022E  9C70               	bcf	3952,6,c	;volatile
  1501                           
  1502                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  1503  000230  9A70               	bcf	3952,5,c	;volatile
  1504                           
  1505                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  1506  000232  9870               	bcf	3952,4,c	;volatile
  1507                           
  1508                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  1509  000234  9670               	bcf	3952,3,c	;volatile
  1510                           
  1511                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  1512  000236  9470               	bcf	3952,2,c	;volatile
  1513                           
  1514                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  1515  000238  9270               	bcf	3952,1,c	;volatile
  1516                           
  1517                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  1518  00023A  8070               	bsf	3952,0,c	;volatile
  1519                           
  1520                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  1521  00023C  8E71               	bsf	3953,7,c	;volatile
  1522                           
  1523                           ;can.c: 39: BRGCON2bits.SAM = 1;
  1524  00023E  8C71               	bsf	3953,6,c	;volatile
  1525                           
  1526                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  1527  000240  9A71               	bcf	3953,5,c	;volatile
  1528                           
  1529                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  1530  000242  9871               	bcf	3953,4,c	;volatile
  1531                           
  1532                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  1533  000244  8671               	bsf	3953,3,c	;volatile
  1534                           
  1535                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  1536  000246  9471               	bcf	3953,2,c	;volatile
  1537                           
  1538                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  1539  000248  8271               	bsf	3953,1,c	;volatile
  1540                           
  1541                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  1542  00024A  9071               	bcf	3953,0,c	;volatile
  1543                           
  1544                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  1545  00024C  9472               	bcf	3954,2,c	;volatile
  1546                           
  1547                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  1548  00024E  9272               	bcf	3954,1,c	;volatile
  1549                           
  1550                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  1551  000250  8072               	bsf	3954,0,c	;volatile
  1552                           
  1553                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  1554  000252  9E77               	bcf	3959,7,c	;volatile
  1555                           
  1556                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  1557  000254  9C77               	bcf	3959,6,c	;volatile
  1558                           
  1559                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  1560  000256  9C60               	bcf	3936,6,c	;volatile
  1561                           
  1562                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  1563  000258  8A60               	bsf	3936,5,c	;volatile
  1564                           
  1565                           ;can.c: 67: RXB1CONbits.RXM1 = 0;
  1566  00025A  010F               	movlb	15	; () banked
  1567  00025C  9D50               	bcf	80,6,b	;volatile
  1568                           
  1569                           ;can.c: 68: RXB1CONbits.RXM0 = 1;
  1570  00025E  010F               	movlb	15	; () banked
  1571  000260  8B50               	bsf	80,5,b	;volatile
  1572                           
  1573                           ; BSR set to: 15
  1574                           ;can.c: 77: short sid0 = 0x001;
  1575  000262  0E00               	movlw	0
  1576  000264  6E23               	movwf	ecan_init@sid0+1,c
  1577  000266  0E01               	movlw	1
  1578  000268  6E22               	movwf	ecan_init@sid0,c
  1579                           
  1580                           ;can.c: 78: short mask0 = 0x001;
  1581  00026A  0E00               	movlw	0
  1582  00026C  6E25               	movwf	ecan_init@mask0+1,c
  1583  00026E  0E01               	movlw	1
  1584  000270  6E24               	movwf	ecan_init@mask0,c
  1585                           
  1586                           ; BSR set to: 15
  1587                           ;can.c: 80: RXF0SIDH = sid0 >> 3;
  1588  000272  C022  F020         	movff	ecan_init@sid0,??_ecan_init
  1589  000276  C023  F021         	movff	ecan_init@sid0+1,??_ecan_init+1
  1590  00027A  3421               	rlcf	??_ecan_init+1,w,c
  1591  00027C  3221               	rrcf	??_ecan_init+1,f,c
  1592  00027E  3220               	rrcf	??_ecan_init,f,c
  1593  000280  3421               	rlcf	??_ecan_init+1,w,c
  1594  000282  3221               	rrcf	??_ecan_init+1,f,c
  1595  000284  3220               	rrcf	??_ecan_init,f,c
  1596  000286  3421               	rlcf	??_ecan_init+1,w,c
  1597  000288  3221               	rrcf	??_ecan_init+1,f,c
  1598  00028A  3220               	rrcf	??_ecan_init,f,c
  1599  00028C  5020               	movf	??_ecan_init,w,c
  1600  00028E  010F               	movlb	15	; () banked
  1601  000290  6F00               	movwf	0,b	;volatile
  1602                           
  1603                           ; BSR set to: 15
  1604                           ;can.c: 81: RXF0SIDL = sid0 << 5;
  1605  000292  3822               	swapf	ecan_init@sid0,w,c
  1606  000294  46E8               	rlncf	wreg,f,c
  1607  000296  0BE0               	andlw	224
  1608  000298  010F               	movlb	15	; () banked
  1609  00029A  6F01               	movwf	1,b	;volatile
  1610                           
  1611                           ; BSR set to: 15
  1612                           ;can.c: 82: RXM0SIDH = mask0 >> 3;
  1613  00029C  C024  F020         	movff	ecan_init@mask0,??_ecan_init
  1614  0002A0  C025  F021         	movff	ecan_init@mask0+1,??_ecan_init+1
  1615  0002A4  3421               	rlcf	??_ecan_init+1,w,c
  1616  0002A6  3221               	rrcf	??_ecan_init+1,f,c
  1617  0002A8  3220               	rrcf	??_ecan_init,f,c
  1618  0002AA  3421               	rlcf	??_ecan_init+1,w,c
  1619  0002AC  3221               	rrcf	??_ecan_init+1,f,c
  1620  0002AE  3220               	rrcf	??_ecan_init,f,c
  1621  0002B0  3421               	rlcf	??_ecan_init+1,w,c
  1622  0002B2  3221               	rrcf	??_ecan_init+1,f,c
  1623  0002B4  3220               	rrcf	??_ecan_init,f,c
  1624  0002B6  5020               	movf	??_ecan_init,w,c
  1625  0002B8  010F               	movlb	15	; () banked
  1626  0002BA  6F18               	movwf	24,b	;volatile
  1627                           
  1628                           ; BSR set to: 15
  1629                           ;can.c: 83: RXM0SIDL = mask0 << 5;
  1630  0002BC  3824               	swapf	ecan_init@mask0,w,c
  1631  0002BE  46E8               	rlncf	wreg,f,c
  1632  0002C0  0BE0               	andlw	224
  1633  0002C2  010F               	movlb	15	; () banked
  1634  0002C4  6F19               	movwf	25,b	;volatile
  1635                           
  1636                           ; BSR set to: 15
  1637                           ;can.c: 84: RXF0SIDLbits.EXIDEN = 0;
  1638  0002C6  010F               	movlb	15	; () banked
  1639  0002C8  9701               	bcf	1,3,b	;volatile
  1640                           
  1641                           ; BSR set to: 15
  1642                           ;can.c: 85: RXFCON0bits.RXF0EN = 1;
  1643  0002CA  010D               	movlb	13	; () banked
  1644  0002CC  81D4               	bsf	212,0,b	;volatile
  1645                           
  1646                           ;can.c: 89: short sid1 = 0x000;
  1647  0002CE  0E00               	movlw	0
  1648  0002D0  6E27               	movwf	ecan_init@sid1+1,c
  1649  0002D2  0E00               	movlw	0
  1650  0002D4  6E26               	movwf	ecan_init@sid1,c
  1651                           
  1652                           ;can.c: 90: short mask1 = 0x001;
  1653  0002D6  0E00               	movlw	0
  1654  0002D8  6E29               	movwf	ecan_init@mask1+1,c
  1655  0002DA  0E01               	movlw	1
  1656  0002DC  6E28               	movwf	ecan_init@mask1,c
  1657                           
  1658                           ; BSR set to: 13
  1659                           ;can.c: 92: RXF2SIDH = sid1 >> 3;
  1660  0002DE  C026  F020         	movff	ecan_init@sid1,??_ecan_init
  1661  0002E2  C027  F021         	movff	ecan_init@sid1+1,??_ecan_init+1
  1662  0002E6  3421               	rlcf	??_ecan_init+1,w,c
  1663  0002E8  3221               	rrcf	??_ecan_init+1,f,c
  1664  0002EA  3220               	rrcf	??_ecan_init,f,c
  1665  0002EC  3421               	rlcf	??_ecan_init+1,w,c
  1666  0002EE  3221               	rrcf	??_ecan_init+1,f,c
  1667  0002F0  3220               	rrcf	??_ecan_init,f,c
  1668  0002F2  3421               	rlcf	??_ecan_init+1,w,c
  1669  0002F4  3221               	rrcf	??_ecan_init+1,f,c
  1670  0002F6  3220               	rrcf	??_ecan_init,f,c
  1671  0002F8  5020               	movf	??_ecan_init,w,c
  1672  0002FA  010F               	movlb	15	; () banked
  1673  0002FC  6F08               	movwf	8,b	;volatile
  1674                           
  1675                           ; BSR set to: 15
  1676                           ;can.c: 93: RXF2SIDL = sid1 << 5;
  1677  0002FE  3826               	swapf	ecan_init@sid1,w,c
  1678  000300  46E8               	rlncf	wreg,f,c
  1679  000302  0BE0               	andlw	224
  1680  000304  010F               	movlb	15	; () banked
  1681  000306  6F09               	movwf	9,b	;volatile
  1682                           
  1683                           ; BSR set to: 15
  1684                           ;can.c: 94: RXM1SIDH = mask1 >> 3;
  1685  000308  C028  F020         	movff	ecan_init@mask1,??_ecan_init
  1686  00030C  C029  F021         	movff	ecan_init@mask1+1,??_ecan_init+1
  1687  000310  3421               	rlcf	??_ecan_init+1,w,c
  1688  000312  3221               	rrcf	??_ecan_init+1,f,c
  1689  000314  3220               	rrcf	??_ecan_init,f,c
  1690  000316  3421               	rlcf	??_ecan_init+1,w,c
  1691  000318  3221               	rrcf	??_ecan_init+1,f,c
  1692  00031A  3220               	rrcf	??_ecan_init,f,c
  1693  00031C  3421               	rlcf	??_ecan_init+1,w,c
  1694  00031E  3221               	rrcf	??_ecan_init+1,f,c
  1695  000320  3220               	rrcf	??_ecan_init,f,c
  1696  000322  5020               	movf	??_ecan_init,w,c
  1697  000324  010F               	movlb	15	; () banked
  1698  000326  6F1C               	movwf	28,b	;volatile
  1699                           
  1700                           ; BSR set to: 15
  1701                           ;can.c: 95: RXM1SIDL = mask1 << 5;
  1702  000328  3828               	swapf	ecan_init@mask1,w,c
  1703  00032A  46E8               	rlncf	wreg,f,c
  1704  00032C  0BE0               	andlw	224
  1705  00032E  010F               	movlb	15	; () banked
  1706  000330  6F1D               	movwf	29,b	;volatile
  1707                           
  1708                           ; BSR set to: 15
  1709                           ;can.c: 96: RXF1SIDLbits.EXIDEN = 0;
  1710  000332  010F               	movlb	15	; () banked
  1711  000334  9705               	bcf	5,3,b	;volatile
  1712                           
  1713                           ; BSR set to: 15
  1714                           ;can.c: 97: RXFCON0bits.RXF2EN = 1;
  1715  000336  010D               	movlb	13	; () banked
  1716  000338  85D4               	bsf	212,2,b	;volatile
  1717                           
  1718                           ; BSR set to: 13
  1719                           ;can.c: 100: CANCONbits.REQOP2 = 0;
  1720  00033A  9E6F               	bcf	3951,7,c	;volatile
  1721                           
  1722                           ; BSR set to: 13
  1723                           ;can.c: 101: CANCONbits.REQOP1 = 0;
  1724  00033C  9C6F               	bcf	3951,6,c	;volatile
  1725                           
  1726                           ; BSR set to: 13
  1727                           ;can.c: 102: CANCONbits.REQOP0 = 0;
  1728  00033E  9A6F               	bcf	3951,5,c	;volatile
  1729  000340                     l261:
  1730  000340  AE6E               	btfss	3950,7,c	;volatile
  1731  000342  0012               	return	
  1732  000344  AC6E               	btfss	3950,6,c	;volatile
  1733  000346  0012               	return	
  1734  000348  AA6E               	btfss	3950,5,c	;volatile
  1735  00034A  0012               	return	
  1736  00034C  D7F9               	goto	l261
  1737  00034E                     __end_of_ecan_init:
  1738                           	opt stack 0
  1739                           wreg	equ	0xFE8
  1740                           indf2	equ	0xFDF
  1741                           postinc2	equ	0xFDE
  1742                           postdec2	equ	0xFDD
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _ConfigureOscillator *****************
  1748 ;; Defined at:
  1749 ;;		line 26 in file "system.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		None
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1767 ;;Total ram usage:        0 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_main
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           	psect	text13
  1778  000568                     __ptext13:
  1779                           	opt stack 0
  1780  000568                     _ConfigureOscillator:
  1781                           	opt stack 28
  1782                           
  1783                           ;system.c: 31: OSCCONbits.IRCF2 = 1;
  1784                           
  1785                           ;incstack = 0
  1786  000568  8CD3               	bsf	4051,6,c	;volatile
  1787                           
  1788                           ;system.c: 32: OSCCONbits.IRCF1 = 1;
  1789  00056A  8AD3               	bsf	4051,5,c	;volatile
  1790                           
  1791                           ;system.c: 33: OSCCONbits.IRCF0 = 1;
  1792  00056C  88D3               	bsf	4051,4,c	;volatile
  1793                           
  1794                           ;system.c: 35: OSCCONbits.SCS1 = 0;
  1795  00056E  92D3               	bcf	4051,1,c	;volatile
  1796                           
  1797                           ;system.c: 36: OSCCONbits.SCS0 = 0;
  1798  000570  90D3               	bcf	4051,0,c	;volatile
  1799                           
  1800                           ;system.c: 38: OSCTUNEbits.PLLEN = 1;
  1801  000572  8C9B               	bsf	3995,6,c	;volatile
  1802  000574  0012               	return		;funcret
  1803  000576                     __end_of_ConfigureOscillator:
  1804                           	opt stack 0
  1805                           wreg	equ	0xFE8
  1806                           indf2	equ	0xFDF
  1807                           postinc2	equ	0xFDE
  1808                           postdec2	equ	0xFDD
  1809                           fsr2h	equ	0xFDA
  1810                           fsr2l	equ	0xFD9
  1811                           status	equ	0xFD8
  1812                           
  1813 ;; *************** function _low_isr *****************
  1814 ;; Defined at:
  1815 ;;		line 67 in file "interrupts.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;		None
  1818 ;; Auto vars:     Size  Location     Type
  1819 ;;		None
  1820 ;; Return value:  Size  Location     Type
  1821 ;;                  1    wreg      void 
  1822 ;; Registers used:
  1823 ;;		None
  1824 ;; Tracked objects:
  1825 ;;		On entry : 0/0
  1826 ;;		On exit  : 0/0
  1827 ;;		Unchanged: 0/0
  1828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1831 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1832 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1833 ;;Total ram usage:       17 bytes
  1834 ;; Hardware stack levels used:    1
  1835 ;; Hardware stack levels required when called:    1
  1836 ;; This function calls:
  1837 ;;		Nothing
  1838 ;; This function is called by:
  1839 ;;		Interrupt level 1
  1840 ;; This function uses a non-reentrant model
  1841 ;;
  1842                           
  1843                           	psect	intcodelo
  1844  000018                     __pintcodelo:
  1845                           	opt stack 0
  1846  000018                     _low_isr:
  1847                           	opt stack 26
  1848                           
  1849                           ;incstack = 0
  1850  000018  802A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1851  00001A  CFD8 F00F          	movff	status,??_low_isr
  1852  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  1853  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  1854  000026  CFFA F012          	movff	pclath,??_low_isr+3
  1855  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  1856  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  1857  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  1858  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  1859  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  1860  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  1861  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  1862  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  1863  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  1864  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  1865  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  1866  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  1867  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  1868  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
  1869  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
  1870  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  1871  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  1872  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
  1873  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
  1874  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
  1875  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
  1876  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
  1877  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
  1878  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
  1879  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
  1880  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
  1881  000092  C012  FFFA         	movff	??_low_isr+3,pclath
  1882  000096  C011  FFE0         	movff	??_low_isr+2,bsr
  1883  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
  1884  00009E  C00F  FFD8         	movff	??_low_isr,status
  1885  0000A2  902A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1886  0000A4  0010               	retfie	
  1887  0000A6                     __end_of_low_isr:
  1888                           	opt stack 0
  1889                           pclatu	equ	0xFFB
  1890                           pclath	equ	0xFFA
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           prodh	equ	0xFF4
  1896                           prodl	equ	0xFF3
  1897                           fsr0h	equ	0xFEA
  1898                           fsr0l	equ	0xFE9
  1899                           wreg	equ	0xFE8
  1900                           fsr1h	equ	0xFE2
  1901                           fsr1l	equ	0xFE1
  1902                           bsr	equ	0xFE0
  1903                           indf2	equ	0xFDF
  1904                           postinc2	equ	0xFDE
  1905                           postdec2	equ	0xFDD
  1906                           fsr2h	equ	0xFDA
  1907                           fsr2l	equ	0xFD9
  1908                           status	equ	0xFD8
  1909                           
  1910 ;; *************** function _high_isr *****************
  1911 ;; Defined at:
  1912 ;;		line 27 in file "interrupts.c"
  1913 ;; Parameters:    Size  Location     Type
  1914 ;;		None
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;		None
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      void 
  1919 ;; Registers used:
  1920 ;;		None
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1928 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1929 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;Total ram usage:       14 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		Interrupt level 2
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	intcode
  1940  000008                     __pintcode:
  1941                           	opt stack 0
  1942  000008                     _high_isr:
  1943                           	opt stack 26
  1944                           
  1945                           ;incstack = 0
  1946  000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1947  00000A  CFFA F001          	movff	pclath,??_high_isr
  1948  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
  1949  000012  EF22  F002         	goto	int_func
  1950                           pclatu	equ	0xFFB
  1951                           pclath	equ	0xFFA
  1952                           tblptru	equ	0xFF8
  1953                           tblptrh	equ	0xFF7
  1954                           tblptrl	equ	0xFF6
  1955                           tablat	equ	0xFF5
  1956                           prodh	equ	0xFF4
  1957                           prodl	equ	0xFF3
  1958                           fsr0h	equ	0xFEA
  1959                           fsr0l	equ	0xFE9
  1960                           wreg	equ	0xFE8
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           bsr	equ	0xFE0
  1964                           indf2	equ	0xFDF
  1965                           postinc2	equ	0xFDE
  1966                           postdec2	equ	0xFDD
  1967                           fsr2h	equ	0xFDA
  1968                           fsr2l	equ	0xFD9
  1969                           status	equ	0xFD8
  1970                           
  1971                           	psect	intcode_body
  1972  000444                     __pintcode_body:
  1973                           	opt stack 26
  1974  000444                     int_func:
  1975                           	opt stack 26
  1976  000444  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1977  000448  CFEA F004          	movff	fsr0h,??_high_isr+3
  1978  00044C  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1979  000450  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1980  000454  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1981  000458  CFDA F008          	movff	fsr2h,??_high_isr+7
  1982  00045C  CFF3 F009          	movff	prodl,??_high_isr+8
  1983  000460  CFF4 F00A          	movff	prodh,??_high_isr+9
  1984  000464  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1985  000468  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1986  00046C  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1987  000470  CFF5 F00E          	movff	tablat,??_high_isr+13
  1988  000474  C00E  FFF5         	movff	??_high_isr+13,tablat
  1989  000478  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1990  00047C  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1991  000480  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1992  000484  C00A  FFF4         	movff	??_high_isr+9,prodh
  1993  000488  C009  FFF3         	movff	??_high_isr+8,prodl
  1994  00048C  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1995  000490  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1996  000494  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1997  000498  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1998  00049C  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1999  0004A0  C003  FFE9         	movff	??_high_isr+2,fsr0l
  2000  0004A4  C002  FFFB         	movff	??_high_isr+1,pclatu
  2001  0004A8  C001  FFFA         	movff	??_high_isr,pclath
  2002  0004AC  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2003  0004AE  0011               	retfie		f
  2004  0004B0                     __end_of_high_isr:
  2005                           	opt stack 0
  2006  0000                     pclatu	equ	0xFFB
  2007                           pclath	equ	0xFFA
  2008                           tblptru	equ	0xFF8
  2009                           tblptrh	equ	0xFF7
  2010                           tblptrl	equ	0xFF6
  2011                           tablat	equ	0xFF5
  2012                           prodh	equ	0xFF4
  2013                           prodl	equ	0xFF3
  2014                           fsr0h	equ	0xFEA
  2015                           fsr0l	equ	0xFE9
  2016                           wreg	equ	0xFE8
  2017                           fsr1h	equ	0xFE2
  2018                           fsr1l	equ	0xFE1
  2019                           bsr	equ	0xFE0
  2020                           indf2	equ	0xFDF
  2021                           postinc2	equ	0xFDE
  2022                           postdec2	equ	0xFDD
  2023                           fsr2h	equ	0xFDA
  2024                           fsr2l	equ	0xFD9
  2025                           status	equ	0xFD8
  2026                           pclatu	equ	0xFFB
  2027                           pclath	equ	0xFFA
  2028                           tblptru	equ	0xFF8
  2029                           tblptrh	equ	0xFF7
  2030                           tblptrl	equ	0xFF6
  2031                           tablat	equ	0xFF5
  2032                           prodh	equ	0xFF4
  2033                           prodl	equ	0xFF3
  2034                           fsr0h	equ	0xFEA
  2035                           fsr0l	equ	0xFE9
  2036                           wreg	equ	0xFE8
  2037                           fsr1h	equ	0xFE2
  2038                           fsr1l	equ	0xFE1
  2039                           bsr	equ	0xFE0
  2040                           indf2	equ	0xFDF
  2041                           postinc2	equ	0xFDE
  2042                           postdec2	equ	0xFDD
  2043                           fsr2h	equ	0xFDA
  2044                           fsr2l	equ	0xFD9
  2045                           status	equ	0xFD8
  2046                           
  2047                           	psect	rparam
  2048  0000                     pclatu	equ	0xFFB
  2049                           pclath	equ	0xFFA
  2050                           tblptru	equ	0xFF8
  2051                           tblptrh	equ	0xFF7
  2052                           tblptrl	equ	0xFF6
  2053                           tablat	equ	0xFF5
  2054                           prodh	equ	0xFF4
  2055                           prodl	equ	0xFF3
  2056                           fsr0h	equ	0xFEA
  2057                           fsr0l	equ	0xFE9
  2058                           wreg	equ	0xFE8
  2059                           fsr1h	equ	0xFE2
  2060                           fsr1l	equ	0xFE1
  2061                           bsr	equ	0xFE0
  2062                           indf2	equ	0xFDF
  2063                           postinc2	equ	0xFDE
  2064                           postdec2	equ	0xFDD
  2065                           fsr2h	equ	0xFDA
  2066                           fsr2l	equ	0xFD9
  2067                           status	equ	0xFD8
  2068                           
  2069                           	psect	temp
  2070  00002A                     btemp:
  2071                           	opt stack 0
  2072  00002A                     	ds	1
  2073  0000                     int$flags	set	btemp
  2074                           pclatu	equ	0xFFB
  2075                           pclath	equ	0xFFA
  2076                           tblptru	equ	0xFF8
  2077                           tblptrh	equ	0xFF7
  2078                           tblptrl	equ	0xFF6
  2079                           tablat	equ	0xFF5
  2080                           prodh	equ	0xFF4
  2081                           prodl	equ	0xFF3
  2082                           fsr0h	equ	0xFEA
  2083                           fsr0l	equ	0xFE9
  2084                           wreg	equ	0xFE8
  2085                           fsr1h	equ	0xFE2
  2086                           fsr1l	equ	0xFE1
  2087                           bsr	equ	0xFE0
  2088                           indf2	equ	0xFDF
  2089                           postinc2	equ	0xFDE
  2090                           postdec2	equ	0xFDD
  2091                           fsr2h	equ	0xFDA
  2092                           fsr2l	equ	0xFD9
  2093                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      41
    BANK0           160     52      52
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    ecan_send@mess	PTR struct Message size(2) Largest target is 11
		 -> main@accelPack(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_ecan_init
    _i2c_writeToReg->_i2c_address
    _i2c_get_byte->_i2c_address
    _i2c_get_byte->_i2c_read
    _i2c_write->_i2c_wait
    _i2c_stop->_i2c_wait
    _i2c_start->_i2c_wait
    _i2c_restart->_i2c_wait
    _i2c_read->_i2c_wait
    _i2c_address->_i2c_wait

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0    2532
                                              0 BANK0     52    52      0
                _ConfigureOscillator
                          _ecan_init
                          _ecan_send
                       _i2c_get_byte
                           _i2c_init
                     _i2c_writeToReg
 ---------------------------------------------------------------------------------
 (1) _i2c_writeToReg                                       3     1      2     900
                                             34 COMRAM     3     1      2
                        _i2c_address
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_get_byte                                         4     2      2     840
                                             34 COMRAM     4     2      2
                        _i2c_address
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                             32 COMRAM     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             2     2      0      45
                                             32 COMRAM     2     2      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_address                                          2     1      1     556
                                             32 COMRAM     2     1      1
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ecan_send                                            4     2      2     306
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                           10    10      0     180
                                             31 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _ecan_send
   _i2c_get_byte
     _i2c_address
       _i2c_wait
     _i2c_read
       _i2c_wait
     _i2c_restart
       _i2c_wait
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait
   _i2c_init
   _i2c_writeToReg
     _i2c_address
       _i2c_wait
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     29      29       1       43.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     34      34       5       32.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BIGRAM             CFF      0       0      31        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar  1 01:15:18 2016

             i2c_address@mode 0021                   _SSPSTATbits 000FC7                            bsr 000FE0  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l330 0506  
                         l331 0508                           l260 022A                           l261 0340  
                         l256 0220                  __CFG_CPB$OFF 000000                           u305 042C  
                __CFG_CPD$OFF 000000            i2c_address@address 0022                           wreg 000FE8  
     __size_of_i2c_writeToReg 0022                  __CFG_WDT$OFF 000000                          l1287 0546  
                        l1447 01CE                 ?_i2c_get_byte 0023                 ??_i2c_address 0022  
                        _main 00AA                   main@tempOne 007F                   main@tempTwo 0081  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 002A                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A6  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                 ??_i2c_restart 0021  
                ___param_bank 000010          i2c_get_byte@dataAddr 0023                         ?_main 0001  
                       _ACKDT 007E2D                   i2c_read@ack 0021                  main@xGyroRaw 0079  
         _ConfigureOscillator 0568                 __CFG_PWRT$OFF 000000                  main@yGyroRaw 007B  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000                  main@zGyroRaw 007D  
               __CFG_WRT5$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
              __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
              ??_i2c_get_byte 0025               __end_of_low_isr 00A6                         tablat 000FF5  
               main@accelPack 0089                         status 000FD8                __CFG_PBADEN$ON 000000  
        ?_ConfigureOscillator 0001           __end_of_i2c_address 0568               __initialization 0582  
           i2c_get_byte@data1 0025                  __end_of_main 021A                 main@xAccelRaw 0084  
            __end_of_i2c_init 0546              __end_of_i2c_read 050E              __end_of_i2c_wait 0558  
            __end_of_i2c_stop 0594                 main@yAccelRaw 0075                 main@destAddr0 0087  
               main@zAccelRaw 0077           __end_of_i2c_restart 05A4                        ??_main 002A  
               __activetblptr 000000                        _ADRESH 000FC4                        _ADRESL 000FC3  
             __CFG_BBSIZ$1024 000000                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB0D4 000F4A                        _TXB0D5 000F4B                        _TXB0D6 000F4C  
                      _TXB0D7 000F4D                        _SSPADD 000FC8                        _SSPBUF 000FC9  
          __size_of_i2c_start 0008            __size_of_i2c_write 000C         ??_ConfigureOscillator 0020  
              __CFG_XINST$OFF 000000                 main@sendData0 0088              __end_of_high_isr 04B0  
           main@checkRegReady 0083                __CFG_STVREN$ON 000000               __CFG_BOREN$BOHW 000000  
               ecan_init@sid0 0022                 ecan_init@sid1 0026                _i2c_writeToReg 050E  
                   ??_low_isr 000F         i2c_get_byte@slaveAddr 0026                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8       i2c_writeToReg@slaveAddr 0025  
               ecan_send@mess 0020                   _i2c_address 0558                    __accesstop 0060  
     __end_of__initialization 0582                 ___rparam_used 000001                __pcstackCOMRAM 0001  
                 _i2c_restart 059C            __size_of_ecan_init 0134            __size_of_ecan_send 00F6  
        __end_of_i2c_get_byte 04E8             __end_of_i2c_start 059C        __end_of_i2c_writeToReg 0530  
           __end_of_i2c_write 0582           i2c_read@i2cReadData 0022                     ?_i2c_init 0001  
                   ?_i2c_read 0001                     ?_i2c_wait 0001                     ?_i2c_stop 0001  
             ?_i2c_writeToReg 0023                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _TXB0DLC 000F45                       _SSPCON1 000FC6                       _SSPCON2 000FC5  
                   ?_high_isr 0001                       _SSPSTAT 000FC7             __end_of_ecan_init 034E  
           __end_of_ecan_send 0444                    ??_i2c_init 0020                    ??_i2c_read 0021  
                  ??_i2c_wait 0020                    ??_i2c_stop 0021                       __Hparam 0000  
                     __Lparam 0000                main@loopPeriod 0069                       __pcinit 0582  
                     __ramtop 0D00                       __ptext0 00AA                       __ptext1 050E  
                     __ptext2 0530                       __ptext3 04B0                       __ptext4 0576  
                     __ptext5 058C                       __ptext6 0594                       __ptext7 059C  
                     __ptext8 04E8                       __ptext9 0558                main@slaveAddr0 0086  
                     _low_isr 0018                    ??_high_isr 0001                __pintcode_body 0444  
        end_of_initialization 0582                ecan_init@mask0 0024                ecan_init@mask1 0028  
                     int_func 0444         __size_of_i2c_get_byte 0038                       postdec2 000FDD  
                     postinc2 000FDE                 i2c_write@data 0021                     _TRISAbits 000F92  
                   _TRISBbits 000F93                     _TRISCbits 000F94                     _TRISDbits 000F95  
                   _TRISEbits 000F96   __end_of_ConfigureOscillator 0576                  _i2c_get_byte 04B0  
                ?_i2c_address 0021                    main@xAccel 0060                    main@yAccel 0063  
                  main@zAccel 0066                  ?_i2c_restart 0001                   _ECANCONbits 000F77  
         start_initialization 0582                     _i2c_start 0594                     _i2c_write 0576  
                 _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000        i2c_writeToReg@destAddr 0023  
           __size_of_i2c_init 0016             __size_of_i2c_read 0026             __size_of_i2c_wait 0012  
           __size_of_i2c_stop 0008              ??_i2c_writeToReg 0025              __CFG_LPT1OSC$OFF 000000  
      i2c_writeToReg@sendData 0024                 __pcstackBANK0 0060                   _BRGCON1bits 000F70  
                 _BRGCON2bits 000F71                    ?_i2c_start 0001                   _BRGCON3bits 000F72  
                  ?_i2c_write 0001             __size_of_high_isr 04A8                     _ecan_init 021A  
                   _ecan_send 034E                     __pintcode 0008                   __pintcodelo 0018  
                    ?_low_isr 0001                    ?_ecan_init 0001                    ?_ecan_send 0020  
        __size_of_i2c_address 0010              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXB1SIDH 000F51                      _RXB1SIDL 000F52  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01                      _RXF2SIDH 000F08  
                    _RXF2SIDL 000F09                      _TXB0SIDH 000F41                      _TXB0SIDL 000F42  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D          __size_of_i2c_restart 0008                    _ADCON0bits 000FC2  
                  _ADCON1bits 000FC1                    _ADCON2bits 000FC0                     main@xGyro 006C  
                   main@yGyro 006F                     main@zGyro 0072                   ??_i2c_start 0021  
                 ??_i2c_write 0021                    _CANCONbits 000F6F                      _i2c_init 0530  
                    _i2c_read 04E8                      _i2c_wait 0546                      _i2c_stop 058C  
                    __Hrparam 0000                      __Lrparam 0000                    _CIOCONbits 000F73  
                _RXF0SIDLbits 000F01                  _RXF1SIDLbits 000F05              __size_of_low_isr 008E  
                    __ptext10 0546                      __ptext11 034E                      __ptext12 021A  
                    __ptext13 0568                      _high_isr 0008                 __size_of_main 0170  
                 ??_ecan_init 0020                   ??_ecan_send 0022  __size_of_ConfigureOscillator 000E  
                _TXB0SIDLbits 000F42                      int$flags 002A                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B                      intlevel1 0000  
                    intlevel2 0000                   _TXB0CONbits 000F40                    _OSCCONbits 000FD3  
                 _RXFCON0bits 000DD4                   _SSPCON1bits 000FC6                   _SSPCON2bits 000FC5  
