

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Tue Mar  1 01:21:32 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    27                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    28  0000                     _RXFCON0bits	set	3540
    29  0000                     _RXB1CONbits	set	3920
    30  0000                     _RXB1D0	set	3926
    31  0000                     _RXB1D1	set	3927
    32  0000                     _RXB1D2	set	3928
    33  0000                     _RXB1D3	set	3929
    34  0000                     _RXB1D4	set	3930
    35  0000                     _RXB1D5	set	3931
    36  0000                     _RXB1D6	set	3932
    37  0000                     _RXB1D7	set	3933
    38  0000                     _RXB1SIDH	set	3921
    39  0000                     _RXB1SIDL	set	3922
    40  0000                     _RXF0SIDH	set	3840
    41  0000                     _RXF0SIDL	set	3841
    42  0000                     _RXF0SIDLbits	set	3841
    43  0000                     _RXF1SIDLbits	set	3845
    44  0000                     _RXF2SIDH	set	3848
    45  0000                     _RXF2SIDL	set	3849
    46  0000                     _RXM0SIDH	set	3864
    47  0000                     _RXM0SIDL	set	3865
    48  0000                     _RXM1SIDH	set	3868
    49  0000                     _RXM1SIDL	set	3869
    50  0000                     _TXB0CONbits	set	3904
    51  0000                     _TXB0D0	set	3910
    52  0000                     _TXB0D1	set	3911
    53  0000                     _TXB0D2	set	3912
    54  0000                     _TXB0D3	set	3913
    55  0000                     _TXB0D4	set	3914
    56  0000                     _TXB0D5	set	3915
    57  0000                     _TXB0D6	set	3916
    58  0000                     _TXB0D7	set	3917
    59  0000                     _TXB0DLC	set	3909
    60  0000                     _TXB0SIDH	set	3905
    61  0000                     _TXB0SIDL	set	3906
    62  0000                     _TXB0SIDLbits	set	3906
    63  0000                     _RXB1DLC	set	3925
    64  0000                     _ADCON0bits	set	4034
    65  0000                     _ADCON1bits	set	4033
    66  0000                     _ADCON2bits	set	4032
    67  0000                     _ADRESH	set	4036
    68  0000                     _ADRESL	set	4035
    69  0000                     _BRGCON1bits	set	3952
    70  0000                     _BRGCON2bits	set	3953
    71  0000                     _BRGCON3bits	set	3954
    72  0000                     _CANCONbits	set	3951
    73  0000                     _CANSTATbits	set	3950
    74  0000                     _CIOCONbits	set	3955
    75  0000                     _ECANCONbits	set	3959
    76  0000                     _OSCCONbits	set	4051
    77  0000                     _OSCTUNEbits	set	3995
    78  0000                     _RXB0CONbits	set	3936
    79  0000                     _RXB0D0	set	3942
    80  0000                     _RXB0D1	set	3943
    81  0000                     _RXB0D2	set	3944
    82  0000                     _RXB0D3	set	3945
    83  0000                     _RXB0D4	set	3946
    84  0000                     _RXB0D5	set	3947
    85  0000                     _RXB0D6	set	3948
    86  0000                     _RXB0D7	set	3949
    87  0000                     _RXB0SIDH	set	3937
    88  0000                     _RXB0SIDL	set	3938
    89  0000                     _SSPADD	set	4040
    90  0000                     _SSPBUF	set	4041
    91  0000                     _SSPCON1	set	4038
    92  0000                     _SSPCON1bits	set	4038
    93  0000                     _SSPCON2	set	4037
    94  0000                     _SSPCON2bits	set	4037
    95  0000                     _SSPSTAT	set	4039
    96  0000                     _SSPSTATbits	set	4039
    97  0000                     _TRISAbits	set	3986
    98  0000                     _TRISBbits	set	3987
    99  0000                     _TRISCbits	set	3988
   100  0000                     _TRISDbits	set	3989
   101  0000                     _TRISEbits	set	3990
   102  0000                     _RXB0DLC	set	3941
   103  0000                     _ACKDT	set	32301
   104                           
   105                           ; #config settings
   106  0000                     
   107                           	psect	cinit
   108  0004E0                     __pcinit:
   109                           	opt stack 0
   110  0004E0                     start_initialization:
   111                           	opt stack 0
   112  0004E0                     __initialization:
   113                           	opt stack 0
   114  0004E0                     end_of_initialization:
   115                           	opt stack 0
   116  0004E0                     __end_of__initialization:
   117                           	opt stack 0
   118  0004E0  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  0004E2  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  0004E4  0100               	movlb	0
   121  0004E6  EF6A  F001         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	cstackBANK0
   124  000060                     __pcstackBANK0:
   125                           	opt stack 0
   126  000060                     main@yAccelRaw:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130  000060                     	ds	2
   131  000062                     main@zAccelRaw:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x2
   135  000062                     	ds	2
   136  000064                     main@tempOne:
   137                           	opt stack 0
   138                           
   139                           ; 2 bytes @ 0x4
   140  000064                     	ds	2
   141  000066                     main@tempTwo:
   142                           	opt stack 0
   143                           
   144                           ; 2 bytes @ 0x6
   145  000066                     	ds	2
   146  000068                     main@xAccelRaw:
   147                           	opt stack 0
   148                           
   149                           ; 2 bytes @ 0x8
   150  000068                     	ds	2
   151  00006A                     main@slaveAddr0:
   152                           	opt stack 0
   153                           
   154                           ; 1 bytes @ 0xA
   155  00006A                     	ds	1
   156  00006B                     main@destAddr0:
   157                           	opt stack 0
   158                           
   159                           ; 1 bytes @ 0xB
   160  00006B                     	ds	1
   161  00006C                     main@sendData0:
   162                           	opt stack 0
   163                           
   164                           ; 1 bytes @ 0xC
   165  00006C                     	ds	1
   166  00006D                     main@accelPack:
   167                           	opt stack 0
   168                           
   169                           ; 11 bytes @ 0xD
   170  00006D                     	ds	11
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	opt stack 0
   175  000001                     ??_high_isr:
   176  000001                     
   177                           ; 1 bytes @ 0x0
   178  000001                     	ds	14
   179  00000F                     ??_low_isr:
   180                           
   181                           ; 1 bytes @ 0xE
   182  00000F                     	ds	17
   183  000020                     ??_ecan_init:
   184  000020                     ??_i2c_wait:
   185  000020                     ecan_send@mess:
   186                           	opt stack 0
   187                           
   188                           ; 2 bytes @ 0x1F
   189  000020                     	ds	1
   190  000021                     i2c_write@data:
   191                           	opt stack 0
   192  000021                     i2c_address@mode:
   193                           	opt stack 0
   194  000021                     i2c_read@ack:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x20
   198  000021                     	ds	1
   199  000022                     ??_ecan_send:
   200  000022                     i2c_address@address:
   201                           	opt stack 0
   202  000022                     i2c_read@i2cReadData:
   203                           	opt stack 0
   204  000022                     ecan_init@sid0:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x21
   208  000022                     	ds	1
   209  000023                     ?_i2c_get_byte:
   210                           	opt stack 0
   211  000023                     i2c_get_byte@dataAddr:
   212                           	opt stack 0
   213  000023                     i2c_writeToReg@destAddr:
   214                           	opt stack 0
   215                           
   216                           ; 1 bytes @ 0x22
   217  000023                     	ds	1
   218  000024                     i2c_writeToReg@sendData:
   219                           	opt stack 0
   220  000024                     ecan_init@mask0:
   221                           	opt stack 0
   222                           
   223                           ; 2 bytes @ 0x23
   224  000024                     	ds	1
   225  000025                     i2c_get_byte@data1:
   226                           	opt stack 0
   227  000025                     i2c_writeToReg@slaveAddr:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x24
   231  000025                     	ds	1
   232  000026                     i2c_get_byte@slaveAddr:
   233                           	opt stack 0
   234  000026                     ecan_init@sid1:
   235                           	opt stack 0
   236                           
   237                           ; 2 bytes @ 0x25
   238  000026                     	ds	2
   239  000028                     ecan_init@mask1:
   240                           	opt stack 0
   241                           
   242                           ; 2 bytes @ 0x27
   243  000028                     	ds	2
   244  00002A                     
   245                           ; 1 bytes @ 0x29
   246 ;;
   247 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   248 ;;
   249 ;; *************** function _main *****************
   250 ;; Defined at:
   251 ;;		line 54 in file "main.c"
   252 ;; Parameters:    Size  Location     Type
   253 ;;		None
   254 ;; Auto vars:     Size  Location     Type
   255 ;;  accelPack      11   13[BANK0 ] struct Message
   256 ;;  xAccelRaw       2    8[BANK0 ] short 
   257 ;;  tempTwo         2    6[BANK0 ] unsigned int 
   258 ;;  tempOne         2    4[BANK0 ] unsigned int 
   259 ;;  zAccelRaw       2    2[BANK0 ] short 
   260 ;;  yAccelRaw       2    0[BANK0 ] short 
   261 ;;  sendData0       1   12[BANK0 ] unsigned char 
   262 ;;  destAddr0       1   11[BANK0 ] unsigned char 
   263 ;;  slaveAddr0      1   10[BANK0 ] unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  1    wreg      void 
   266 ;; Registers used:
   267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   274 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   276 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
   277 ;;Total ram usage:       24 bytes
   278 ;; Hardware stack levels required when called:    5
   279 ;; This function calls:
   280 ;;		_ConfigureOscillator
   281 ;;		_ecan_init
   282 ;;		_ecan_send
   283 ;;		_i2c_get_byte
   284 ;;		_i2c_init
   285 ;;		_i2c_writeToReg
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           	psect	text0
   292  0002D4                     __ptext0:
   293                           	opt stack 0
   294  0002D4                     _main:
   295                           	opt stack 26
   296                           
   297                           ;main.c: 57: ConfigureOscillator();
   298                           
   299                           ;incstack = 0
   300  0002D4  EC63  F002         	call	_ConfigureOscillator	;wreg free
   301                           
   302                           ;main.c: 60: ecan_init();
   303  0002D8  EC55  F000         	call	_ecan_init	;wreg free
   304                           
   305                           ;main.c: 61: i2c_init();
   306  0002DC  EC47  F002         	call	_i2c_init	;wreg free
   307                           
   308                           ;main.c: 64: short xAccelRaw = 0;
   309  0002E0  0E00               	movlw	0
   310  0002E2  0100               	movlb	0	; () banked
   311  0002E4  6F69               	movwf	(main@xAccelRaw+1)& (0+255),b
   312  0002E6  0E00               	movlw	0
   313  0002E8  6F68               	movwf	main@xAccelRaw& (0+255),b
   314                           
   315                           ; BSR set to: 0
   316                           ;main.c: 65: short yAccelRaw = 0;
   317  0002EA  0E00               	movlw	0
   318  0002EC  0100               	movlb	0	; () banked
   319  0002EE  6F61               	movwf	(main@yAccelRaw+1)& (0+255),b
   320  0002F0  0E00               	movlw	0
   321  0002F2  6F60               	movwf	main@yAccelRaw& (0+255),b
   322                           
   323                           ; BSR set to: 0
   324                           ;main.c: 66: short zAccelRaw = 0;
   325  0002F4  0E00               	movlw	0
   326  0002F6  0100               	movlb	0	; () banked
   327  0002F8  6F63               	movwf	(main@zAccelRaw+1)& (0+255),b
   328  0002FA  0E00               	movlw	0
   329  0002FC  6F62               	movwf	main@zAccelRaw& (0+255),b
   330                           
   331                           ; BSR set to: 0
   332                           ;main.c: 69: unsigned int tempOne = 0;
   333  0002FE  0E00               	movlw	0
   334  000300  0100               	movlb	0	; () banked
   335  000302  6F65               	movwf	(main@tempOne+1)& (0+255),b
   336  000304  0E00               	movlw	0
   337  000306  6F64               	movwf	main@tempOne& (0+255),b
   338                           
   339                           ; BSR set to: 0
   340                           ;main.c: 70: unsigned int tempTwo = 0;
   341  000308  0E00               	movlw	0
   342  00030A  0100               	movlb	0	; () banked
   343  00030C  6F67               	movwf	(main@tempTwo+1)& (0+255),b
   344  00030E  0E00               	movlw	0
   345  000310  6F66               	movwf	main@tempTwo& (0+255),b
   346                           
   347                           ; BSR set to: 0
   348                           ;main.c: 73: char slaveAddr0 = 0x1E;
   349  000312  0E1E               	movlw	30
   350  000314  0100               	movlb	0	; () banked
   351  000316  6F6A               	movwf	main@slaveAddr0& (0+255),b
   352                           
   353                           ; BSR set to: 0
   354                           ;main.c: 74: char destAddr0 = 0x20;
   355  000318  0E20               	movlw	32
   356  00031A  0100               	movlb	0	; () banked
   357  00031C  6F6B               	movwf	main@destAddr0& (0+255),b
   358                           
   359                           ; BSR set to: 0
   360                           ;main.c: 75: char sendData0 = 0b01100111;
   361  00031E  0E67               	movlw	103
   362  000320  0100               	movlb	0	; () banked
   363  000322  6F6C               	movwf	main@sendData0& (0+255),b
   364                           
   365                           ; BSR set to: 0
   366                           ;main.c: 76: i2c_writeToReg(slaveAddr0, destAddr0, sendData0);
   367  000324  C06B  F023         	movff	main@destAddr0,i2c_writeToReg@destAddr
   368  000328  C06C  F024         	movff	main@sendData0,i2c_writeToReg@sendData
   369  00032C  0100               	movlb	0	; () banked
   370  00032E  516A               	movf	main@slaveAddr0& (0+255),w,b
   371  000330  EC36  F002         	call	_i2c_writeToReg
   372                           
   373                           ;main.c: 79: slaveAddr0 = 0x1E;
   374  000334  0E1E               	movlw	30
   375  000336  0100               	movlb	0	; () banked
   376  000338  6F6A               	movwf	main@slaveAddr0& (0+255),b
   377                           
   378                           ;main.c: 80: destAddr0 = 0x24;
   379  00033A  0E24               	movlw	36
   380  00033C  0100               	movlb	0	; () banked
   381  00033E  6F6B               	movwf	main@destAddr0& (0+255),b
   382                           
   383                           ;main.c: 81: sendData0 = 0b11110000;
   384  000340  0EF0               	movlw	240
   385  000342  0100               	movlb	0	; () banked
   386  000344  6F6C               	movwf	main@sendData0& (0+255),b
   387                           
   388                           ; BSR set to: 0
   389                           ;main.c: 82: i2c_writeToReg(slaveAddr0, destAddr0, sendData0);
   390  000346  C06B  F023         	movff	main@destAddr0,i2c_writeToReg@destAddr
   391  00034A  C06C  F024         	movff	main@sendData0,i2c_writeToReg@sendData
   392  00034E  0100               	movlb	0	; () banked
   393  000350  516A               	movf	main@slaveAddr0& (0+255),w,b
   394  000352  EC36  F002         	call	_i2c_writeToReg
   395  000356                     l1401:
   396                           
   397                           ;main.c: 85: {
   398                           ;main.c: 102: xAccelRaw = i2c_get_byte(0x1E ,0x28);
   399  000356  0E28               	movlw	40
   400  000358  6E23               	movwf	i2c_get_byte@dataAddr,c
   401  00035A  0E1E               	movlw	30
   402  00035C  EC07  F002         	call	_i2c_get_byte
   403  000360  C023  F068         	movff	?_i2c_get_byte,main@xAccelRaw
   404  000364  C024  F069         	movff	?_i2c_get_byte+1,main@xAccelRaw+1
   405                           
   406                           ;main.c: 103: xAccelRaw += i2c_get_byte(0x1E,0x29) << 8;
   407  000368  0E29               	movlw	41
   408  00036A  6E23               	movwf	i2c_get_byte@dataAddr,c
   409  00036C  0E1E               	movlw	30
   410  00036E  EC07  F002         	call	_i2c_get_byte
   411  000372  5023               	movf	?_i2c_get_byte,w,c
   412  000374  0100               	movlb	0	; () banked
   413  000376  2769               	addwf	(main@xAccelRaw+1)& (0+255),f,b
   414                           
   415                           ; BSR set to: 0
   416                           ;main.c: 106: Message accelPack;
   417                           ;main.c: 107: accelPack.sid = 0x000;
   418  000378  0E00               	movlw	0
   419  00037A  0100               	movlb	0	; () banked
   420  00037C  6F76               	movwf	(main@accelPack+9)& (0+255),b
   421  00037E  0E00               	movlw	0
   422  000380  6F75               	movwf	(main@accelPack+8)& (0+255),b
   423                           
   424                           ; BSR set to: 0
   425                           ;main.c: 108: accelPack.len = 2;
   426  000382  0E02               	movlw	2
   427  000384  0100               	movlb	0	; () banked
   428  000386  6F77               	movwf	(main@accelPack+10)& (0+255),b
   429                           
   430                           ; BSR set to: 0
   431                           ;main.c: 109: accelPack.data[0] = xAccelRaw;
   432  000388  C068  F06D         	movff	main@xAccelRaw,main@accelPack
   433                           
   434                           ; BSR set to: 0
   435                           ;main.c: 110: accelPack.data[1] = xAccelRaw >> 8;
   436  00038C  0100               	movlb	0	; () banked
   437  00038E  5169               	movf	(main@xAccelRaw+1)& (0+255),w,b
   438  000390  0100               	movlb	0	; () banked
   439  000392  6F6E               	movwf	(main@accelPack+1)& (0+255),b
   440                           
   441                           ; BSR set to: 0
   442                           ;main.c: 112: ecan_send(&accelPack);
   443  000394  0E6D               	movlw	low main@accelPack
   444  000396  6E20               	movwf	ecan_send@mess,c
   445  000398  0E00               	movlw	high main@accelPack
   446  00039A  6E21               	movwf	ecan_send@mess+1,c
   447  00039C  ECEF  F000         	call	_ecan_send	;wreg free
   448  0003A0  D7DA               	goto	l1401
   449  0003A2                     __end_of_main:
   450                           	opt stack 0
   451                           
   452 ;; *************** function _i2c_writeToReg *****************
   453 ;; Defined at:
   454 ;;		line 138 in file "i2c.c"
   455 ;; Parameters:    Size  Location     Type
   456 ;;  slaveAddr       1    wreg     unsigned char 
   457 ;;  destAddr        1   34[COMRAM] unsigned char 
   458 ;;  sendData        1   35[COMRAM] unsigned char 
   459 ;; Auto vars:     Size  Location     Type
   460 ;;  slaveAddr       1   36[COMRAM] unsigned char 
   461 ;; Return value:  Size  Location     Type
   462 ;;                  1    wreg      void 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   470 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   471 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   473 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   474 ;;Total ram usage:        3 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    4
   477 ;; This function calls:
   478 ;;		_i2c_address
   479 ;;		_i2c_start
   480 ;;		_i2c_stop
   481 ;;		_i2c_write
   482 ;; This function is called by:
   483 ;;		_main
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text1
   488  00046C                     __ptext1:
   489                           	opt stack 0
   490  00046C                     _i2c_writeToReg:
   491                           	opt stack 26
   492                           
   493                           ;incstack = 0
   494                           ;i2c_writeToReg@slaveAddr stored from wreg
   495  00046C  6E25               	movwf	i2c_writeToReg@slaveAddr,c
   496                           
   497                           ;i2c.c: 140: i2c_start();
   498  00046E  EC79  F002         	call	_i2c_start	;wreg free
   499                           
   500                           ;i2c.c: 141: i2c_address(slaveAddr, 0);
   501  000472  0E00               	movlw	0
   502  000474  6E21               	movwf	i2c_address@mode,c
   503  000476  5025               	movf	i2c_writeToReg@slaveAddr,w,c
   504  000478  EC5B  F002         	call	_i2c_address
   505                           
   506                           ;i2c.c: 142: i2c_write(destAddr);
   507  00047C  5023               	movf	i2c_writeToReg@destAddr,w,c
   508  00047E  EC6A  F002         	call	_i2c_write
   509                           
   510                           ;i2c.c: 143: i2c_write(sendData);
   511  000482  5024               	movf	i2c_writeToReg@sendData,w,c
   512  000484  EC6A  F002         	call	_i2c_write
   513                           
   514                           ;i2c.c: 144: i2c_stop();
   515  000488  EC75  F002         	call	_i2c_stop	;wreg free
   516  00048C  0012               	return		;funcret
   517  00048E                     __end_of_i2c_writeToReg:
   518                           	opt stack 0
   519                           
   520 ;; *************** function _i2c_init *****************
   521 ;; Defined at:
   522 ;;		line 13 in file "i2c.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   540 ;;Total ram usage:        0 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    2
   543 ;; This function calls:
   544 ;;		Nothing
   545 ;; This function is called by:
   546 ;;		_main
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           	psect	text2
   551  00048E                     __ptext2:
   552                           	opt stack 0
   553  00048E                     _i2c_init:
   554                           	opt stack 28
   555                           
   556                           ;i2c.c: 16: TRISCbits.RC3 = 1;
   557                           
   558                           ;incstack = 0
   559  00048E  8694               	bsf	3988,3,c	;volatile
   560                           
   561                           ;i2c.c: 17: TRISCbits.RC4 = 1;
   562  000490  8894               	bsf	3988,4,c	;volatile
   563                           
   564                           ;i2c.c: 20: SSPCON1= 0b00101000;
   565  000492  0E28               	movlw	40
   566  000494  6EC6               	movwf	4038,c	;volatile
   567                           
   568                           ;i2c.c: 21: SSPCON2 = 0x00;
   569  000496  0E00               	movlw	0
   570  000498  6EC5               	movwf	4037,c	;volatile
   571                           
   572                           ;i2c.c: 24: SSPADD = 79;
   573  00049A  0E4F               	movlw	79
   574  00049C  6EC8               	movwf	4040,c	;volatile
   575                           
   576                           ;i2c.c: 25: SSPSTAT = 0b11000000;
   577  00049E  0EC0               	movlw	192
   578  0004A0  6EC7               	movwf	4039,c	;volatile
   579  0004A2  0012               	return		;funcret
   580  0004A4                     __end_of_i2c_init:
   581                           	opt stack 0
   582                           
   583 ;; *************** function _i2c_get_byte *****************
   584 ;; Defined at:
   585 ;;		line 126 in file "i2c.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;  slaveAddr       1    wreg     unsigned char 
   588 ;;  dataAddr        1   34[COMRAM] unsigned char 
   589 ;; Auto vars:     Size  Location     Type
   590 ;;  slaveAddr       1   37[COMRAM] unsigned char 
   591 ;;  data1           1   36[COMRAM] unsigned char 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2   34[COMRAM] short 
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   604 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   605 ;;Total ram usage:        4 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    4
   608 ;; This function calls:
   609 ;;		_i2c_address
   610 ;;		_i2c_read
   611 ;;		_i2c_restart
   612 ;;		_i2c_start
   613 ;;		_i2c_stop
   614 ;;		_i2c_write
   615 ;; This function is called by:
   616 ;;		_main
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           	psect	text3
   621  00040E                     __ptext3:
   622                           	opt stack 0
   623  00040E                     _i2c_get_byte:
   624                           	opt stack 26
   625                           
   626                           ;incstack = 0
   627                           ;i2c_get_byte@slaveAddr stored from wreg
   628  00040E  6E26               	movwf	i2c_get_byte@slaveAddr,c
   629                           
   630                           ;i2c.c: 128: i2c_start();
   631  000410  EC79  F002         	call	_i2c_start	;wreg free
   632                           
   633                           ;i2c.c: 129: i2c_address(slaveAddr, 0);
   634  000414  0E00               	movlw	0
   635  000416  6E21               	movwf	i2c_address@mode,c
   636  000418  5026               	movf	i2c_get_byte@slaveAddr,w,c
   637  00041A  EC5B  F002         	call	_i2c_address
   638                           
   639                           ;i2c.c: 130: i2c_write(dataAddr);
   640  00041E  5023               	movf	i2c_get_byte@dataAddr,w,c
   641  000420  EC6A  F002         	call	_i2c_write
   642                           
   643                           ;i2c.c: 131: i2c_restart();
   644  000424  EC7D  F002         	call	_i2c_restart	;wreg free
   645                           
   646                           ;i2c.c: 132: i2c_address(slaveAddr, 1);
   647  000428  0E01               	movlw	1
   648  00042A  6E21               	movwf	i2c_address@mode,c
   649  00042C  5026               	movf	i2c_get_byte@slaveAddr,w,c
   650  00042E  EC5B  F002         	call	_i2c_address
   651                           
   652                           ;i2c.c: 133: char data1 = i2c_read(0);
   653  000432  0E00               	movlw	0
   654  000434  EC23  F002         	call	_i2c_read
   655  000438  6E25               	movwf	i2c_get_byte@data1,c
   656                           
   657                           ;i2c.c: 134: i2c_stop();
   658  00043A  EC75  F002         	call	_i2c_stop	;wreg free
   659                           
   660                           ;i2c.c: 135: return data1;
   661  00043E  C025  F023         	movff	i2c_get_byte@data1,?_i2c_get_byte
   662  000442  6A24               	clrf	?_i2c_get_byte+1,c
   663  000444  0012               	return	
   664  000446                     __end_of_i2c_get_byte:
   665                           	opt stack 0
   666                           
   667 ;; *************** function _i2c_write *****************
   668 ;; Defined at:
   669 ;;		line 55 in file "i2c.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  data            1    wreg     unsigned char 
   672 ;; Auto vars:     Size  Location     Type
   673 ;;  data            1   32[COMRAM] unsigned char 
   674 ;; Return value:  Size  Location     Type
   675 ;;                  1    wreg      void 
   676 ;; Registers used:
   677 ;;		wreg, status,2, status,0, cstack
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   684 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   686 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   687 ;;Total ram usage:        1 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    3
   690 ;; This function calls:
   691 ;;		_i2c_wait
   692 ;; This function is called by:
   693 ;;		_i2c_get_byte
   694 ;;		_i2c_writeToReg
   695 ;;		_i2c_get_udata
   696 ;;		_i2c_get_data
   697 ;;		_i2c_write_raw
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text4
   702  0004D4                     __ptext4:
   703                           	opt stack 0
   704  0004D4                     _i2c_write:
   705                           	opt stack 26
   706                           
   707                           ;incstack = 0
   708                           ;i2c_write@data stored from wreg
   709  0004D4  6E21               	movwf	i2c_write@data,c
   710                           
   711                           ;i2c.c: 57: i2c_wait();
   712  0004D6  EC52  F002         	call	_i2c_wait	;wreg free
   713                           
   714                           ;i2c.c: 58: SSPBUF = data;
   715  0004DA  C021  FFC9         	movff	i2c_write@data,4041	;volatile
   716  0004DE  0012               	return		;funcret
   717  0004E0                     __end_of_i2c_write:
   718                           	opt stack 0
   719                           
   720 ;; *************** function _i2c_stop *****************
   721 ;; Defined at:
   722 ;;		line 48 in file "i2c.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;		None
   725 ;; Auto vars:     Size  Location     Type
   726 ;;		None
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0, cstack
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   740 ;;Total ram usage:        0 bytes
   741 ;; Hardware stack levels used:    1
   742 ;; Hardware stack levels required when called:    3
   743 ;; This function calls:
   744 ;;		_i2c_wait
   745 ;; This function is called by:
   746 ;;		_i2c_get_byte
   747 ;;		_i2c_writeToReg
   748 ;;		_i2c_get_udata
   749 ;;		_i2c_get_data
   750 ;;		_i2c_write_raw
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text5
   755  0004EA                     __ptext5:
   756                           	opt stack 0
   757  0004EA                     _i2c_stop:
   758                           	opt stack 26
   759                           
   760                           ;i2c.c: 50: i2c_wait();
   761                           
   762                           ;incstack = 0
   763  0004EA  EC52  F002         	call	_i2c_wait	;wreg free
   764                           
   765                           ;i2c.c: 51: SSPCON2bits.PEN = 1;
   766  0004EE  84C5               	bsf	4037,2,c	;volatile
   767  0004F0  0012               	return		;funcret
   768  0004F2                     __end_of_i2c_stop:
   769                           	opt stack 0
   770                           
   771 ;; *************** function _i2c_start *****************
   772 ;; Defined at:
   773 ;;		line 35 in file "i2c.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, status,2, status,0, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    3
   794 ;; This function calls:
   795 ;;		_i2c_wait
   796 ;; This function is called by:
   797 ;;		_i2c_get_byte
   798 ;;		_i2c_writeToReg
   799 ;;		_i2c_get_udata
   800 ;;		_i2c_get_data
   801 ;;		_i2c_write_raw
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text6
   806  0004F2                     __ptext6:
   807                           	opt stack 0
   808  0004F2                     _i2c_start:
   809                           	opt stack 26
   810                           
   811                           ;i2c.c: 37: i2c_wait();
   812                           
   813                           ;incstack = 0
   814  0004F2  EC52  F002         	call	_i2c_wait	;wreg free
   815                           
   816                           ;i2c.c: 38: SSPCON2bits.SEN = 1;
   817  0004F6  80C5               	bsf	4037,0,c	;volatile
   818  0004F8  0012               	return		;funcret
   819  0004FA                     __end_of_i2c_start:
   820                           	opt stack 0
   821                           
   822 ;; *************** function _i2c_restart *****************
   823 ;; Defined at:
   824 ;;		line 42 in file "i2c.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    3
   845 ;; This function calls:
   846 ;;		_i2c_wait
   847 ;; This function is called by:
   848 ;;		_i2c_get_byte
   849 ;;		_i2c_get_udata
   850 ;;		_i2c_get_data
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           	psect	text7
   855  0004FA                     __ptext7:
   856                           	opt stack 0
   857  0004FA                     _i2c_restart:
   858                           	opt stack 26
   859                           
   860                           ;i2c.c: 43: i2c_wait();
   861                           
   862                           ;incstack = 0
   863  0004FA  EC52  F002         	call	_i2c_wait	;wreg free
   864                           
   865                           ;i2c.c: 44: SSPCON2bits.RSEN = 1;
   866  0004FE  82C5               	bsf	4037,1,c	;volatile
   867  000500  0012               	return		;funcret
   868  000502                     __end_of_i2c_restart:
   869                           	opt stack 0
   870                           
   871 ;; *************** function _i2c_read *****************
   872 ;; Defined at:
   873 ;;		line 70 in file "i2c.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  ack             1    wreg     unsigned char 
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  ack             1   32[COMRAM] unsigned char 
   878 ;;  i2cReadData     1   33[COMRAM] unsigned char 
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      unsigned char 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0, cstack
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   889 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   891 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   892 ;;Total ram usage:        2 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    3
   895 ;; This function calls:
   896 ;;		_i2c_wait
   897 ;; This function is called by:
   898 ;;		_i2c_get_byte
   899 ;;		_i2c_get_udata
   900 ;;		_i2c_get_data
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text8
   905  000446                     __ptext8:
   906                           	opt stack 0
   907  000446                     _i2c_read:
   908                           	opt stack 26
   909                           
   910                           ;incstack = 0
   911                           ;i2c_read@ack stored from wreg
   912  000446  6E21               	movwf	i2c_read@ack,c
   913                           
   914                           ;i2c.c: 75: unsigned char i2cReadData;
   915                           ;i2c.c: 77: i2c_wait();
   916  000448  EC52  F002         	call	_i2c_wait	;wreg free
   917                           
   918                           ;i2c.c: 78: SSPCON2bits.RCEN = 1;
   919  00044C  86C5               	bsf	4037,3,c	;volatile
   920                           
   921                           ;i2c.c: 79: i2c_wait();
   922  00044E  EC52  F002         	call	_i2c_wait	;wreg free
   923                           
   924                           ;i2c.c: 80: i2cReadData = SSPBUF;
   925  000452  CFC9 F022          	movff	4041,i2c_read@i2cReadData	;volatile
   926                           
   927                           ;i2c.c: 81: i2c_wait();
   928  000456  EC52  F002         	call	_i2c_wait	;wreg free
   929                           
   930                           ;i2c.c: 82: if (ack)
   931  00045A  5021               	movf	i2c_read@ack,w,c
   932  00045C  B4D8               	btfsc	status,2,c
   933  00045E  D002               	goto	l330
   934                           
   935                           ;i2c.c: 83: ACKDT = 0;
   936  000460  9AC5               	bcf	4037,5,c	;volatile
   937  000462  D001               	goto	l331
   938  000464                     l330:
   939                           
   940                           ;i2c.c: 84: else
   941                           ;i2c.c: 85: ACKDT = 1;
   942  000464  8AC5               	bsf	4037,5,c	;volatile
   943  000466                     l331:
   944                           
   945                           ;i2c.c: 86: SSPCON2bits.ACKEN = 1;
   946  000466  88C5               	bsf	4037,4,c	;volatile
   947                           
   948                           ;i2c.c: 88: return i2cReadData;
   949  000468  5022               	movf	i2c_read@i2cReadData,w,c
   950  00046A  0012               	return	
   951  00046C                     __end_of_i2c_read:
   952                           	opt stack 0
   953                           status	equ	0xFD8
   954                           
   955 ;; *************** function _i2c_address *****************
   956 ;; Defined at:
   957 ;;		line 63 in file "i2c.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  address         1    wreg     unsigned char 
   960 ;;  mode            1   32[COMRAM] unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  address         1   33[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   976 ;;Total ram usage:        2 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; Hardware stack levels required when called:    3
   979 ;; This function calls:
   980 ;;		_i2c_wait
   981 ;; This function is called by:
   982 ;;		_i2c_get_byte
   983 ;;		_i2c_writeToReg
   984 ;;		_i2c_get_udata
   985 ;;		_i2c_get_data
   986 ;;		_i2c_write_raw
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text9
   991  0004B6                     __ptext9:
   992                           	opt stack 0
   993  0004B6                     _i2c_address:
   994                           	opt stack 26
   995                           
   996                           ;incstack = 0
   997                           ;i2c_address@address stored from wreg
   998  0004B6  6E22               	movwf	i2c_address@address,c
   999                           
  1000                           ;i2c.c: 65: i2c_wait();
  1001  0004B8  EC52  F002         	call	_i2c_wait	;wreg free
  1002                           
  1003                           ;i2c.c: 66: SSPBUF = (address << 1) + mode;
  1004  0004BC  5022               	movf	i2c_address@address,w,c
  1005  0004BE  2422               	addwf	i2c_address@address,w,c
  1006  0004C0  2421               	addwf	i2c_address@mode,w,c
  1007  0004C2  6EC9               	movwf	4041,c	;volatile
  1008  0004C4  0012               	return		;funcret
  1009  0004C6                     __end_of_i2c_address:
  1010                           	opt stack 0
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _i2c_wait *****************
  1014 ;; Defined at:
  1015 ;;		line 30 in file "i2c.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2, status,0
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1031 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1033 ;;Total ram usage:        1 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    2
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_i2c_start
  1040 ;;		_i2c_restart
  1041 ;;		_i2c_stop
  1042 ;;		_i2c_write
  1043 ;;		_i2c_address
  1044 ;;		_i2c_read
  1045 ;; This function uses a non-reentrant model
  1046 ;;
  1047                           
  1048                           	psect	text10
  1049  0004A4                     __ptext10:
  1050                           	opt stack 0
  1051  0004A4                     _i2c_wait:
  1052                           	opt stack 26
  1053  0004A4                     l1267:
  1054  0004A4  CFC5 F020          	movff	4037,??_i2c_wait	;volatile
  1055  0004A8  0E1F               	movlw	31
  1056  0004AA  1620               	andwf	??_i2c_wait,f,c
  1057  0004AC  A4D8               	btfss	status,2,c
  1058  0004AE  D7FA               	goto	l1267
  1059  0004B0  A4C7               	btfss	4039,2,c	;volatile
  1060  0004B2  0012               	return	
  1061  0004B4  D7F7               	goto	l1267
  1062  0004B6                     __end_of_i2c_wait:
  1063                           	opt stack 0
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function _ecan_send *****************
  1067 ;; Defined at:
  1068 ;;		line 110 in file "can.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  mess            2   31[COMRAM] PTR struct Message
  1071 ;;		 -> main@accelPack(11), 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1087 ;;Total ram usage:        4 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    2
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_main
  1094 ;; This function uses a non-reentrant model
  1095 ;;
  1096                           
  1097                           	psect	text11
  1098  0001DE                     __ptext11:
  1099                           	opt stack 0
  1100  0001DE                     _ecan_send:
  1101                           	opt stack 28
  1102                           
  1103                           ;can.c: 112: TXB0D7 = mess->data[7];
  1104                           
  1105                           ;incstack = 0
  1106  0001DE  EE20 F007          	lfsr	2,7
  1107  0001E2  5020               	movf	ecan_send@mess,w,c
  1108  0001E4  26D9               	addwf	fsr2l,f,c
  1109  0001E6  5021               	movf	ecan_send@mess+1,w,c
  1110  0001E8  22DA               	addwfc	fsr2h,f,c
  1111  0001EA  50DF               	movf	indf2,w,c
  1112  0001EC  010F               	movlb	15	; () banked
  1113  0001EE  6F4D               	movwf	77,b	;volatile
  1114                           
  1115                           ;can.c: 113: TXB0D6 = mess->data[6];
  1116  0001F0  EE20 F006          	lfsr	2,6
  1117  0001F4  5020               	movf	ecan_send@mess,w,c
  1118  0001F6  26D9               	addwf	fsr2l,f,c
  1119  0001F8  5021               	movf	ecan_send@mess+1,w,c
  1120  0001FA  22DA               	addwfc	fsr2h,f,c
  1121  0001FC  50DF               	movf	indf2,w,c
  1122  0001FE  010F               	movlb	15	; () banked
  1123  000200  6F4C               	movwf	76,b	;volatile
  1124                           
  1125                           ;can.c: 114: TXB0D5 = mess->data[5];
  1126  000202  EE20 F005          	lfsr	2,5
  1127  000206  5020               	movf	ecan_send@mess,w,c
  1128  000208  26D9               	addwf	fsr2l,f,c
  1129  00020A  5021               	movf	ecan_send@mess+1,w,c
  1130  00020C  22DA               	addwfc	fsr2h,f,c
  1131  00020E  50DF               	movf	indf2,w,c
  1132  000210  010F               	movlb	15	; () banked
  1133  000212  6F4B               	movwf	75,b	;volatile
  1134                           
  1135                           ;can.c: 115: TXB0D4 = mess->data[4];
  1136  000214  EE20 F004          	lfsr	2,4
  1137  000218  5020               	movf	ecan_send@mess,w,c
  1138  00021A  26D9               	addwf	fsr2l,f,c
  1139  00021C  5021               	movf	ecan_send@mess+1,w,c
  1140  00021E  22DA               	addwfc	fsr2h,f,c
  1141  000220  50DF               	movf	indf2,w,c
  1142  000222  010F               	movlb	15	; () banked
  1143  000224  6F4A               	movwf	74,b	;volatile
  1144                           
  1145                           ;can.c: 116: TXB0D3 = mess->data[3];
  1146  000226  EE20 F003          	lfsr	2,3
  1147  00022A  5020               	movf	ecan_send@mess,w,c
  1148  00022C  26D9               	addwf	fsr2l,f,c
  1149  00022E  5021               	movf	ecan_send@mess+1,w,c
  1150  000230  22DA               	addwfc	fsr2h,f,c
  1151  000232  50DF               	movf	indf2,w,c
  1152  000234  010F               	movlb	15	; () banked
  1153  000236  6F49               	movwf	73,b	;volatile
  1154                           
  1155                           ;can.c: 117: TXB0D2 = mess->data[2];
  1156  000238  EE20 F002          	lfsr	2,2
  1157  00023C  5020               	movf	ecan_send@mess,w,c
  1158  00023E  26D9               	addwf	fsr2l,f,c
  1159  000240  5021               	movf	ecan_send@mess+1,w,c
  1160  000242  22DA               	addwfc	fsr2h,f,c
  1161  000244  50DF               	movf	indf2,w,c
  1162  000246  010F               	movlb	15	; () banked
  1163  000248  6F48               	movwf	72,b	;volatile
  1164                           
  1165                           ;can.c: 118: TXB0D1 = mess->data[1];
  1166  00024A  EE20 F001          	lfsr	2,1
  1167  00024E  5020               	movf	ecan_send@mess,w,c
  1168  000250  26D9               	addwf	fsr2l,f,c
  1169  000252  5021               	movf	ecan_send@mess+1,w,c
  1170  000254  22DA               	addwfc	fsr2h,f,c
  1171  000256  50DF               	movf	indf2,w,c
  1172  000258  010F               	movlb	15	; () banked
  1173  00025A  6F47               	movwf	71,b	;volatile
  1174                           
  1175                           ; BSR set to: 15
  1176                           ;can.c: 119: TXB0D0 = mess->data[0];
  1177  00025C  C020  FFD9         	movff	ecan_send@mess,fsr2l
  1178  000260  C021  FFDA         	movff	ecan_send@mess+1,fsr2h
  1179  000264  50DF               	movf	indf2,w,c
  1180  000266  010F               	movlb	15	; () banked
  1181  000268  6F46               	movwf	70,b	;volatile
  1182                           
  1183                           ; BSR set to: 15
  1184                           ;can.c: 121: TXB0DLC = mess->len;
  1185  00026A  EE20 F00A          	lfsr	2,10
  1186  00026E  5020               	movf	ecan_send@mess,w,c
  1187  000270  26D9               	addwf	fsr2l,f,c
  1188  000272  5021               	movf	ecan_send@mess+1,w,c
  1189  000274  22DA               	addwfc	fsr2h,f,c
  1190  000276  50DF               	movf	indf2,w,c
  1191  000278  010F               	movlb	15	; () banked
  1192  00027A  6F45               	movwf	69,b	;volatile
  1193                           
  1194                           ; BSR set to: 15
  1195                           ;can.c: 124: TXB0SIDH = (mess->sid) >> 3;
  1196  00027C  EE20 F008          	lfsr	2,8
  1197  000280  5020               	movf	ecan_send@mess,w,c
  1198  000282  26D9               	addwf	fsr2l,f,c
  1199  000284  5021               	movf	ecan_send@mess+1,w,c
  1200  000286  22DA               	addwfc	fsr2h,f,c
  1201  000288  CFDE F022          	movff	postinc2,??_ecan_send
  1202  00028C  CFDD F023          	movff	postdec2,??_ecan_send+1
  1203  000290  3423               	rlcf	??_ecan_send+1,w,c
  1204  000292  3223               	rrcf	??_ecan_send+1,f,c
  1205  000294  3222               	rrcf	??_ecan_send,f,c
  1206  000296  3423               	rlcf	??_ecan_send+1,w,c
  1207  000298  3223               	rrcf	??_ecan_send+1,f,c
  1208  00029A  3222               	rrcf	??_ecan_send,f,c
  1209  00029C  3423               	rlcf	??_ecan_send+1,w,c
  1210  00029E  3223               	rrcf	??_ecan_send+1,f,c
  1211  0002A0  3222               	rrcf	??_ecan_send,f,c
  1212  0002A2  5022               	movf	??_ecan_send,w,c
  1213  0002A4  010F               	movlb	15	; () banked
  1214  0002A6  6F41               	movwf	65,b	;volatile
  1215                           
  1216                           ; BSR set to: 15
  1217                           ;can.c: 125: TXB0SIDL = (mess->sid) << 5;
  1218  0002A8  EE20 F008          	lfsr	2,8
  1219  0002AC  5020               	movf	ecan_send@mess,w,c
  1220  0002AE  26D9               	addwf	fsr2l,f,c
  1221  0002B0  5021               	movf	ecan_send@mess+1,w,c
  1222  0002B2  22DA               	addwfc	fsr2h,f,c
  1223  0002B4  50DF               	movf	indf2,w,c
  1224  0002B6  6E22               	movwf	??_ecan_send& (0+255),c
  1225  0002B8  0E05               	movlw	5
  1226  0002BA  6E23               	movwf	(??_ecan_send+1)& (0+255),c
  1227  0002BC                     u305:
  1228  0002BC  90D8               	bcf	status,0,c
  1229  0002BE  3622               	rlcf	??_ecan_send,f,c
  1230  0002C0  2E23               	decfsz	(??_ecan_send+1)& (0+255),f,c
  1231  0002C2  D7FC               	goto	u305
  1232  0002C4  5022               	movf	??_ecan_send,w,c
  1233  0002C6  010F               	movlb	15	; () banked
  1234  0002C8  6F42               	movwf	66,b	;volatile
  1235                           
  1236                           ; BSR set to: 15
  1237                           ;can.c: 126: TXB0SIDLbits.EXIDE = 0;
  1238  0002CA  010F               	movlb	15	; () banked
  1239  0002CC  9742               	bcf	66,3,b	;volatile
  1240                           
  1241                           ; BSR set to: 15
  1242                           ;can.c: 129: TXB0CONbits.TXREQ = 1;
  1243  0002CE  010F               	movlb	15	; () banked
  1244  0002D0  8740               	bsf	64,3,b	;volatile
  1245                           
  1246                           ; BSR set to: 15
  1247  0002D2  0012               	return		;funcret
  1248  0002D4                     __end_of_ecan_send:
  1249                           	opt stack 0
  1250                           indf2	equ	0xFDF
  1251                           postinc2	equ	0xFDE
  1252                           postdec2	equ	0xFDD
  1253                           fsr2h	equ	0xFDA
  1254                           fsr2l	equ	0xFD9
  1255                           status	equ	0xFD8
  1256                           
  1257 ;; *************** function _ecan_init *****************
  1258 ;; Defined at:
  1259 ;;		line 11 in file "can.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;		None
  1262 ;; Auto vars:     Size  Location     Type
  1263 ;;  mask1           2   39[COMRAM] short 
  1264 ;;  sid1            2   37[COMRAM] short 
  1265 ;;  mask0           2   35[COMRAM] short 
  1266 ;;  sid0            2   33[COMRAM] short 
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2, status,0
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;Total ram usage:       10 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text12
  1291  0000AA                     __ptext12:
  1292                           	opt stack 0
  1293  0000AA                     _ecan_init:
  1294                           	opt stack 28
  1295                           
  1296                           ;can.c: 14: TRISBbits.TRISB2 = 0;
  1297                           
  1298                           ; BSR set to: 15
  1299                           ;incstack = 0
  1300  0000AA  9493               	bcf	3987,2,c	;volatile
  1301                           
  1302                           ;can.c: 15: TRISBbits.TRISB3 = 1;
  1303  0000AC  8693               	bsf	3987,3,c	;volatile
  1304                           
  1305                           ;can.c: 18: CANCONbits.REQOP2 = 1;
  1306  0000AE  8E6F               	bsf	3951,7,c	;volatile
  1307  0000B0                     l256:
  1308  0000B0  AE6E               	btfss	3950,7,c	;volatile
  1309  0000B2  AC6E               	btfss	3950,6,c	;volatile
  1310  0000B4  D002               	goto	l260
  1311  0000B6  BA6E               	btfsc	3950,5,c	;volatile
  1312  0000B8  D7FB               	goto	l256
  1313  0000BA                     l260:
  1314                           
  1315                           ;can.c: 26: CIOCONbits.ENDRHI = 0;
  1316  0000BA  9A73               	bcf	3955,5,c	;volatile
  1317                           
  1318                           ;can.c: 29: BRGCON1bits.SJW1 = 0;
  1319  0000BC  9E70               	bcf	3952,7,c	;volatile
  1320                           
  1321                           ;can.c: 30: BRGCON1bits.SJW0 = 0;
  1322  0000BE  9C70               	bcf	3952,6,c	;volatile
  1323                           
  1324                           ;can.c: 31: BRGCON1bits.BRP5 = 0;
  1325  0000C0  9A70               	bcf	3952,5,c	;volatile
  1326                           
  1327                           ;can.c: 32: BRGCON1bits.BRP4 = 0;
  1328  0000C2  9870               	bcf	3952,4,c	;volatile
  1329                           
  1330                           ;can.c: 33: BRGCON1bits.BRP3 = 0;
  1331  0000C4  9670               	bcf	3952,3,c	;volatile
  1332                           
  1333                           ;can.c: 34: BRGCON1bits.BRP2 = 0;
  1334  0000C6  9470               	bcf	3952,2,c	;volatile
  1335                           
  1336                           ;can.c: 35: BRGCON1bits.BRP1 = 0;
  1337  0000C8  9270               	bcf	3952,1,c	;volatile
  1338                           
  1339                           ;can.c: 36: BRGCON1bits.BRP0 = 1;
  1340  0000CA  8070               	bsf	3952,0,c	;volatile
  1341                           
  1342                           ;can.c: 38: BRGCON2bits.SEG2PHTS = 1;
  1343  0000CC  8E71               	bsf	3953,7,c	;volatile
  1344                           
  1345                           ;can.c: 39: BRGCON2bits.SAM = 1;
  1346  0000CE  8C71               	bsf	3953,6,c	;volatile
  1347                           
  1348                           ;can.c: 40: BRGCON2bits.SEG1PH2 = 0;
  1349  0000D0  9A71               	bcf	3953,5,c	;volatile
  1350                           
  1351                           ;can.c: 41: BRGCON2bits.SEG1PH1 = 0;
  1352  0000D2  9871               	bcf	3953,4,c	;volatile
  1353                           
  1354                           ;can.c: 42: BRGCON2bits.SEG1PH0 = 1;
  1355  0000D4  8671               	bsf	3953,3,c	;volatile
  1356                           
  1357                           ;can.c: 43: BRGCON2bits.PRSEG2 = 0;
  1358  0000D6  9471               	bcf	3953,2,c	;volatile
  1359                           
  1360                           ;can.c: 44: BRGCON2bits.PRSEG1 = 1;
  1361  0000D8  8271               	bsf	3953,1,c	;volatile
  1362                           
  1363                           ;can.c: 45: BRGCON2bits.PRSEG0 = 0;
  1364  0000DA  9071               	bcf	3953,0,c	;volatile
  1365                           
  1366                           ;can.c: 49: BRGCON3bits.SEG2PH2 = 0;
  1367  0000DC  9472               	bcf	3954,2,c	;volatile
  1368                           
  1369                           ;can.c: 50: BRGCON3bits. SEG2PH1 = 0;
  1370  0000DE  9272               	bcf	3954,1,c	;volatile
  1371                           
  1372                           ;can.c: 51: BRGCON3bits. SEG2PH0 = 1;
  1373  0000E0  8072               	bsf	3954,0,c	;volatile
  1374                           
  1375                           ;can.c: 54: ECANCONbits.MDSEL1 = 0;
  1376  0000E2  9E77               	bcf	3959,7,c	;volatile
  1377                           
  1378                           ;can.c: 55: ECANCONbits.MDSEL0 = 0;
  1379  0000E4  9C77               	bcf	3959,6,c	;volatile
  1380                           
  1381                           ;can.c: 62: RXB0CONbits.RXM1 = 0;
  1382  0000E6  9C60               	bcf	3936,6,c	;volatile
  1383                           
  1384                           ;can.c: 63: RXB0CONbits.RXM0 = 1;
  1385  0000E8  8A60               	bsf	3936,5,c	;volatile
  1386                           
  1387                           ;can.c: 67: RXB1CONbits.RXM1 = 0;
  1388  0000EA  010F               	movlb	15	; () banked
  1389  0000EC  9D50               	bcf	80,6,b	;volatile
  1390                           
  1391                           ;can.c: 68: RXB1CONbits.RXM0 = 1;
  1392  0000EE  010F               	movlb	15	; () banked
  1393  0000F0  8B50               	bsf	80,5,b	;volatile
  1394                           
  1395                           ; BSR set to: 15
  1396                           ;can.c: 77: short sid0 = 0x001;
  1397  0000F2  0E00               	movlw	0
  1398  0000F4  6E23               	movwf	ecan_init@sid0+1,c
  1399  0000F6  0E01               	movlw	1
  1400  0000F8  6E22               	movwf	ecan_init@sid0,c
  1401                           
  1402                           ;can.c: 78: short mask0 = 0x001;
  1403  0000FA  0E00               	movlw	0
  1404  0000FC  6E25               	movwf	ecan_init@mask0+1,c
  1405  0000FE  0E01               	movlw	1
  1406  000100  6E24               	movwf	ecan_init@mask0,c
  1407                           
  1408                           ; BSR set to: 15
  1409                           ;can.c: 80: RXF0SIDH = sid0 >> 3;
  1410  000102  C022  F020         	movff	ecan_init@sid0,??_ecan_init
  1411  000106  C023  F021         	movff	ecan_init@sid0+1,??_ecan_init+1
  1412  00010A  3421               	rlcf	??_ecan_init+1,w,c
  1413  00010C  3221               	rrcf	??_ecan_init+1,f,c
  1414  00010E  3220               	rrcf	??_ecan_init,f,c
  1415  000110  3421               	rlcf	??_ecan_init+1,w,c
  1416  000112  3221               	rrcf	??_ecan_init+1,f,c
  1417  000114  3220               	rrcf	??_ecan_init,f,c
  1418  000116  3421               	rlcf	??_ecan_init+1,w,c
  1419  000118  3221               	rrcf	??_ecan_init+1,f,c
  1420  00011A  3220               	rrcf	??_ecan_init,f,c
  1421  00011C  5020               	movf	??_ecan_init,w,c
  1422  00011E  010F               	movlb	15	; () banked
  1423  000120  6F00               	movwf	0,b	;volatile
  1424                           
  1425                           ; BSR set to: 15
  1426                           ;can.c: 81: RXF0SIDL = sid0 << 5;
  1427  000122  3822               	swapf	ecan_init@sid0,w,c
  1428  000124  46E8               	rlncf	wreg,f,c
  1429  000126  0BE0               	andlw	224
  1430  000128  010F               	movlb	15	; () banked
  1431  00012A  6F01               	movwf	1,b	;volatile
  1432                           
  1433                           ; BSR set to: 15
  1434                           ;can.c: 82: RXM0SIDH = mask0 >> 3;
  1435  00012C  C024  F020         	movff	ecan_init@mask0,??_ecan_init
  1436  000130  C025  F021         	movff	ecan_init@mask0+1,??_ecan_init+1
  1437  000134  3421               	rlcf	??_ecan_init+1,w,c
  1438  000136  3221               	rrcf	??_ecan_init+1,f,c
  1439  000138  3220               	rrcf	??_ecan_init,f,c
  1440  00013A  3421               	rlcf	??_ecan_init+1,w,c
  1441  00013C  3221               	rrcf	??_ecan_init+1,f,c
  1442  00013E  3220               	rrcf	??_ecan_init,f,c
  1443  000140  3421               	rlcf	??_ecan_init+1,w,c
  1444  000142  3221               	rrcf	??_ecan_init+1,f,c
  1445  000144  3220               	rrcf	??_ecan_init,f,c
  1446  000146  5020               	movf	??_ecan_init,w,c
  1447  000148  010F               	movlb	15	; () banked
  1448  00014A  6F18               	movwf	24,b	;volatile
  1449                           
  1450                           ; BSR set to: 15
  1451                           ;can.c: 83: RXM0SIDL = mask0 << 5;
  1452  00014C  3824               	swapf	ecan_init@mask0,w,c
  1453  00014E  46E8               	rlncf	wreg,f,c
  1454  000150  0BE0               	andlw	224
  1455  000152  010F               	movlb	15	; () banked
  1456  000154  6F19               	movwf	25,b	;volatile
  1457                           
  1458                           ; BSR set to: 15
  1459                           ;can.c: 84: RXF0SIDLbits.EXIDEN = 0;
  1460  000156  010F               	movlb	15	; () banked
  1461  000158  9701               	bcf	1,3,b	;volatile
  1462                           
  1463                           ; BSR set to: 15
  1464                           ;can.c: 85: RXFCON0bits.RXF0EN = 1;
  1465  00015A  010D               	movlb	13	; () banked
  1466  00015C  81D4               	bsf	212,0,b	;volatile
  1467                           
  1468                           ;can.c: 89: short sid1 = 0x000;
  1469  00015E  0E00               	movlw	0
  1470  000160  6E27               	movwf	ecan_init@sid1+1,c
  1471  000162  0E00               	movlw	0
  1472  000164  6E26               	movwf	ecan_init@sid1,c
  1473                           
  1474                           ;can.c: 90: short mask1 = 0x001;
  1475  000166  0E00               	movlw	0
  1476  000168  6E29               	movwf	ecan_init@mask1+1,c
  1477  00016A  0E01               	movlw	1
  1478  00016C  6E28               	movwf	ecan_init@mask1,c
  1479                           
  1480                           ; BSR set to: 13
  1481                           ;can.c: 92: RXF2SIDH = sid1 >> 3;
  1482  00016E  C026  F020         	movff	ecan_init@sid1,??_ecan_init
  1483  000172  C027  F021         	movff	ecan_init@sid1+1,??_ecan_init+1
  1484  000176  3421               	rlcf	??_ecan_init+1,w,c
  1485  000178  3221               	rrcf	??_ecan_init+1,f,c
  1486  00017A  3220               	rrcf	??_ecan_init,f,c
  1487  00017C  3421               	rlcf	??_ecan_init+1,w,c
  1488  00017E  3221               	rrcf	??_ecan_init+1,f,c
  1489  000180  3220               	rrcf	??_ecan_init,f,c
  1490  000182  3421               	rlcf	??_ecan_init+1,w,c
  1491  000184  3221               	rrcf	??_ecan_init+1,f,c
  1492  000186  3220               	rrcf	??_ecan_init,f,c
  1493  000188  5020               	movf	??_ecan_init,w,c
  1494  00018A  010F               	movlb	15	; () banked
  1495  00018C  6F08               	movwf	8,b	;volatile
  1496                           
  1497                           ; BSR set to: 15
  1498                           ;can.c: 93: RXF2SIDL = sid1 << 5;
  1499  00018E  3826               	swapf	ecan_init@sid1,w,c
  1500  000190  46E8               	rlncf	wreg,f,c
  1501  000192  0BE0               	andlw	224
  1502  000194  010F               	movlb	15	; () banked
  1503  000196  6F09               	movwf	9,b	;volatile
  1504                           
  1505                           ; BSR set to: 15
  1506                           ;can.c: 94: RXM1SIDH = mask1 >> 3;
  1507  000198  C028  F020         	movff	ecan_init@mask1,??_ecan_init
  1508  00019C  C029  F021         	movff	ecan_init@mask1+1,??_ecan_init+1
  1509  0001A0  3421               	rlcf	??_ecan_init+1,w,c
  1510  0001A2  3221               	rrcf	??_ecan_init+1,f,c
  1511  0001A4  3220               	rrcf	??_ecan_init,f,c
  1512  0001A6  3421               	rlcf	??_ecan_init+1,w,c
  1513  0001A8  3221               	rrcf	??_ecan_init+1,f,c
  1514  0001AA  3220               	rrcf	??_ecan_init,f,c
  1515  0001AC  3421               	rlcf	??_ecan_init+1,w,c
  1516  0001AE  3221               	rrcf	??_ecan_init+1,f,c
  1517  0001B0  3220               	rrcf	??_ecan_init,f,c
  1518  0001B2  5020               	movf	??_ecan_init,w,c
  1519  0001B4  010F               	movlb	15	; () banked
  1520  0001B6  6F1C               	movwf	28,b	;volatile
  1521                           
  1522                           ; BSR set to: 15
  1523                           ;can.c: 95: RXM1SIDL = mask1 << 5;
  1524  0001B8  3828               	swapf	ecan_init@mask1,w,c
  1525  0001BA  46E8               	rlncf	wreg,f,c
  1526  0001BC  0BE0               	andlw	224
  1527  0001BE  010F               	movlb	15	; () banked
  1528  0001C0  6F1D               	movwf	29,b	;volatile
  1529                           
  1530                           ; BSR set to: 15
  1531                           ;can.c: 96: RXF1SIDLbits.EXIDEN = 0;
  1532  0001C2  010F               	movlb	15	; () banked
  1533  0001C4  9705               	bcf	5,3,b	;volatile
  1534                           
  1535                           ; BSR set to: 15
  1536                           ;can.c: 97: RXFCON0bits.RXF2EN = 1;
  1537  0001C6  010D               	movlb	13	; () banked
  1538  0001C8  85D4               	bsf	212,2,b	;volatile
  1539                           
  1540                           ; BSR set to: 13
  1541                           ;can.c: 100: CANCONbits.REQOP2 = 0;
  1542  0001CA  9E6F               	bcf	3951,7,c	;volatile
  1543                           
  1544                           ; BSR set to: 13
  1545                           ;can.c: 101: CANCONbits.REQOP1 = 0;
  1546  0001CC  9C6F               	bcf	3951,6,c	;volatile
  1547                           
  1548                           ; BSR set to: 13
  1549                           ;can.c: 102: CANCONbits.REQOP0 = 0;
  1550  0001CE  9A6F               	bcf	3951,5,c	;volatile
  1551  0001D0                     l261:
  1552  0001D0  AE6E               	btfss	3950,7,c	;volatile
  1553  0001D2  0012               	return	
  1554  0001D4  AC6E               	btfss	3950,6,c	;volatile
  1555  0001D6  0012               	return	
  1556  0001D8  AA6E               	btfss	3950,5,c	;volatile
  1557  0001DA  0012               	return	
  1558  0001DC  D7F9               	goto	l261
  1559  0001DE                     __end_of_ecan_init:
  1560                           	opt stack 0
  1561                           wreg	equ	0xFE8
  1562                           indf2	equ	0xFDF
  1563                           postinc2	equ	0xFDE
  1564                           postdec2	equ	0xFDD
  1565                           fsr2h	equ	0xFDA
  1566                           fsr2l	equ	0xFD9
  1567                           status	equ	0xFD8
  1568                           
  1569 ;; *************** function _ConfigureOscillator *****************
  1570 ;; Defined at:
  1571 ;;		line 26 in file "system.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;		None
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;		None
  1576 ;; Return value:  Size  Location     Type
  1577 ;;                  1    wreg      void 
  1578 ;; Registers used:
  1579 ;;		None
  1580 ;; Tracked objects:
  1581 ;;		On entry : 0/0
  1582 ;;		On exit  : 0/0
  1583 ;;		Unchanged: 0/0
  1584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1589 ;;Total ram usage:        0 bytes
  1590 ;; Hardware stack levels used:    1
  1591 ;; Hardware stack levels required when called:    2
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text13
  1600  0004C6                     __ptext13:
  1601                           	opt stack 0
  1602  0004C6                     _ConfigureOscillator:
  1603                           	opt stack 28
  1604                           
  1605                           ;system.c: 31: OSCCONbits.IRCF2 = 1;
  1606                           
  1607                           ;incstack = 0
  1608  0004C6  8CD3               	bsf	4051,6,c	;volatile
  1609                           
  1610                           ;system.c: 32: OSCCONbits.IRCF1 = 1;
  1611  0004C8  8AD3               	bsf	4051,5,c	;volatile
  1612                           
  1613                           ;system.c: 33: OSCCONbits.IRCF0 = 1;
  1614  0004CA  88D3               	bsf	4051,4,c	;volatile
  1615                           
  1616                           ;system.c: 35: OSCCONbits.SCS1 = 0;
  1617  0004CC  92D3               	bcf	4051,1,c	;volatile
  1618                           
  1619                           ;system.c: 36: OSCCONbits.SCS0 = 0;
  1620  0004CE  90D3               	bcf	4051,0,c	;volatile
  1621                           
  1622                           ;system.c: 38: OSCTUNEbits.PLLEN = 1;
  1623  0004D0  8C9B               	bsf	3995,6,c	;volatile
  1624  0004D2  0012               	return		;funcret
  1625  0004D4                     __end_of_ConfigureOscillator:
  1626                           	opt stack 0
  1627                           wreg	equ	0xFE8
  1628                           indf2	equ	0xFDF
  1629                           postinc2	equ	0xFDE
  1630                           postdec2	equ	0xFDD
  1631                           fsr2h	equ	0xFDA
  1632                           fsr2l	equ	0xFD9
  1633                           status	equ	0xFD8
  1634                           
  1635 ;; *************** function _low_isr *****************
  1636 ;; Defined at:
  1637 ;;		line 67 in file "interrupts.c"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		None
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1653 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1654 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1655 ;;Total ram usage:       17 bytes
  1656 ;; Hardware stack levels used:    1
  1657 ;; Hardware stack levels required when called:    1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		Interrupt level 1
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	intcodelo
  1666  000018                     __pintcodelo:
  1667                           	opt stack 0
  1668  000018                     _low_isr:
  1669                           	opt stack 26
  1670                           
  1671                           ;incstack = 0
  1672  000018  802A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1673  00001A  CFD8 F00F          	movff	status,??_low_isr
  1674  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  1675  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  1676  000026  CFFA F012          	movff	pclath,??_low_isr+3
  1677  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  1678  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  1679  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  1680  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  1681  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  1682  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  1683  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  1684  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  1685  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  1686  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  1687  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  1688  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  1689  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  1690  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
  1691  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
  1692  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  1693  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  1694  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
  1695  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
  1696  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
  1697  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
  1698  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
  1699  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
  1700  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
  1701  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
  1702  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
  1703  000092  C012  FFFA         	movff	??_low_isr+3,pclath
  1704  000096  C011  FFE0         	movff	??_low_isr+2,bsr
  1705  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
  1706  00009E  C00F  FFD8         	movff	??_low_isr,status
  1707  0000A2  902A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1708  0000A4  0010               	retfie	
  1709  0000A6                     __end_of_low_isr:
  1710                           	opt stack 0
  1711                           pclatu	equ	0xFFB
  1712                           pclath	equ	0xFFA
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           prodh	equ	0xFF4
  1718                           prodl	equ	0xFF3
  1719                           fsr0h	equ	0xFEA
  1720                           fsr0l	equ	0xFE9
  1721                           wreg	equ	0xFE8
  1722                           fsr1h	equ	0xFE2
  1723                           fsr1l	equ	0xFE1
  1724                           bsr	equ	0xFE0
  1725                           indf2	equ	0xFDF
  1726                           postinc2	equ	0xFDE
  1727                           postdec2	equ	0xFDD
  1728                           fsr2h	equ	0xFDA
  1729                           fsr2l	equ	0xFD9
  1730                           status	equ	0xFD8
  1731                           
  1732 ;; *************** function _high_isr *****************
  1733 ;; Defined at:
  1734 ;;		line 27 in file "interrupts.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;		None
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		None
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1750 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1751 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1752 ;;Total ram usage:       14 bytes
  1753 ;; Hardware stack levels used:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		Interrupt level 2
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	intcode
  1762  000008                     __pintcode:
  1763                           	opt stack 0
  1764  000008                     _high_isr:
  1765                           	opt stack 26
  1766                           
  1767                           ;incstack = 0
  1768  000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1769  00000A  CFFA F001          	movff	pclath,??_high_isr
  1770  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
  1771  000012  EFD1  F001         	goto	int_func
  1772                           pclatu	equ	0xFFB
  1773                           pclath	equ	0xFFA
  1774                           tblptru	equ	0xFF8
  1775                           tblptrh	equ	0xFF7
  1776                           tblptrl	equ	0xFF6
  1777                           tablat	equ	0xFF5
  1778                           prodh	equ	0xFF4
  1779                           prodl	equ	0xFF3
  1780                           fsr0h	equ	0xFEA
  1781                           fsr0l	equ	0xFE9
  1782                           wreg	equ	0xFE8
  1783                           fsr1h	equ	0xFE2
  1784                           fsr1l	equ	0xFE1
  1785                           bsr	equ	0xFE0
  1786                           indf2	equ	0xFDF
  1787                           postinc2	equ	0xFDE
  1788                           postdec2	equ	0xFDD
  1789                           fsr2h	equ	0xFDA
  1790                           fsr2l	equ	0xFD9
  1791                           status	equ	0xFD8
  1792                           
  1793                           	psect	intcode_body
  1794  0003A2                     __pintcode_body:
  1795                           	opt stack 26
  1796  0003A2                     int_func:
  1797                           	opt stack 26
  1798  0003A2  CFE9 F003          	movff	fsr0l,??_high_isr+2
  1799  0003A6  CFEA F004          	movff	fsr0h,??_high_isr+3
  1800  0003AA  CFE1 F005          	movff	fsr1l,??_high_isr+4
  1801  0003AE  CFE2 F006          	movff	fsr1h,??_high_isr+5
  1802  0003B2  CFD9 F007          	movff	fsr2l,??_high_isr+6
  1803  0003B6  CFDA F008          	movff	fsr2h,??_high_isr+7
  1804  0003BA  CFF3 F009          	movff	prodl,??_high_isr+8
  1805  0003BE  CFF4 F00A          	movff	prodh,??_high_isr+9
  1806  0003C2  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  1807  0003C6  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  1808  0003CA  CFF8 F00D          	movff	tblptru,??_high_isr+12
  1809  0003CE  CFF5 F00E          	movff	tablat,??_high_isr+13
  1810  0003D2  C00E  FFF5         	movff	??_high_isr+13,tablat
  1811  0003D6  C00D  FFF8         	movff	??_high_isr+12,tblptru
  1812  0003DA  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  1813  0003DE  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  1814  0003E2  C00A  FFF4         	movff	??_high_isr+9,prodh
  1815  0003E6  C009  FFF3         	movff	??_high_isr+8,prodl
  1816  0003EA  C008  FFDA         	movff	??_high_isr+7,fsr2h
  1817  0003EE  C007  FFD9         	movff	??_high_isr+6,fsr2l
  1818  0003F2  C006  FFE2         	movff	??_high_isr+5,fsr1h
  1819  0003F6  C005  FFE1         	movff	??_high_isr+4,fsr1l
  1820  0003FA  C004  FFEA         	movff	??_high_isr+3,fsr0h
  1821  0003FE  C003  FFE9         	movff	??_high_isr+2,fsr0l
  1822  000402  C002  FFFB         	movff	??_high_isr+1,pclatu
  1823  000406  C001  FFFA         	movff	??_high_isr,pclath
  1824  00040A  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1825  00040C  0011               	retfie		f
  1826  00040E                     __end_of_high_isr:
  1827                           	opt stack 0
  1828  0000                     pclatu	equ	0xFFB
  1829                           pclath	equ	0xFFA
  1830                           tblptru	equ	0xFF8
  1831                           tblptrh	equ	0xFF7
  1832                           tblptrl	equ	0xFF6
  1833                           tablat	equ	0xFF5
  1834                           prodh	equ	0xFF4
  1835                           prodl	equ	0xFF3
  1836                           fsr0h	equ	0xFEA
  1837                           fsr0l	equ	0xFE9
  1838                           wreg	equ	0xFE8
  1839                           fsr1h	equ	0xFE2
  1840                           fsr1l	equ	0xFE1
  1841                           bsr	equ	0xFE0
  1842                           indf2	equ	0xFDF
  1843                           postinc2	equ	0xFDE
  1844                           postdec2	equ	0xFDD
  1845                           fsr2h	equ	0xFDA
  1846                           fsr2l	equ	0xFD9
  1847                           status	equ	0xFD8
  1848                           pclatu	equ	0xFFB
  1849                           pclath	equ	0xFFA
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           prodh	equ	0xFF4
  1855                           prodl	equ	0xFF3
  1856                           fsr0h	equ	0xFEA
  1857                           fsr0l	equ	0xFE9
  1858                           wreg	equ	0xFE8
  1859                           fsr1h	equ	0xFE2
  1860                           fsr1l	equ	0xFE1
  1861                           bsr	equ	0xFE0
  1862                           indf2	equ	0xFDF
  1863                           postinc2	equ	0xFDE
  1864                           postdec2	equ	0xFDD
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869                           	psect	rparam
  1870  0000                     pclatu	equ	0xFFB
  1871                           pclath	equ	0xFFA
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           fsr0h	equ	0xFEA
  1879                           fsr0l	equ	0xFE9
  1880                           wreg	equ	0xFE8
  1881                           fsr1h	equ	0xFE2
  1882                           fsr1l	equ	0xFE1
  1883                           bsr	equ	0xFE0
  1884                           indf2	equ	0xFDF
  1885                           postinc2	equ	0xFDE
  1886                           postdec2	equ	0xFDD
  1887                           fsr2h	equ	0xFDA
  1888                           fsr2l	equ	0xFD9
  1889                           status	equ	0xFD8
  1890                           
  1891                           	psect	temp
  1892  00002A                     btemp:
  1893                           	opt stack 0
  1894  00002A                     	ds	1
  1895  0000                     int$flags	set	btemp
  1896                           pclatu	equ	0xFFB
  1897                           pclath	equ	0xFFA
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           prodh	equ	0xFF4
  1903                           prodl	equ	0xFF3
  1904                           fsr0h	equ	0xFEA
  1905                           fsr0l	equ	0xFE9
  1906                           wreg	equ	0xFE8
  1907                           fsr1h	equ	0xFE2
  1908                           fsr1l	equ	0xFE1
  1909                           bsr	equ	0xFE0
  1910                           indf2	equ	0xFDF
  1911                           postinc2	equ	0xFDE
  1912                           postdec2	equ	0xFDD
  1913                           fsr2h	equ	0xFDA
  1914                           fsr2l	equ	0xFD9
  1915                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      41
    BANK0           160     24      24
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    ecan_send@mess	PTR struct Message size(2) Largest target is 11
		 -> main@accelPack(BANK0[11]), 


Critical Paths under _main in COMRAM

    _main->_ecan_init
    _i2c_writeToReg->_i2c_address
    _i2c_get_byte->_i2c_address
    _i2c_get_byte->_i2c_read
    _i2c_write->_i2c_wait
    _i2c_stop->_i2c_wait
    _i2c_start->_i2c_wait
    _i2c_restart->_i2c_wait
    _i2c_read->_i2c_wait
    _i2c_address->_i2c_wait

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    2521
                                              0 BANK0     24    24      0
                _ConfigureOscillator
                          _ecan_init
                          _ecan_send
                       _i2c_get_byte
                           _i2c_init
                     _i2c_writeToReg
 ---------------------------------------------------------------------------------
 (1) _i2c_writeToReg                                       3     1      2     900
                                             34 COMRAM     3     1      2
                        _i2c_address
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_get_byte                                         4     2      2     840
                                             34 COMRAM     4     2      2
                        _i2c_address
                           _i2c_read
                        _i2c_restart
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (2) _i2c_write                                            1     1      0      22
                                             32 COMRAM     1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_restart                                          0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                             2     2      0      45
                                             32 COMRAM     2     2      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (2) _i2c_address                                          2     1      1     556
                                             32 COMRAM     2     1      1
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_wait                                             1     1      0       0
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ecan_send                                            4     2      2     306
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ecan_init                                           10    10      0     180
                                             31 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _ecan_init
   _ecan_send
   _i2c_get_byte
     _i2c_address
       _i2c_wait
     _i2c_read
       _i2c_wait
     _i2c_restart
       _i2c_wait
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait
   _i2c_init
   _i2c_writeToReg
     _i2c_address
       _i2c_wait
     _i2c_start
       _i2c_wait
     _i2c_stop
       _i2c_wait
     _i2c_write
       _i2c_wait

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     29      29       1       43.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     18      18       5       15.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BIGRAM             CFF      0       0      31        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Tue Mar  1 01:21:32 2016

             i2c_address@mode 0021                   _SSPSTATbits 000FC7                            bsr 000FE0  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                  __CFG_CP4$OFF 000000  
                __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000                           l330 0464  
                         l331 0466                           l260 00BA                           l261 01D0  
                         l256 00B0                  __CFG_CPB$OFF 000000                           u305 02BC  
                __CFG_CPD$OFF 000000            i2c_address@address 0022                           wreg 000FE8  
     __size_of_i2c_writeToReg 0022                  __CFG_WDT$OFF 000000                          l1401 0356  
                        l1267 04A4                 ?_i2c_get_byte 0023                 ??_i2c_address 0022  
                        _main 02D4                   main@tempOne 0064                   main@tempTwo 0066  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 002A                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A6  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                 ??_i2c_restart 0021  
                ___param_bank 000010          i2c_get_byte@dataAddr 0023                         ?_main 0001  
                       _ACKDT 007E2D                   i2c_read@ack 0021           _ConfigureOscillator 04C6  
               __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                 __CFG_WRT4$OFF 000000  
               __CFG_WRT5$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
              __CFG_EBTR4$OFF 000000                __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
              ??_i2c_get_byte 0025               __end_of_low_isr 00A6                         tablat 000FF5  
               main@accelPack 006D                         status 000FD8                __CFG_PBADEN$ON 000000  
        ?_ConfigureOscillator 0001           __end_of_i2c_address 04C6               __initialization 04E0  
           i2c_get_byte@data1 0025                  __end_of_main 03A2                 main@xAccelRaw 0068  
            __end_of_i2c_init 04A4              __end_of_i2c_read 046C              __end_of_i2c_wait 04B6  
            __end_of_i2c_stop 04F2                 main@yAccelRaw 0060                 main@destAddr0 006B  
               main@zAccelRaw 0062           __end_of_i2c_restart 0502                        ??_main 002A  
               __activetblptr 000000                        _ADRESH 000FC4                        _ADRESL 000FC3  
             __CFG_BBSIZ$1024 000000                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB0D4 000F4A                        _TXB0D5 000F4B                        _TXB0D6 000F4C  
                      _TXB0D7 000F4D                        _SSPADD 000FC8                        _SSPBUF 000FC9  
          __size_of_i2c_start 0008            __size_of_i2c_write 000C         ??_ConfigureOscillator 0020  
              __CFG_XINST$OFF 000000                 main@sendData0 006C              __end_of_high_isr 040E  
              __CFG_STVREN$ON 000000               __CFG_BOREN$BOHW 000000                 ecan_init@sid0 0022  
               ecan_init@sid1 0026                _i2c_writeToReg 046C                     ??_low_isr 000F  
       i2c_get_byte@slaveAddr 0026                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8       i2c_writeToReg@slaveAddr 0025                 ecan_send@mess 0020  
                 _i2c_address 04B6                    __accesstop 0060       __end_of__initialization 04E0  
               ___rparam_used 000001                __pcstackCOMRAM 0001                   _i2c_restart 04FA  
          __size_of_ecan_init 0134            __size_of_ecan_send 00F6          __end_of_i2c_get_byte 0446  
           __end_of_i2c_start 04FA        __end_of_i2c_writeToReg 048E             __end_of_i2c_write 04E0  
         i2c_read@i2cReadData 0022                     ?_i2c_init 0001                     ?_i2c_read 0001  
                   ?_i2c_wait 0001                     ?_i2c_stop 0001               ?_i2c_writeToReg 0023  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _TXB0DLC 000F45  
                     _SSPCON1 000FC6                       _SSPCON2 000FC5                     ?_high_isr 0001  
                     _SSPSTAT 000FC7             __end_of_ecan_init 01DE             __end_of_ecan_send 02D4  
                  ??_i2c_init 0020                    ??_i2c_read 0021                    ??_i2c_wait 0020  
                  ??_i2c_stop 0021                       __Hparam 0000                       __Lparam 0000  
                     __pcinit 04E0                       __ramtop 0D00                       __ptext0 02D4  
                     __ptext1 046C                       __ptext2 048E                       __ptext3 040E  
                     __ptext4 04D4                       __ptext5 04EA                       __ptext6 04F2  
                     __ptext7 04FA                       __ptext8 0446                       __ptext9 04B6  
              main@slaveAddr0 006A                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 03A2          end_of_initialization 04E0                ecan_init@mask0 0024  
              ecan_init@mask1 0028                       int_func 03A2         __size_of_i2c_get_byte 0038  
                     postdec2 000FDD                       postinc2 000FDE                 i2c_write@data 0021  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TRISDbits 000F95                     _TRISEbits 000F96   __end_of_ConfigureOscillator 04D4  
                _i2c_get_byte 040E                  ?_i2c_address 0021                  ?_i2c_restart 0001  
                 _ECANCONbits 000F77           start_initialization 04E0                     _i2c_start 04F2  
                   _i2c_write 04D4                   _CANSTATbits 000F6E              __CFG_OSC$IRCIO67 000000  
      i2c_writeToReg@destAddr 0023             __size_of_i2c_init 0016             __size_of_i2c_read 0026  
           __size_of_i2c_wait 0012             __size_of_i2c_stop 0008              ??_i2c_writeToReg 0025  
            __CFG_LPT1OSC$OFF 000000        i2c_writeToReg@sendData 0024                 __pcstackBANK0 0060  
                 _BRGCON1bits 000F70                   _BRGCON2bits 000F71                    ?_i2c_start 0001  
                 _BRGCON3bits 000F72                    ?_i2c_write 0001             __size_of_high_isr 0406  
                   _ecan_init 00AA                     _ecan_send 01DE                     __pintcode 0008  
                 __pintcodelo 0018                      ?_low_isr 0001                    ?_ecan_init 0001  
                  ?_ecan_send 0020          __size_of_i2c_address 0010              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXB1SIDH 000F51  
                    _RXB1SIDL 000F52                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
                    _RXF2SIDH 000F08                      _RXF2SIDL 000F09                      _TXB0SIDH 000F41  
                    _TXB0SIDL 000F42                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D          __size_of_i2c_restart 0008  
                  _ADCON0bits 000FC2                    _ADCON1bits 000FC1                    _ADCON2bits 000FC0  
                 ??_i2c_start 0021                   ??_i2c_write 0021                    _CANCONbits 000F6F  
                    _i2c_init 048E                      _i2c_read 0446                      _i2c_wait 04A4  
                    _i2c_stop 04EA                      __Hrparam 0000                      __Lrparam 0000  
                  _CIOCONbits 000F73                  _RXF0SIDLbits 000F01                  _RXF1SIDLbits 000F05  
            __size_of_low_isr 008E                      __ptext10 04A4                      __ptext11 01DE  
                    __ptext12 00AA                      __ptext13 04C6                      _high_isr 0008  
               __size_of_main 00CE                   ??_ecan_init 0020                   ??_ecan_send 0022  
__size_of_ConfigureOscillator 000E                  _TXB0SIDLbits 000F42                      int$flags 002A  
                 _RXB0CONbits 000F60                   _RXB1CONbits 000F50                   _OSCTUNEbits 000F9B  
                    intlevel1 0000                      intlevel2 0000                   _TXB0CONbits 000F40  
                  _OSCCONbits 000FD3                   _RXFCON0bits 000DD4                   _SSPCON1bits 000FC6  
                 _SSPCON2bits 000FC5  
