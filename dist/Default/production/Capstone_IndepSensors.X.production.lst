

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Sun Feb 28 04:16:58 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4685
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     _ADCON0bits	set	4034
    31  0000                     _ADCON1bits	set	4033
    32  0000                     _ADCON2bits	set	4032
    33  0000                     _ADRESH	set	4036
    34  0000                     _ADRESL	set	4035
    35  0000                     _LATCbits	set	3979
    36  0000                     _OSCCONbits	set	4051
    37  0000                     _OSCTUNEbits	set	3995
    38  0000                     _SSPBUF	set	4041
    39  0000                     _SSPCON1bits	set	4038
    40  0000                     _SSPSTATbits	set	4039
    41  0000                     _TRISAbits	set	3986
    42  0000                     _TRISBbits	set	3987
    43  0000                     _TRISCbits	set	3988
    44  0000                     _TRISDbits	set	3989
    45  0000                     _TRISEbits	set	3990
    46                           
    47                           ; #config settings
    48  0000                     
    49                           	psect	cinit
    50  000786                     __pcinit:
    51                           	opt stack 0
    52  000786                     start_initialization:
    53                           	opt stack 0
    54  000786                     __initialization:
    55                           	opt stack 0
    56  000786                     end_of_initialization:
    57                           	opt stack 0
    58  000786                     __end_of__initialization:
    59                           	opt stack 0
    60  000786  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    61  000788  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    62  00078A  0100               	movlb	0
    63  00078C  EF55  F000         	goto	_main	;jump to C main() function
    64                           
    65                           	psect	cstackBANK0
    66  000060                     __pcstackBANK0:
    67                           	opt stack 0
    68  000060                     main@xAccel:
    69                           	opt stack 0
    70                           
    71                           ; 3 bytes @ 0x0
    72  000060                     	ds	3
    73  000063                     main@yAccel:
    74                           	opt stack 0
    75                           
    76                           ; 3 bytes @ 0x3
    77  000063                     	ds	3
    78  000066                     main@zAccel:
    79                           	opt stack 0
    80                           
    81                           ; 3 bytes @ 0x6
    82  000066                     	ds	3
    83  000069                     main@xGyro:
    84                           	opt stack 0
    85                           
    86                           ; 3 bytes @ 0x9
    87  000069                     	ds	3
    88  00006C                     main@yGyro:
    89                           	opt stack 0
    90                           
    91                           ; 3 bytes @ 0xC
    92  00006C                     	ds	3
    93  00006F                     main@zGyro:
    94                           	opt stack 0
    95                           
    96                           ; 3 bytes @ 0xF
    97  00006F                     	ds	3
    98  000072                     main@tempOne:
    99                           	opt stack 0
   100                           
   101                           ; 2 bytes @ 0x12
   102  000072                     	ds	2
   103  000074                     main@tempTwo:
   104                           	opt stack 0
   105                           
   106                           ; 2 bytes @ 0x14
   107  000074                     	ds	2
   108  000076                     main@xGyroRate:
   109                           	opt stack 0
   110                           
   111                           ; 3 bytes @ 0x16
   112  000076                     	ds	3
   113  000079                     main@yGyroRate:
   114                           	opt stack 0
   115                           
   116                           ; 3 bytes @ 0x19
   117  000079                     	ds	3
   118  00007C                     main@zGyroRate:
   119                           	opt stack 0
   120                           
   121                           ; 3 bytes @ 0x1C
   122  00007C                     	ds	3
   123  00007F                     main@xAccelRaw:
   124                           	opt stack 0
   125                           
   126                           ; 2 bytes @ 0x1F
   127  00007F                     	ds	2
   128  000081                     main@yAccelRaw:
   129                           	opt stack 0
   130                           
   131                           ; 2 bytes @ 0x21
   132  000081                     	ds	2
   133  000083                     main@zAccelRaw:
   134                           	opt stack 0
   135                           
   136                           ; 2 bytes @ 0x23
   137  000083                     	ds	2
   138  000085                     main@xGyroRaw:
   139                           	opt stack 0
   140                           
   141                           ; 2 bytes @ 0x25
   142  000085                     	ds	2
   143  000087                     main@yGyroRaw:
   144                           	opt stack 0
   145                           
   146                           ; 2 bytes @ 0x27
   147  000087                     	ds	2
   148  000089                     main@zGyroRaw:
   149                           	opt stack 0
   150                           
   151                           ; 2 bytes @ 0x29
   152  000089                     	ds	2
   153  00008B                     main@checkRegReady:
   154                           	opt stack 0
   155                           
   156                           ; 1 bytes @ 0x2B
   157  00008B                     	ds	1
   158  00008C                     main@accelStat:
   159                           	opt stack 0
   160                           
   161                           ; 1 bytes @ 0x2C
   162  00008C                     	ds	1
   163  00008D                     main@gyroStat:
   164                           	opt stack 0
   165                           
   166                           ; 1 bytes @ 0x2D
   167  00008D                     	ds	1
   168  00008E                     main@loopPeriod:
   169                           	opt stack 0
   170                           
   171                           ; 3 bytes @ 0x2E
   172  00008E                     	ds	3
   173                           
   174                           	psect	cstackCOMRAM
   175  000001                     __pcstackCOMRAM:
   176                           	opt stack 0
   177  000001                     ??_high_isr:
   178  000001                     
   179                           ; 1 bytes @ 0x0
   180  000001                     	ds	14
   181  00000F                     ??_low_isr:
   182                           
   183                           ; 1 bytes @ 0xE
   184  00000F                     	ds	17
   185  000020                     ?_readADC:
   186                           	opt stack 0
   187  000020                     ?___ftpack:
   188                           	opt stack 0
   189  000020                     spi_write@message:
   190                           	opt stack 0
   191  000020                     delay_milli@time:
   192                           	opt stack 0
   193  000020                     ___ftpack@arg:
   194                           	opt stack 0
   195                           
   196                           ; 3 bytes @ 0x1F
   197  000020                     	ds	1
   198  000021                     ?_readX:
   199                           	opt stack 0
   200  000021                     ?_readY:
   201                           	opt stack 0
   202  000021                     ?_readZ:
   203                           	opt stack 0
   204                           
   205                           ; 2 bytes @ 0x20
   206  000021                     	ds	1
   207  000022                     ??_delay_milli:
   208  000022                     readADC@digitalVal:
   209                           	opt stack 0
   210                           
   211                           ; 2 bytes @ 0x21
   212  000022                     	ds	1
   213  000023                     ??_readX:
   214  000023                     ??_readY:
   215  000023                     ??_readZ:
   216  000023                     ___ftpack@exp:
   217                           	opt stack 0
   218  000023                     delay_milli@i:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x22
   222  000023                     	ds	1
   223  000024                     ___ftpack@sign:
   224                           	opt stack 0
   225  000024                     readX@x:
   226                           	opt stack 0
   227  000024                     readY@y:
   228                           	opt stack 0
   229  000024                     readZ@z:
   230                           	opt stack 0
   231                           
   232                           ; 2 bytes @ 0x23
   233  000024                     	ds	1
   234  000025                     ??___ftpack:
   235                           
   236                           ; 1 bytes @ 0x24
   237  000025                     	ds	3
   238  000028                     ?___awtoft:
   239                           	opt stack 0
   240  000028                     ___awtoft@c:
   241                           	opt stack 0
   242                           
   243                           ; 2 bytes @ 0x27
   244  000028                     	ds	3
   245  00002B                     ___awtoft@sign:
   246                           	opt stack 0
   247                           
   248                           ; 1 bytes @ 0x2A
   249  00002B                     	ds	1
   250  00002C                     ?___ftmul:
   251                           	opt stack 0
   252  00002C                     ___ftmul@f1:
   253                           	opt stack 0
   254                           
   255                           ; 3 bytes @ 0x2B
   256  00002C                     	ds	3
   257  00002F                     ___ftmul@f2:
   258                           	opt stack 0
   259                           
   260                           ; 3 bytes @ 0x2E
   261  00002F                     	ds	3
   262  000032                     ??___ftmul:
   263                           
   264                           ; 1 bytes @ 0x31
   265  000032                     	ds	3
   266  000035                     ___ftmul@exp:
   267                           	opt stack 0
   268                           
   269                           ; 1 bytes @ 0x34
   270  000035                     	ds	1
   271  000036                     ___ftmul@f3_as_product:
   272                           	opt stack 0
   273                           
   274                           ; 3 bytes @ 0x35
   275  000036                     	ds	3
   276  000039                     ___ftmul@cntr:
   277                           	opt stack 0
   278                           
   279                           ; 1 bytes @ 0x38
   280  000039                     	ds	1
   281  00003A                     ___ftmul@sign:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x39
   285  00003A                     	ds	1
   286  00003B                     
   287                           ; 1 bytes @ 0x3A
   288 ;;
   289 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   290 ;;
   291 ;; *************** function _main *****************
   292 ;; Defined at:
   293 ;;		line 52 in file "main.c"
   294 ;; Parameters:    Size  Location     Type
   295 ;;		None
   296 ;; Auto vars:     Size  Location     Type
   297 ;;  zGyroRate       3   28[BANK0 ] float 
   298 ;;  yGyroRate       3   25[BANK0 ] float 
   299 ;;  xGyroRate       3   22[BANK0 ] float 
   300 ;;  gyroStat        1   45[BANK0 ] unsigned char 
   301 ;;  accelStat       1   44[BANK0 ] unsigned char 
   302 ;;  loopPeriod      3   46[BANK0 ] unsigned char 
   303 ;;  zGyro           3   15[BANK0 ] float 
   304 ;;  yGyro           3   12[BANK0 ] float 
   305 ;;  xGyro           3    9[BANK0 ] float 
   306 ;;  zAccel          3    6[BANK0 ] float 
   307 ;;  yAccel          3    3[BANK0 ] float 
   308 ;;  xAccel          3    0[BANK0 ] float 
   309 ;;  zGyroRaw        2   41[BANK0 ] int 
   310 ;;  yGyroRaw        2   39[BANK0 ] int 
   311 ;;  xGyroRaw        2   37[BANK0 ] int 
   312 ;;  zAccelRaw       2   35[BANK0 ] int 
   313 ;;  yAccelRaw       2   33[BANK0 ] int 
   314 ;;  xAccelRaw       2   31[BANK0 ] int 
   315 ;;  tempTwo         2   20[BANK0 ] unsigned int 
   316 ;;  tempOne         2   18[BANK0 ] unsigned int 
   317 ;;  checkRegRead    1   43[BANK0 ] unsigned char 
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, status,2, status,0, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   328 ;;      Locals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   330 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0
   331 ;;Total ram usage:       49 bytes
   332 ;; Hardware stack levels required when called:    4
   333 ;; This function calls:
   334 ;;		_ConfigureOscillator
   335 ;;		___awtoft
   336 ;;		___ftmul
   337 ;;		_delay_milli
   338 ;;		_init_AccelFS
   339 ;;		_init_spi
   340 ;;		_readADC
   341 ;;		_readX
   342 ;;		_readY
   343 ;;		_readZ
   344 ;;		_selectAN0
   345 ;;		_selectAN1
   346 ;;		_spi_read
   347 ;;		_spi_write
   348 ;; This function is called by:
   349 ;;		Startup code after reset
   350 ;; This function uses a non-reentrant model
   351 ;;
   352                           
   353                           	psect	text0
   354  0000AA                     __ptext0:
   355                           	opt stack 0
   356  0000AA                     _main:
   357                           	opt stack 27
   358                           
   359                           ;main.c: 55: ConfigureOscillator();
   360                           
   361                           ;incstack = 0
   362  0000AA  ECBD  F003         	call	_ConfigureOscillator	;wreg free
   363                           
   364                           ;main.c: 58: init_spi();
   365  0000AE  EC94  F003         	call	_init_spi	;wreg free
   366                           
   367                           ;main.c: 59: init_AccelFS();
   368  0000B2  ECB0  F003         	call	_init_AccelFS	;wreg free
   369                           
   370                           ;main.c: 61: char checkRegReady = 0xA7;
   371  0000B6  0EA7               	movlw	167
   372  0000B8  0100               	movlb	0	; () banked
   373  0000BA  6F8B               	movwf	main@checkRegReady& (0+255),b
   374                           
   375                           ; BSR set to: 0
   376                           ;main.c: 63: int16_t xAccelRaw = 0;
   377  0000BC  0E00               	movlw	0
   378  0000BE  0100               	movlb	0	; () banked
   379  0000C0  6F80               	movwf	(main@xAccelRaw+1)& (0+255),b
   380  0000C2  0E00               	movlw	0
   381  0000C4  6F7F               	movwf	main@xAccelRaw& (0+255),b
   382                           
   383                           ; BSR set to: 0
   384                           ;main.c: 64: int16_t yAccelRaw = 0;
   385  0000C6  0E00               	movlw	0
   386  0000C8  0100               	movlb	0	; () banked
   387  0000CA  6F82               	movwf	(main@yAccelRaw+1)& (0+255),b
   388  0000CC  0E00               	movlw	0
   389  0000CE  6F81               	movwf	main@yAccelRaw& (0+255),b
   390                           
   391                           ; BSR set to: 0
   392                           ;main.c: 65: int16_t zAccelRaw = 0;
   393  0000D0  0E00               	movlw	0
   394  0000D2  0100               	movlb	0	; () banked
   395  0000D4  6F84               	movwf	(main@zAccelRaw+1)& (0+255),b
   396  0000D6  0E00               	movlw	0
   397  0000D8  6F83               	movwf	main@zAccelRaw& (0+255),b
   398                           
   399                           ; BSR set to: 0
   400                           ;main.c: 67: float xAccel = 0;
   401  0000DA  0E00               	movlw	0
   402  0000DC  0100               	movlb	0	; () banked
   403  0000DE  6F60               	movwf	main@xAccel& (0+255),b
   404  0000E0  0E00               	movlw	0
   405  0000E2  0100               	movlb	0	; () banked
   406  0000E4  6F61               	movwf	(main@xAccel+1)& (0+255),b
   407  0000E6  0E00               	movlw	0
   408  0000E8  0100               	movlb	0	; () banked
   409  0000EA  6F62               	movwf	(main@xAccel+2)& (0+255),b
   410                           
   411                           ; BSR set to: 0
   412                           ;main.c: 68: float yAccel = 0;
   413  0000EC  0E00               	movlw	0
   414  0000EE  0100               	movlb	0	; () banked
   415  0000F0  6F63               	movwf	main@yAccel& (0+255),b
   416  0000F2  0E00               	movlw	0
   417  0000F4  0100               	movlb	0	; () banked
   418  0000F6  6F64               	movwf	(main@yAccel+1)& (0+255),b
   419  0000F8  0E00               	movlw	0
   420  0000FA  0100               	movlb	0	; () banked
   421  0000FC  6F65               	movwf	(main@yAccel+2)& (0+255),b
   422                           
   423                           ; BSR set to: 0
   424                           ;main.c: 69: float zAccel = 0;
   425  0000FE  0E00               	movlw	0
   426  000100  0100               	movlb	0	; () banked
   427  000102  6F66               	movwf	main@zAccel& (0+255),b
   428  000104  0E00               	movlw	0
   429  000106  0100               	movlb	0	; () banked
   430  000108  6F67               	movwf	(main@zAccel+1)& (0+255),b
   431  00010A  0E00               	movlw	0
   432  00010C  0100               	movlb	0	; () banked
   433  00010E  6F68               	movwf	(main@zAccel+2)& (0+255),b
   434                           
   435                           ; BSR set to: 0
   436                           ;main.c: 72: int16_t xGyroRaw = 0;
   437  000110  0E00               	movlw	0
   438  000112  0100               	movlb	0	; () banked
   439  000114  6F86               	movwf	(main@xGyroRaw+1)& (0+255),b
   440  000116  0E00               	movlw	0
   441  000118  6F85               	movwf	main@xGyroRaw& (0+255),b
   442                           
   443                           ; BSR set to: 0
   444                           ;main.c: 73: int16_t yGyroRaw = 0;
   445  00011A  0E00               	movlw	0
   446  00011C  0100               	movlb	0	; () banked
   447  00011E  6F88               	movwf	(main@yGyroRaw+1)& (0+255),b
   448  000120  0E00               	movlw	0
   449  000122  6F87               	movwf	main@yGyroRaw& (0+255),b
   450                           
   451                           ; BSR set to: 0
   452                           ;main.c: 74: int16_t zGyroRaw = 0;
   453  000124  0E00               	movlw	0
   454  000126  0100               	movlb	0	; () banked
   455  000128  6F8A               	movwf	(main@zGyroRaw+1)& (0+255),b
   456  00012A  0E00               	movlw	0
   457  00012C  6F89               	movwf	main@zGyroRaw& (0+255),b
   458                           
   459                           ; BSR set to: 0
   460                           ;main.c: 76: double loopPeriod = 0.01;
   461  00012E  0ED7               	movlw	215
   462  000130  0100               	movlb	0	; () banked
   463  000132  6F8E               	movwf	main@loopPeriod& (0+255),b
   464  000134  0E23               	movlw	35
   465  000136  0100               	movlb	0	; () banked
   466  000138  6F8F               	movwf	(main@loopPeriod+1)& (0+255),b
   467  00013A  0E3C               	movlw	60
   468  00013C  0100               	movlb	0	; () banked
   469  00013E  6F90               	movwf	(main@loopPeriod+2)& (0+255),b
   470                           
   471                           ; BSR set to: 0
   472                           ;main.c: 79: float xGyro = 0;
   473  000140  0E00               	movlw	0
   474  000142  0100               	movlb	0	; () banked
   475  000144  6F69               	movwf	main@xGyro& (0+255),b
   476  000146  0E00               	movlw	0
   477  000148  0100               	movlb	0	; () banked
   478  00014A  6F6A               	movwf	(main@xGyro+1)& (0+255),b
   479  00014C  0E00               	movlw	0
   480  00014E  0100               	movlb	0	; () banked
   481  000150  6F6B               	movwf	(main@xGyro+2)& (0+255),b
   482                           
   483                           ; BSR set to: 0
   484                           ;main.c: 80: float yGyro = 0;
   485  000152  0E00               	movlw	0
   486  000154  0100               	movlb	0	; () banked
   487  000156  6F6C               	movwf	main@yGyro& (0+255),b
   488  000158  0E00               	movlw	0
   489  00015A  0100               	movlb	0	; () banked
   490  00015C  6F6D               	movwf	(main@yGyro+1)& (0+255),b
   491  00015E  0E00               	movlw	0
   492  000160  0100               	movlb	0	; () banked
   493  000162  6F6E               	movwf	(main@yGyro+2)& (0+255),b
   494                           
   495                           ; BSR set to: 0
   496                           ;main.c: 81: float zGyro = 0;
   497  000164  0E00               	movlw	0
   498  000166  0100               	movlb	0	; () banked
   499  000168  6F6F               	movwf	main@zGyro& (0+255),b
   500  00016A  0E00               	movlw	0
   501  00016C  0100               	movlb	0	; () banked
   502  00016E  6F70               	movwf	(main@zGyro+1)& (0+255),b
   503  000170  0E00               	movlw	0
   504  000172  0100               	movlb	0	; () banked
   505  000174  6F71               	movwf	(main@zGyro+2)& (0+255),b
   506                           
   507                           ; BSR set to: 0
   508                           ;main.c: 83: unsigned int tempOne = 0;
   509  000176  0E00               	movlw	0
   510  000178  0100               	movlb	0	; () banked
   511  00017A  6F73               	movwf	(main@tempOne+1)& (0+255),b
   512  00017C  0E00               	movlw	0
   513  00017E  6F72               	movwf	main@tempOne& (0+255),b
   514                           
   515                           ; BSR set to: 0
   516                           ;main.c: 84: unsigned int tempTwo = 0;
   517  000180  0E00               	movlw	0
   518  000182  0100               	movlb	0	; () banked
   519  000184  6F75               	movwf	(main@tempTwo+1)& (0+255),b
   520  000186  0E00               	movlw	0
   521  000188  6F74               	movwf	main@tempTwo& (0+255),b
   522  00018A                     l1264:
   523                           
   524                           ;main.c: 87: {
   525                           ;main.c: 91: selectAN0();
   526  00018A  ECCD  F003         	call	_selectAN0	;wreg free
   527                           
   528                           ;main.c: 92: tempOne = readADC();
   529  00018E  ECA3  F003         	call	_readADC	;wreg free
   530  000192  C020  F072         	movff	?_readADC,main@tempOne
   531  000196  C021  F073         	movff	?_readADC+1,main@tempOne+1
   532                           
   533                           ;main.c: 96: selectAN1();
   534  00019A  ECC8  F003         	call	_selectAN1	;wreg free
   535                           
   536                           ;main.c: 97: tempTwo = readADC();
   537  00019E  ECA3  F003         	call	_readADC	;wreg free
   538  0001A2  C020  F074         	movff	?_readADC,main@tempTwo
   539  0001A6  C021  F075         	movff	?_readADC+1,main@tempTwo+1
   540                           
   541                           ;main.c: 102: LATCbits.LATC6 = 1;
   542  0001AA  8C8B               	bsf	3979,6,c	;volatile
   543                           
   544                           ;main.c: 103: LATCbits.LATC7 = 0;
   545  0001AC  9E8B               	bcf	3979,7,c	;volatile
   546                           
   547                           ;main.c: 106: spi_write(checkRegReady);
   548  0001AE  0100               	movlb	0	; () banked
   549  0001B0  518B               	movf	main@checkRegReady& (0+255),w,b
   550  0001B2  ECB7  F003         	call	_spi_write
   551                           
   552                           ;main.c: 107: spi_write(0x00);
   553  0001B6  0E00               	movlw	0
   554  0001B8  ECB7  F003         	call	_spi_write
   555                           
   556                           ;main.c: 108: char accelStat = spi_read();
   557  0001BC  ECD2  F003         	call	_spi_read	;wreg free
   558  0001C0  0100               	movlb	0	; () banked
   559  0001C2  6F8C               	movwf	main@accelStat& (0+255),b
   560                           
   561                           ; BSR set to: 0
   562                           ;main.c: 109: accelStat = (accelStat & 0x08) >> 3;
   563  0001C4  0100               	movlb	0	; () banked
   564  0001C6  398C               	swapf	main@accelStat& (0+255),w,b
   565  0001C8  46E8               	rlncf	wreg,f,c
   566  0001CA  0B1F               	andlw	31
   567  0001CC  0B01               	andlw	1
   568  0001CE  0100               	movlb	0	; () banked
   569  0001D0  6F8C               	movwf	main@accelStat& (0+255),b
   570                           
   571                           ; BSR set to: 0
   572                           ;main.c: 111: if(accelStat)
   573  0001D2  0100               	movlb	0	; () banked
   574  0001D4  518C               	movf	main@accelStat& (0+255),w,b
   575  0001D6  0100               	movlb	0	; () banked
   576  0001D8  B4D8               	btfsc	status,2,c
   577  0001DA  D012               	goto	l1286
   578                           
   579                           ; BSR set to: 0
   580                           ;main.c: 112: {
   581                           ;main.c: 116: xAccelRaw = readX();
   582  0001DC  EC65  F003         	call	_readX	;wreg free
   583  0001E0  C021  F07F         	movff	?_readX,main@xAccelRaw
   584  0001E4  C022  F080         	movff	?_readX+1,main@xAccelRaw+1
   585                           
   586                           ;main.c: 118: yAccelRaw = readY();
   587  0001E8  EC4B  F003         	call	_readY	;wreg free
   588  0001EC  C021  F081         	movff	?_readY,main@yAccelRaw
   589  0001F0  C022  F082         	movff	?_readY+1,main@yAccelRaw+1
   590                           
   591                           ;main.c: 120: zAccelRaw = readZ();
   592  0001F4  EC31  F003         	call	_readZ	;wreg free
   593  0001F8  C021  F083         	movff	?_readZ,main@zAccelRaw
   594  0001FC  C022  F084         	movff	?_readZ+1,main@zAccelRaw+1
   595  000200                     l1286:
   596                           
   597                           ;main.c: 121: }
   598                           ;main.c: 122: LATCbits.LATC6 = 1;
   599  000200  8C8B               	bsf	3979,6,c	;volatile
   600                           
   601                           ;main.c: 123: LATCbits.LATC7 = 1;
   602  000202  8E8B               	bsf	3979,7,c	;volatile
   603                           
   604                           ;main.c: 126: xAccel = xAccelRaw * 0.000122;
   605  000204  C07F  F028         	movff	main@xAccelRaw,___awtoft@c
   606  000208  C080  F029         	movff	main@xAccelRaw+1,___awtoft@c+1
   607  00020C  EC15  F003         	call	___awtoft	;wreg free
   608  000210  C028  F02C         	movff	?___awtoft,___ftmul@f1
   609  000214  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   610  000218  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   611  00021C  0EDA               	movlw	218
   612  00021E  6E2F               	movwf	___ftmul@f2,c
   613  000220  0EFF               	movlw	255
   614  000222  6E30               	movwf	___ftmul@f2+1,c
   615  000224  0E38               	movlw	56
   616  000226  6E31               	movwf	___ftmul@f2+2,c
   617  000228  EC0E  F002         	call	___ftmul	;wreg free
   618  00022C  C02C  F060         	movff	?___ftmul,main@xAccel
   619  000230  C02D  F061         	movff	?___ftmul+1,main@xAccel+1
   620  000234  C02E  F062         	movff	?___ftmul+2,main@xAccel+2
   621                           
   622                           ;main.c: 127: yAccel = yAccelRaw * 0.000122;
   623  000238  C081  F028         	movff	main@yAccelRaw,___awtoft@c
   624  00023C  C082  F029         	movff	main@yAccelRaw+1,___awtoft@c+1
   625  000240  EC15  F003         	call	___awtoft	;wreg free
   626  000244  C028  F02C         	movff	?___awtoft,___ftmul@f1
   627  000248  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   628  00024C  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   629  000250  0EDA               	movlw	218
   630  000252  6E2F               	movwf	___ftmul@f2,c
   631  000254  0EFF               	movlw	255
   632  000256  6E30               	movwf	___ftmul@f2+1,c
   633  000258  0E38               	movlw	56
   634  00025A  6E31               	movwf	___ftmul@f2+2,c
   635  00025C  EC0E  F002         	call	___ftmul	;wreg free
   636  000260  C02C  F063         	movff	?___ftmul,main@yAccel
   637  000264  C02D  F064         	movff	?___ftmul+1,main@yAccel+1
   638  000268  C02E  F065         	movff	?___ftmul+2,main@yAccel+2
   639                           
   640                           ;main.c: 128: zAccel = zAccelRaw * 0.000122;
   641  00026C  C083  F028         	movff	main@zAccelRaw,___awtoft@c
   642  000270  C084  F029         	movff	main@zAccelRaw+1,___awtoft@c+1
   643  000274  EC15  F003         	call	___awtoft	;wreg free
   644  000278  C028  F02C         	movff	?___awtoft,___ftmul@f1
   645  00027C  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   646  000280  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   647  000284  0EDA               	movlw	218
   648  000286  6E2F               	movwf	___ftmul@f2,c
   649  000288  0EFF               	movlw	255
   650  00028A  6E30               	movwf	___ftmul@f2+1,c
   651  00028C  0E38               	movlw	56
   652  00028E  6E31               	movwf	___ftmul@f2+2,c
   653  000290  EC0E  F002         	call	___ftmul	;wreg free
   654  000294  C02C  F066         	movff	?___ftmul,main@zAccel
   655  000298  C02D  F067         	movff	?___ftmul+1,main@zAccel+1
   656  00029C  C02E  F068         	movff	?___ftmul+2,main@zAccel+2
   657                           
   658                           ;main.c: 134: LATCbits.LATC6 = 0;
   659  0002A0  9C8B               	bcf	3979,6,c	;volatile
   660                           
   661                           ;main.c: 135: LATCbits.LATC7 = 1;
   662  0002A2  8E8B               	bsf	3979,7,c	;volatile
   663                           
   664                           ;main.c: 138: spi_write(checkRegReady);
   665  0002A4  0100               	movlb	0	; () banked
   666  0002A6  518B               	movf	main@checkRegReady& (0+255),w,b
   667  0002A8  ECB7  F003         	call	_spi_write
   668                           
   669                           ;main.c: 139: spi_write(0x00);
   670  0002AC  0E00               	movlw	0
   671  0002AE  ECB7  F003         	call	_spi_write
   672                           
   673                           ;main.c: 140: char gyroStat = spi_read();
   674  0002B2  ECD2  F003         	call	_spi_read	;wreg free
   675  0002B6  0100               	movlb	0	; () banked
   676  0002B8  6F8D               	movwf	main@gyroStat& (0+255),b
   677                           
   678                           ; BSR set to: 0
   679                           ;main.c: 141: gyroStat = (gyroStat & 0x08) >> 3;
   680  0002BA  0100               	movlb	0	; () banked
   681  0002BC  398D               	swapf	main@gyroStat& (0+255),w,b
   682  0002BE  46E8               	rlncf	wreg,f,c
   683  0002C0  0B1F               	andlw	31
   684  0002C2  0B01               	andlw	1
   685  0002C4  0100               	movlb	0	; () banked
   686  0002C6  6F8D               	movwf	main@gyroStat& (0+255),b
   687                           
   688                           ; BSR set to: 0
   689                           ;main.c: 143: if(gyroStat)
   690  0002C8  0100               	movlb	0	; () banked
   691  0002CA  518D               	movf	main@gyroStat& (0+255),w,b
   692  0002CC  0100               	movlb	0	; () banked
   693  0002CE  B4D8               	btfsc	status,2,c
   694  0002D0  D012               	goto	l1306
   695                           
   696                           ; BSR set to: 0
   697                           ;main.c: 144: {
   698                           ;main.c: 148: xGyroRaw = readX();
   699  0002D2  EC65  F003         	call	_readX	;wreg free
   700  0002D6  C021  F085         	movff	?_readX,main@xGyroRaw
   701  0002DA  C022  F086         	movff	?_readX+1,main@xGyroRaw+1
   702                           
   703                           ;main.c: 150: yGyroRaw = readY();
   704  0002DE  EC4B  F003         	call	_readY	;wreg free
   705  0002E2  C021  F087         	movff	?_readY,main@yGyroRaw
   706  0002E6  C022  F088         	movff	?_readY+1,main@yGyroRaw+1
   707                           
   708                           ;main.c: 152: zGyroRaw = readZ();
   709  0002EA  EC31  F003         	call	_readZ	;wreg free
   710  0002EE  C021  F089         	movff	?_readZ,main@zGyroRaw
   711  0002F2  C022  F08A         	movff	?_readZ+1,main@zGyroRaw+1
   712  0002F6                     l1306:
   713                           
   714                           ;main.c: 153: }
   715                           ;main.c: 154: LATCbits.LATC6 = 1;
   716  0002F6  8C8B               	bsf	3979,6,c	;volatile
   717                           
   718                           ;main.c: 155: LATCbits.LATC7 = 1;
   719  0002F8  8E8B               	bsf	3979,7,c	;volatile
   720                           
   721                           ;main.c: 159: float xGyroRate = (float) xGyroRaw * 0.00875;
   722  0002FA  C085  F028         	movff	main@xGyroRaw,___awtoft@c
   723  0002FE  C086  F029         	movff	main@xGyroRaw+1,___awtoft@c+1
   724  000302  EC15  F003         	call	___awtoft	;wreg free
   725  000306  C028  F02C         	movff	?___awtoft,___ftmul@f1
   726  00030A  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   727  00030E  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   728  000312  0E5C               	movlw	92
   729  000314  6E2F               	movwf	___ftmul@f2,c
   730  000316  0E0F               	movlw	15
   731  000318  6E30               	movwf	___ftmul@f2+1,c
   732  00031A  0E3C               	movlw	60
   733  00031C  6E31               	movwf	___ftmul@f2+2,c
   734  00031E  EC0E  F002         	call	___ftmul	;wreg free
   735  000322  C02C  F076         	movff	?___ftmul,main@xGyroRate
   736  000326  C02D  F077         	movff	?___ftmul+1,main@xGyroRate+1
   737  00032A  C02E  F078         	movff	?___ftmul+2,main@xGyroRate+2
   738                           
   739                           ;main.c: 160: float yGyroRate = (float) yGyroRaw * 0.00875;
   740  00032E  C087  F028         	movff	main@yGyroRaw,___awtoft@c
   741  000332  C088  F029         	movff	main@yGyroRaw+1,___awtoft@c+1
   742  000336  EC15  F003         	call	___awtoft	;wreg free
   743  00033A  C028  F02C         	movff	?___awtoft,___ftmul@f1
   744  00033E  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   745  000342  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   746  000346  0E5C               	movlw	92
   747  000348  6E2F               	movwf	___ftmul@f2,c
   748  00034A  0E0F               	movlw	15
   749  00034C  6E30               	movwf	___ftmul@f2+1,c
   750  00034E  0E3C               	movlw	60
   751  000350  6E31               	movwf	___ftmul@f2+2,c
   752  000352  EC0E  F002         	call	___ftmul	;wreg free
   753  000356  C02C  F079         	movff	?___ftmul,main@yGyroRate
   754  00035A  C02D  F07A         	movff	?___ftmul+1,main@yGyroRate+1
   755  00035E  C02E  F07B         	movff	?___ftmul+2,main@yGyroRate+2
   756                           
   757                           ;main.c: 161: float zGyroRate = (float) zGyroRaw * 0.00875;
   758  000362  C089  F028         	movff	main@zGyroRaw,___awtoft@c
   759  000366  C08A  F029         	movff	main@zGyroRaw+1,___awtoft@c+1
   760  00036A  EC15  F003         	call	___awtoft	;wreg free
   761  00036E  C028  F02C         	movff	?___awtoft,___ftmul@f1
   762  000372  C029  F02D         	movff	?___awtoft+1,___ftmul@f1+1
   763  000376  C02A  F02E         	movff	?___awtoft+2,___ftmul@f1+2
   764  00037A  0E5C               	movlw	92
   765  00037C  6E2F               	movwf	___ftmul@f2,c
   766  00037E  0E0F               	movlw	15
   767  000380  6E30               	movwf	___ftmul@f2+1,c
   768  000382  0E3C               	movlw	60
   769  000384  6E31               	movwf	___ftmul@f2+2,c
   770  000386  EC0E  F002         	call	___ftmul	;wreg free
   771  00038A  C02C  F07C         	movff	?___ftmul,main@zGyroRate
   772  00038E  C02D  F07D         	movff	?___ftmul+1,main@zGyroRate+1
   773  000392  C02E  F07E         	movff	?___ftmul+2,main@zGyroRate+2
   774                           
   775                           ;main.c: 163: delay_milli(10);
   776  000396  0E00               	movlw	0
   777  000398  6E21               	movwf	delay_milli@time+1,c
   778  00039A  0E0A               	movlw	10
   779  00039C  6E20               	movwf	delay_milli@time,c
   780  00039E  EC7F  F003         	call	_delay_milli	;wreg free
   781                           
   782                           ;main.c: 165: xGyro = xGyroRate*loopPeriod;
   783  0003A2  C076  F02C         	movff	main@xGyroRate,___ftmul@f1
   784  0003A6  C077  F02D         	movff	main@xGyroRate+1,___ftmul@f1+1
   785  0003AA  C078  F02E         	movff	main@xGyroRate+2,___ftmul@f1+2
   786  0003AE  C08E  F02F         	movff	main@loopPeriod,___ftmul@f2
   787  0003B2  C08F  F030         	movff	main@loopPeriod+1,___ftmul@f2+1
   788  0003B6  C090  F031         	movff	main@loopPeriod+2,___ftmul@f2+2
   789  0003BA  EC0E  F002         	call	___ftmul	;wreg free
   790  0003BE  C02C  F069         	movff	?___ftmul,main@xGyro
   791  0003C2  C02D  F06A         	movff	?___ftmul+1,main@xGyro+1
   792  0003C6  C02E  F06B         	movff	?___ftmul+2,main@xGyro+2
   793                           
   794                           ;main.c: 166: yGyro = yGyroRate*loopPeriod;
   795  0003CA  C079  F02C         	movff	main@yGyroRate,___ftmul@f1
   796  0003CE  C07A  F02D         	movff	main@yGyroRate+1,___ftmul@f1+1
   797  0003D2  C07B  F02E         	movff	main@yGyroRate+2,___ftmul@f1+2
   798  0003D6  C08E  F02F         	movff	main@loopPeriod,___ftmul@f2
   799  0003DA  C08F  F030         	movff	main@loopPeriod+1,___ftmul@f2+1
   800  0003DE  C090  F031         	movff	main@loopPeriod+2,___ftmul@f2+2
   801  0003E2  EC0E  F002         	call	___ftmul	;wreg free
   802  0003E6  C02C  F06C         	movff	?___ftmul,main@yGyro
   803  0003EA  C02D  F06D         	movff	?___ftmul+1,main@yGyro+1
   804  0003EE  C02E  F06E         	movff	?___ftmul+2,main@yGyro+2
   805                           
   806                           ;main.c: 167: zGyro = zGyroRate*loopPeriod;
   807  0003F2  C07C  F02C         	movff	main@zGyroRate,___ftmul@f1
   808  0003F6  C07D  F02D         	movff	main@zGyroRate+1,___ftmul@f1+1
   809  0003FA  C07E  F02E         	movff	main@zGyroRate+2,___ftmul@f1+2
   810  0003FE  C08E  F02F         	movff	main@loopPeriod,___ftmul@f2
   811  000402  C08F  F030         	movff	main@loopPeriod+1,___ftmul@f2+1
   812  000406  C090  F031         	movff	main@loopPeriod+2,___ftmul@f2+2
   813  00040A  EC0E  F002         	call	___ftmul	;wreg free
   814  00040E  C02C  F06F         	movff	?___ftmul,main@zGyro
   815  000412  C02D  F070         	movff	?___ftmul+1,main@zGyro+1
   816  000416  C02E  F071         	movff	?___ftmul+2,main@zGyro+2
   817  00041A  D6B7               	goto	l1264
   818  00041C                     __end_of_main:
   819                           	opt stack 0
   820                           wreg	equ	0xFE8
   821                           status	equ	0xFD8
   822                           
   823 ;; *************** function _selectAN1 *****************
   824 ;; Defined at:
   825 ;;		line 32 in file "ADC_Config.c"
   826 ;; Parameters:    Size  Location     Type
   827 ;;		None
   828 ;; Auto vars:     Size  Location     Type
   829 ;;		None
   830 ;; Return value:  Size  Location     Type
   831 ;;                  1    wreg      void 
   832 ;; Registers used:
   833 ;;		wreg, status,2
   834 ;; Tracked objects:
   835 ;;		On entry : 0/0
   836 ;;		On exit  : 0/0
   837 ;;		Unchanged: 0/0
   838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   843 ;;Total ram usage:        0 bytes
   844 ;; Hardware stack levels used:    1
   845 ;; Hardware stack levels required when called:    2
   846 ;; This function calls:
   847 ;;		Nothing
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text1
   854  000790                     __ptext1:
   855                           	opt stack 0
   856  000790                     _selectAN1:
   857                           	opt stack 28
   858                           
   859                           ;ADC_Config.c: 34: ADCON0bits.CHS = 0x01;
   860                           
   861                           ;incstack = 0
   862  000790  50C2               	movf	4034,w,c	;volatile
   863  000792  0BC3               	andlw	-61
   864  000794  0904               	iorlw	4
   865  000796  6EC2               	movwf	4034,c	;volatile
   866  000798  0012               	return		;funcret
   867  00079A                     __end_of_selectAN1:
   868                           	opt stack 0
   869                           wreg	equ	0xFE8
   870                           status	equ	0xFD8
   871                           
   872 ;; *************** function _selectAN0 *****************
   873 ;; Defined at:
   874 ;;		line 26 in file "ADC_Config.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;		None
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		None
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   892 ;;Total ram usage:        0 bytes
   893 ;; Hardware stack levels used:    1
   894 ;; Hardware stack levels required when called:    2
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_main
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text2
   903  00079A                     __ptext2:
   904                           	opt stack 0
   905  00079A                     _selectAN0:
   906                           	opt stack 28
   907                           
   908                           ;ADC_Config.c: 28: ADCON0bits.CHS = 0x00;
   909                           
   910                           ;incstack = 0
   911  00079A  94C2               	bcf	4034,2,c	;volatile
   912  00079C  96C2               	bcf	4034,3,c	;volatile
   913  00079E  98C2               	bcf	4034,4,c	;volatile
   914  0007A0  9AC2               	bcf	4034,5,c	;volatile
   915  0007A2  0012               	return		;funcret
   916  0007A4                     __end_of_selectAN0:
   917                           	opt stack 0
   918                           wreg	equ	0xFE8
   919                           status	equ	0xFD8
   920                           
   921 ;; *************** function _readZ *****************
   922 ;; Defined at:
   923 ;;		line 200 in file "system.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  z               2   35[COMRAM] int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2   32[COMRAM] int 
   930 ;; Registers used:
   931 ;;		wreg, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   937 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   940 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   941 ;;Total ram usage:        5 bytes
   942 ;; Hardware stack levels used:    1
   943 ;; Hardware stack levels required when called:    3
   944 ;; This function calls:
   945 ;;		_spi_read
   946 ;;		_spi_write
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text3
   953  000662                     __ptext3:
   954                           	opt stack 0
   955  000662                     _readZ:
   956                           	opt stack 27
   957                           
   958                           ;system.c: 202: spi_write(0xAC);
   959                           
   960                           ;incstack = 0
   961  000662  0EAC               	movlw	172
   962  000664  ECB7  F003         	call	_spi_write
   963                           
   964                           ;system.c: 203: spi_write(0x00);
   965  000668  0E00               	movlw	0
   966  00066A  ECB7  F003         	call	_spi_write
   967                           
   968                           ;system.c: 204: int z = spi_read();
   969  00066E  ECD2  F003         	call	_spi_read	;wreg free
   970  000672  6E23               	movwf	??_readZ& (0+255),c
   971  000674  5023               	movf	??_readZ,w,c
   972  000676  6E24               	movwf	readZ@z,c
   973  000678  6A25               	clrf	readZ@z+1,c
   974                           
   975                           ;system.c: 206: spi_write(0xAD);
   976  00067A  0EAD               	movlw	173
   977  00067C  ECB7  F003         	call	_spi_write
   978                           
   979                           ;system.c: 207: spi_write(0x00);
   980  000680  0E00               	movlw	0
   981  000682  ECB7  F003         	call	_spi_write
   982                           
   983                           ;system.c: 208: z += spi_read() << 8;
   984  000686  ECD2  F003         	call	_spi_read	;wreg free
   985  00068A  2625               	addwf	readZ@z+1,f,c
   986                           
   987                           ;system.c: 209: return z;
   988  00068C  C024  F021         	movff	readZ@z,?_readZ
   989  000690  C025  F022         	movff	readZ@z+1,?_readZ+1
   990  000694  0012               	return	
   991  000696                     __end_of_readZ:
   992                           	opt stack 0
   993                           wreg	equ	0xFE8
   994                           status	equ	0xFD8
   995                           
   996 ;; *************** function _readY *****************
   997 ;; Defined at:
   998 ;;		line 188 in file "system.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;		None
  1001 ;; Auto vars:     Size  Location     Type
  1002 ;;  y               2   35[COMRAM] int 
  1003 ;; Return value:  Size  Location     Type
  1004 ;;                  2   32[COMRAM] int 
  1005 ;; Registers used:
  1006 ;;		wreg, status,2, status,0, cstack
  1007 ;; Tracked objects:
  1008 ;;		On entry : 0/0
  1009 ;;		On exit  : 0/0
  1010 ;;		Unchanged: 0/0
  1011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1013 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1014 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1016 ;;Total ram usage:        5 bytes
  1017 ;; Hardware stack levels used:    1
  1018 ;; Hardware stack levels required when called:    3
  1019 ;; This function calls:
  1020 ;;		_spi_read
  1021 ;;		_spi_write
  1022 ;; This function is called by:
  1023 ;;		_main
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           	psect	text4
  1028  000696                     __ptext4:
  1029                           	opt stack 0
  1030  000696                     _readY:
  1031                           	opt stack 27
  1032                           
  1033                           ;system.c: 190: spi_write(0xAA);
  1034                           
  1035                           ;incstack = 0
  1036  000696  0EAA               	movlw	170
  1037  000698  ECB7  F003         	call	_spi_write
  1038                           
  1039                           ;system.c: 191: spi_write(0x00);
  1040  00069C  0E00               	movlw	0
  1041  00069E  ECB7  F003         	call	_spi_write
  1042                           
  1043                           ;system.c: 192: int y = spi_read();
  1044  0006A2  ECD2  F003         	call	_spi_read	;wreg free
  1045  0006A6  6E23               	movwf	??_readY& (0+255),c
  1046  0006A8  5023               	movf	??_readY,w,c
  1047  0006AA  6E24               	movwf	readY@y,c
  1048  0006AC  6A25               	clrf	readY@y+1,c
  1049                           
  1050                           ;system.c: 194: spi_write(0xAB);
  1051  0006AE  0EAB               	movlw	171
  1052  0006B0  ECB7  F003         	call	_spi_write
  1053                           
  1054                           ;system.c: 195: spi_write(0x00);
  1055  0006B4  0E00               	movlw	0
  1056  0006B6  ECB7  F003         	call	_spi_write
  1057                           
  1058                           ;system.c: 196: y += spi_read() << 8;
  1059  0006BA  ECD2  F003         	call	_spi_read	;wreg free
  1060  0006BE  2625               	addwf	readY@y+1,f,c
  1061                           
  1062                           ;system.c: 197: return y;
  1063  0006C0  C024  F021         	movff	readY@y,?_readY
  1064  0006C4  C025  F022         	movff	readY@y+1,?_readY+1
  1065  0006C8  0012               	return	
  1066  0006CA                     __end_of_readY:
  1067                           	opt stack 0
  1068                           wreg	equ	0xFE8
  1069                           status	equ	0xFD8
  1070                           
  1071 ;; *************** function _readX *****************
  1072 ;; Defined at:
  1073 ;;		line 175 in file "system.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  x               2   35[COMRAM] int 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   32[COMRAM] int 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1087 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1088 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1089 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1090 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1091 ;;Total ram usage:        5 bytes
  1092 ;; Hardware stack levels used:    1
  1093 ;; Hardware stack levels required when called:    3
  1094 ;; This function calls:
  1095 ;;		_spi_read
  1096 ;;		_spi_write
  1097 ;; This function is called by:
  1098 ;;		_main
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102                           	psect	text5
  1103  0006CA                     __ptext5:
  1104                           	opt stack 0
  1105  0006CA                     _readX:
  1106                           	opt stack 27
  1107                           
  1108                           ;system.c: 178: spi_write(0xA8);
  1109                           
  1110                           ;incstack = 0
  1111  0006CA  0EA8               	movlw	168
  1112  0006CC  ECB7  F003         	call	_spi_write
  1113                           
  1114                           ;system.c: 179: spi_write(0x00);
  1115  0006D0  0E00               	movlw	0
  1116  0006D2  ECB7  F003         	call	_spi_write
  1117                           
  1118                           ;system.c: 180: int x = spi_read();
  1119  0006D6  ECD2  F003         	call	_spi_read	;wreg free
  1120  0006DA  6E23               	movwf	??_readX& (0+255),c
  1121  0006DC  5023               	movf	??_readX,w,c
  1122  0006DE  6E24               	movwf	readX@x,c
  1123  0006E0  6A25               	clrf	readX@x+1,c
  1124                           
  1125                           ;system.c: 182: spi_write(0xA9);
  1126  0006E2  0EA9               	movlw	169
  1127  0006E4  ECB7  F003         	call	_spi_write
  1128                           
  1129                           ;system.c: 183: spi_write(0x00);
  1130  0006E8  0E00               	movlw	0
  1131  0006EA  ECB7  F003         	call	_spi_write
  1132                           
  1133                           ;system.c: 184: x += spi_read() << 8;
  1134  0006EE  ECD2  F003         	call	_spi_read	;wreg free
  1135  0006F2  2625               	addwf	readX@x+1,f,c
  1136                           
  1137                           ;system.c: 185: return x;
  1138  0006F4  C024  F021         	movff	readX@x,?_readX
  1139  0006F8  C025  F022         	movff	readX@x+1,?_readX+1
  1140  0006FC  0012               	return	
  1141  0006FE                     __end_of_readX:
  1142                           	opt stack 0
  1143                           wreg	equ	0xFE8
  1144                           status	equ	0xFD8
  1145                           
  1146 ;; *************** function _spi_read *****************
  1147 ;; Defined at:
  1148 ;;		line 133 in file "system.c"
  1149 ;; Parameters:    Size  Location     Type
  1150 ;;		None
  1151 ;; Auto vars:     Size  Location     Type
  1152 ;;		None
  1153 ;; Return value:  Size  Location     Type
  1154 ;;                  1    wreg      unsigned char 
  1155 ;; Registers used:
  1156 ;;		wreg, status,2
  1157 ;; Tracked objects:
  1158 ;;		On entry : 0/0
  1159 ;;		On exit  : 0/0
  1160 ;;		Unchanged: 0/0
  1161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1166 ;;Total ram usage:        0 bytes
  1167 ;; Hardware stack levels used:    1
  1168 ;; Hardware stack levels required when called:    2
  1169 ;; This function calls:
  1170 ;;		Nothing
  1171 ;; This function is called by:
  1172 ;;		_main
  1173 ;;		_readX
  1174 ;;		_readY
  1175 ;;		_readZ
  1176 ;;		_spi_read_long
  1177 ;;		_oneReadCycle
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text6
  1182  0007A4                     __ptext6:
  1183                           	opt stack 0
  1184  0007A4                     _spi_read:
  1185                           	opt stack 28
  1186  0007A4                     l88:
  1187  0007A4  A0C7               	btfss	4039,0,c	;volatile
  1188  0007A6  D7FE               	goto	l88
  1189                           
  1190                           ;system.c: 136: return SSPBUF;
  1191  0007A8  50C9               	movf	4041,w,c	;volatile
  1192  0007AA  0012               	return	
  1193  0007AC                     __end_of_spi_read:
  1194                           	opt stack 0
  1195                           wreg	equ	0xFE8
  1196                           status	equ	0xFD8
  1197                           
  1198 ;; *************** function _readADC *****************
  1199 ;; Defined at:
  1200 ;;		line 73 in file "ADC_Config.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;  digitalVal      2   33[COMRAM] unsigned int 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  2   31[COMRAM] unsigned int 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1214 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1218 ;;Total ram usage:        4 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    2
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text7
  1229  000746                     __ptext7:
  1230                           	opt stack 0
  1231  000746                     _readADC:
  1232                           	opt stack 28
  1233                           
  1234                           ;ADC_Config.c: 75: unsigned int digitalVal;
  1235                           ;ADC_Config.c: 77: ADCON0bits.GO_NOT_DONE = 1;
  1236                           
  1237                           ;incstack = 0
  1238  000746  82C2               	bsf	4034,1,c	;volatile
  1239  000748                     l157:
  1240  000748  B2C2               	btfsc	4034,1,c	;volatile
  1241  00074A  D7FE               	goto	l157
  1242                           
  1243                           ;ADC_Config.c: 83: digitalVal = ADRESL;
  1244  00074C  CFC3 F022          	movff	4035,readADC@digitalVal	;volatile
  1245  000750  6A23               	clrf	readADC@digitalVal+1,c
  1246                           
  1247                           ;ADC_Config.c: 84: digitalVal += ADRESH << 8;
  1248  000752  50C4               	movf	4036,w,c	;volatile
  1249  000754  2623               	addwf	readADC@digitalVal+1,f,c
  1250                           
  1251                           ;ADC_Config.c: 85: return digitalVal;
  1252  000756  C022  F020         	movff	readADC@digitalVal,?_readADC
  1253  00075A  C023  F021         	movff	readADC@digitalVal+1,?_readADC+1
  1254  00075E  0012               	return	
  1255  000760                     __end_of_readADC:
  1256                           	opt stack 0
  1257                           wreg	equ	0xFE8
  1258                           status	equ	0xFD8
  1259                           
  1260 ;; *************** function _init_spi *****************
  1261 ;; Defined at:
  1262 ;;		line 104 in file "system.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		None
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    2
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_main
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text8
  1291  000728                     __ptext8:
  1292                           	opt stack 0
  1293  000728                     _init_spi:
  1294                           	opt stack 28
  1295                           
  1296                           ;system.c: 106: TRISCbits.RC4 = 1;
  1297                           
  1298                           ;incstack = 0
  1299  000728  8894               	bsf	3988,4,c	;volatile
  1300                           
  1301                           ;system.c: 107: TRISCbits.RC5 = 0;
  1302  00072A  9A94               	bcf	3988,5,c	;volatile
  1303                           
  1304                           ;system.c: 108: TRISCbits.RC3 = 0;
  1305  00072C  9694               	bcf	3988,3,c	;volatile
  1306                           
  1307                           ;system.c: 110: TRISCbits.TRISC6 = 0;
  1308  00072E  9C94               	bcf	3988,6,c	;volatile
  1309                           
  1310                           ;system.c: 111: TRISCbits.TRISC7 = 0;
  1311  000730  9E94               	bcf	3988,7,c	;volatile
  1312                           
  1313                           ;system.c: 113: SSPCON1bits.SSPEN = 0;
  1314  000732  9AC6               	bcf	4038,5,c	;volatile
  1315                           
  1316                           ;system.c: 115: SSPCON1bits.CKP = 0;
  1317  000734  98C6               	bcf	4038,4,c	;volatile
  1318                           
  1319                           ;system.c: 116: SSPSTATbits.CKE = 1;
  1320  000736  8CC7               	bsf	4039,6,c	;volatile
  1321                           
  1322                           ;system.c: 117: SSPSTATbits.SMP = 0;
  1323  000738  9EC7               	bcf	4039,7,c	;volatile
  1324                           
  1325                           ;system.c: 118: SSPCON1bits.SSPM0 = 0;
  1326  00073A  90C6               	bcf	4038,0,c	;volatile
  1327                           
  1328                           ;system.c: 119: SSPCON1bits.SSPM1 = 0;
  1329  00073C  92C6               	bcf	4038,1,c	;volatile
  1330                           
  1331                           ;system.c: 120: SSPCON1bits.SSPM2 = 0;
  1332  00073E  94C6               	bcf	4038,2,c	;volatile
  1333                           
  1334                           ;system.c: 121: SSPCON1bits.SSPM3 = 0;
  1335  000740  96C6               	bcf	4038,3,c	;volatile
  1336                           
  1337                           ;system.c: 123: SSPCON1bits.SSPEN = 1;
  1338  000742  8AC6               	bsf	4038,5,c	;volatile
  1339  000744  0012               	return		;funcret
  1340  000746                     __end_of_init_spi:
  1341                           	opt stack 0
  1342                           wreg	equ	0xFE8
  1343                           status	equ	0xFD8
  1344                           
  1345 ;; *************** function _init_AccelFS *****************
  1346 ;; Defined at:
  1347 ;;		line 212 in file "system.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;		None
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;		None
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1364 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1365 ;;Total ram usage:        0 bytes
  1366 ;; Hardware stack levels used:    1
  1367 ;; Hardware stack levels required when called:    3
  1368 ;; This function calls:
  1369 ;;		_spi_write
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text9
  1376  000760                     __ptext9:
  1377                           	opt stack 0
  1378  000760                     _init_AccelFS:
  1379                           	opt stack 27
  1380                           
  1381                           ;system.c: 215: spi_write(0x21);
  1382                           
  1383                           ;incstack = 0
  1384  000760  0E21               	movlw	33
  1385  000762  ECB7  F003         	call	_spi_write
  1386                           
  1387                           ;system.c: 216: spi_write(0x08);
  1388  000766  0E08               	movlw	8
  1389  000768  ECB7  F003         	call	_spi_write
  1390  00076C  0012               	return		;funcret
  1391  00076E                     __end_of_init_AccelFS:
  1392                           	opt stack 0
  1393                           wreg	equ	0xFE8
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _spi_write *****************
  1397 ;; Defined at:
  1398 ;;		line 140 in file "system.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  message         1    wreg     unsigned char 
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;  message         1   31[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1415 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    2
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_main
  1423 ;;		_readX
  1424 ;;		_readY
  1425 ;;		_readZ
  1426 ;;		_init_AccelFS
  1427 ;;		_oneReadCycle
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text10
  1432  00076E                     __ptext10:
  1433                           	opt stack 0
  1434  00076E                     _spi_write:
  1435                           	opt stack 28
  1436                           
  1437                           ;incstack = 0
  1438                           ;spi_write@message stored from wreg
  1439  00076E  6E20               	movwf	spi_write@message,c
  1440  000770                     l94:
  1441  000770  BEC6               	btfsc	4038,7,c	;volatile
  1442  000772  D7FE               	goto	l94
  1443                           
  1444                           ;system.c: 143: SSPBUF = message;
  1445  000774  C020  FFC9         	movff	spi_write@message,4041	;volatile
  1446  000778  0012               	return		;funcret
  1447  00077A                     __end_of_spi_write:
  1448                           	opt stack 0
  1449                           wreg	equ	0xFE8
  1450                           status	equ	0xFD8
  1451                           
  1452 ;; *************** function _delay_milli *****************
  1453 ;; Defined at:
  1454 ;;		line 169 in file "system.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  time            2   31[COMRAM] unsigned int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  i               2   34[COMRAM] int 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1469 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1471 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1472 ;;Total ram usage:        5 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    2
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;;		_oneReadCycle
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           	psect	text11
  1484  0006FE                     __ptext11:
  1485                           	opt stack 0
  1486  0006FE                     _delay_milli:
  1487                           	opt stack 28
  1488                           
  1489                           ;system.c: 171: for (int i = 0; i < time; i++)
  1490                           
  1491                           ;incstack = 0
  1492  0006FE  0E00               	movlw	0
  1493  000700  6E24               	movwf	delay_milli@i+1,c
  1494  000702  0E00               	movlw	0
  1495  000704  6E23               	movwf	delay_milli@i,c
  1496  000706  D009               	goto	l109
  1497  000708                     l1164:
  1498                           
  1499                           ;system.c: 172: _delay((unsigned long)((1)*(10000000/4000.0)));
  1500  000708  0E04               	movlw	4
  1501  00070A  6E22               	movwf	??_delay_milli& (0+255),c
  1502  00070C  0E3E               	movlw	62
  1503  00070E                     u527:
  1504  00070E  2EE8               	decfsz	wreg,f,c
  1505  000710  D7FE               	goto	u527
  1506  000712  2E22               	decfsz	??_delay_milli& (0+255),f,c
  1507  000714  D7FC               	goto	u527
  1508  000716  4A23               	infsnz	delay_milli@i,f,c
  1509  000718  2A24               	incf	delay_milli@i+1,f,c
  1510  00071A                     l109:
  1511  00071A  5020               	movf	delay_milli@time,w,c
  1512  00071C  5C23               	subwf	delay_milli@i,w,c
  1513  00071E  5021               	movf	delay_milli@time+1,w,c
  1514  000720  5824               	subwfb	delay_milli@i+1,w,c
  1515  000722  B0D8               	btfsc	status,0,c
  1516  000724  0012               	return	
  1517  000726  D7F0               	goto	l1164
  1518  000728                     __end_of_delay_milli:
  1519                           	opt stack 0
  1520                           wreg	equ	0xFE8
  1521                           status	equ	0xFD8
  1522                           
  1523 ;; *************** function ___ftmul *****************
  1524 ;; Defined at:
  1525 ;;		line 62 in file "/opt/microchip/xc8/v1.36/sources/common/ftmul.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  f1              3   43[COMRAM] float 
  1528 ;;  f2              3   46[COMRAM] float 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  f3_as_produc    3   53[COMRAM] unsigned um
  1531 ;;  sign            1   57[COMRAM] unsigned char 
  1532 ;;  cntr            1   56[COMRAM] unsigned char 
  1533 ;;  exp             1   52[COMRAM] unsigned char 
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  3   43[COMRAM] float 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1543 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1544 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1545 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1546 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1547 ;;Total ram usage:       15 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		___ftpack
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text12
  1558  00041C                     __ptext12:
  1559                           	opt stack 0
  1560  00041C                     ___ftmul:
  1561                           	opt stack 27
  1562                           
  1563                           ;incstack = 0
  1564  00041C  C02E  F032         	movff	___ftmul@f1+2,??___ftmul
  1565  000420  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1566  000422  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1567  000424  342D               	rlcf	___ftmul@f1+1,w,c
  1568  000426  3632               	rlcf	??___ftmul& (0+255),f,c
  1569  000428  E301               	bnc	u391
  1570  00042A  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1571  00042C                     u391:
  1572  00042C  5032               	movf	??___ftmul,w,c
  1573  00042E  6E35               	movwf	___ftmul@exp,c
  1574  000430  5035               	movf	___ftmul@exp,w,c
  1575  000432  A4D8               	btfss	status,2,c
  1576  000434  D007               	goto	l1174
  1577  000436  0E00               	movlw	0
  1578  000438  6E2C               	movwf	?___ftmul,c
  1579  00043A  0E00               	movlw	0
  1580  00043C  6E2D               	movwf	?___ftmul+1,c
  1581  00043E  0E00               	movlw	0
  1582  000440  6E2E               	movwf	?___ftmul+2,c
  1583  000442  0012               	return	
  1584  000444                     l1174:
  1585  000444  C031  F032         	movff	___ftmul@f2+2,??___ftmul
  1586  000448  6A33               	clrf	(??___ftmul+1)& (0+255),c
  1587  00044A  6A34               	clrf	(??___ftmul+2)& (0+255),c
  1588  00044C  3430               	rlcf	___ftmul@f2+1,w,c
  1589  00044E  3632               	rlcf	??___ftmul& (0+255),f,c
  1590  000450  E301               	bnc	u411
  1591  000452  8033               	bsf	(??___ftmul+1)& (0+255),0,c
  1592  000454                     u411:
  1593  000454  5032               	movf	??___ftmul,w,c
  1594  000456  6E3A               	movwf	___ftmul@sign,c
  1595  000458  503A               	movf	___ftmul@sign,w,c
  1596  00045A  A4D8               	btfss	status,2,c
  1597  00045C  D007               	goto	l1180
  1598  00045E  0E00               	movlw	0
  1599  000460  6E2C               	movwf	?___ftmul,c
  1600  000462  0E00               	movlw	0
  1601  000464  6E2D               	movwf	?___ftmul+1,c
  1602  000466  0E00               	movlw	0
  1603  000468  6E2E               	movwf	?___ftmul+2,c
  1604  00046A  0012               	return	
  1605  00046C                     l1180:
  1606  00046C  503A               	movf	___ftmul@sign,w,c
  1607  00046E  0F7B               	addlw	123
  1608  000470  2635               	addwf	___ftmul@exp,f,c
  1609  000472  C02E  F03A         	movff	___ftmul@f1+2,___ftmul@sign
  1610  000476  5031               	movf	___ftmul@f2+2,w,c
  1611  000478  1A3A               	xorwf	___ftmul@sign,f,c
  1612  00047A  0E80               	movlw	128
  1613  00047C  163A               	andwf	___ftmul@sign,f,c
  1614  00047E  8E2D               	bsf	___ftmul@f1+1,7,c
  1615  000480  8E30               	bsf	___ftmul@f2+1,7,c
  1616  000482  0EFF               	movlw	255
  1617  000484  162F               	andwf	___ftmul@f2,f,c
  1618  000486  0EFF               	movlw	255
  1619  000488  1630               	andwf	___ftmul@f2+1,f,c
  1620  00048A  0E00               	movlw	0
  1621  00048C  1631               	andwf	___ftmul@f2+2,f,c
  1622  00048E  0E00               	movlw	0
  1623  000490  6E36               	movwf	___ftmul@f3_as_product,c
  1624  000492  0E00               	movlw	0
  1625  000494  6E37               	movwf	___ftmul@f3_as_product+1,c
  1626  000496  0E00               	movlw	0
  1627  000498  6E38               	movwf	___ftmul@f3_as_product+2,c
  1628  00049A  0E07               	movlw	7
  1629  00049C  6E39               	movwf	___ftmul@cntr,c
  1630  00049E                     l1194:
  1631  00049E  A02C               	btfss	___ftmul@f1,0,c
  1632  0004A0  D006               	goto	l1198
  1633  0004A2  502F               	movf	___ftmul@f2,w,c
  1634  0004A4  2636               	addwf	___ftmul@f3_as_product,f,c
  1635  0004A6  5030               	movf	___ftmul@f2+1,w,c
  1636  0004A8  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1637  0004AA  5031               	movf	___ftmul@f2+2,w,c
  1638  0004AC  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1639  0004AE                     l1198:
  1640  0004AE  90D8               	bcf	status,0,c
  1641  0004B0  322E               	rrcf	___ftmul@f1+2,f,c
  1642  0004B2  322D               	rrcf	___ftmul@f1+1,f,c
  1643  0004B4  322C               	rrcf	___ftmul@f1,f,c
  1644  0004B6  90D8               	bcf	status,0,c
  1645  0004B8  362F               	rlcf	___ftmul@f2,f,c
  1646  0004BA  3630               	rlcf	___ftmul@f2+1,f,c
  1647  0004BC  3631               	rlcf	___ftmul@f2+2,f,c
  1648  0004BE  2E39               	decfsz	___ftmul@cntr,f,c
  1649  0004C0  D7EE               	goto	l1194
  1650  0004C2  0E09               	movlw	9
  1651  0004C4  6E39               	movwf	___ftmul@cntr,c
  1652  0004C6                     l1204:
  1653  0004C6  A02C               	btfss	___ftmul@f1,0,c
  1654  0004C8  D006               	goto	l1208
  1655  0004CA  502F               	movf	___ftmul@f2,w,c
  1656  0004CC  2636               	addwf	___ftmul@f3_as_product,f,c
  1657  0004CE  5030               	movf	___ftmul@f2+1,w,c
  1658  0004D0  2237               	addwfc	___ftmul@f3_as_product+1,f,c
  1659  0004D2  5031               	movf	___ftmul@f2+2,w,c
  1660  0004D4  2238               	addwfc	___ftmul@f3_as_product+2,f,c
  1661  0004D6                     l1208:
  1662  0004D6  90D8               	bcf	status,0,c
  1663  0004D8  322E               	rrcf	___ftmul@f1+2,f,c
  1664  0004DA  322D               	rrcf	___ftmul@f1+1,f,c
  1665  0004DC  322C               	rrcf	___ftmul@f1,f,c
  1666  0004DE  90D8               	bcf	status,0,c
  1667  0004E0  3238               	rrcf	___ftmul@f3_as_product+2,f,c
  1668  0004E2  3237               	rrcf	___ftmul@f3_as_product+1,f,c
  1669  0004E4  3236               	rrcf	___ftmul@f3_as_product,f,c
  1670  0004E6  2E39               	decfsz	___ftmul@cntr,f,c
  1671  0004E8  D7EE               	goto	l1204
  1672  0004EA  C036  F020         	movff	___ftmul@f3_as_product,___ftpack@arg
  1673  0004EE  C037  F021         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1674  0004F2  C038  F022         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1675  0004F6  C035  F023         	movff	___ftmul@exp,___ftpack@exp
  1676  0004FA  C03A  F024         	movff	___ftmul@sign,___ftpack@sign
  1677  0004FE  EC88  F002         	call	___ftpack	;wreg free
  1678  000502  C020  F02C         	movff	?___ftpack,?___ftmul
  1679  000506  C021  F02D         	movff	?___ftpack+1,?___ftmul+1
  1680  00050A  C022  F02E         	movff	?___ftpack+2,?___ftmul+2
  1681  00050E  0012               	return	
  1682  000510                     __end_of___ftmul:
  1683                           	opt stack 0
  1684                           wreg	equ	0xFE8
  1685                           status	equ	0xFD8
  1686                           
  1687 ;; *************** function ___awtoft *****************
  1688 ;; Defined at:
  1689 ;;		line 32 in file "/opt/microchip/xc8/v1.36/sources/common/awtoft.c"
  1690 ;; Parameters:    Size  Location     Type
  1691 ;;  c               2   39[COMRAM] int 
  1692 ;; Auto vars:     Size  Location     Type
  1693 ;;  sign            1   42[COMRAM] unsigned char 
  1694 ;; Return value:  Size  Location     Type
  1695 ;;                  3   39[COMRAM] float 
  1696 ;; Registers used:
  1697 ;;		wreg, status,2, status,0, cstack
  1698 ;; Tracked objects:
  1699 ;;		On entry : 0/0
  1700 ;;		On exit  : 0/0
  1701 ;;		Unchanged: 0/0
  1702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1703 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1704 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1706 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;Total ram usage:        4 bytes
  1708 ;; Hardware stack levels used:    1
  1709 ;; Hardware stack levels required when called:    3
  1710 ;; This function calls:
  1711 ;;		___ftpack
  1712 ;; This function is called by:
  1713 ;;		_main
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           	psect	text13
  1718  00062A                     __ptext13:
  1719                           	opt stack 0
  1720  00062A                     ___awtoft:
  1721                           	opt stack 27
  1722                           
  1723                           ;incstack = 0
  1724  00062A  0E00               	movlw	0
  1725  00062C  6E2B               	movwf	___awtoft@sign,c
  1726  00062E  AE29               	btfss	___awtoft@c+1,7,c
  1727  000630  D006               	goto	l1224
  1728  000632  6C28               	negf	___awtoft@c,c
  1729  000634  1E29               	comf	___awtoft@c+1,f,c
  1730  000636  B0D8               	btfsc	status,0,c
  1731  000638  2A29               	incf	___awtoft@c+1,f,c
  1732  00063A  0E01               	movlw	1
  1733  00063C  6E2B               	movwf	___awtoft@sign,c
  1734  00063E                     l1224:
  1735  00063E  C028  F020         	movff	___awtoft@c,___ftpack@arg
  1736  000642  C029  F021         	movff	___awtoft@c+1,___ftpack@arg+1
  1737  000646  6A22               	clrf	___ftpack@arg+2,c
  1738  000648  0E8E               	movlw	142
  1739  00064A  6E23               	movwf	___ftpack@exp,c
  1740  00064C  C02B  F024         	movff	___awtoft@sign,___ftpack@sign
  1741  000650  EC88  F002         	call	___ftpack	;wreg free
  1742  000654  C020  F028         	movff	?___ftpack,?___awtoft
  1743  000658  C021  F029         	movff	?___ftpack+1,?___awtoft+1
  1744  00065C  C022  F02A         	movff	?___ftpack+2,?___awtoft+2
  1745  000660  0012               	return	
  1746  000662                     __end_of___awtoft:
  1747                           	opt stack 0
  1748                           wreg	equ	0xFE8
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function ___ftpack *****************
  1752 ;; Defined at:
  1753 ;;		line 62 in file "/opt/microchip/xc8/v1.36/sources/common/float.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  arg             3   31[COMRAM] unsigned um
  1756 ;;  exp             1   34[COMRAM] unsigned char 
  1757 ;;  sign            1   35[COMRAM] unsigned char 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;		None
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  3   31[COMRAM] float 
  1762 ;; Registers used:
  1763 ;;		wreg, status,2, status,0
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1769 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1771 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1773 ;;Total ram usage:        8 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:    2
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		___awtoft
  1780 ;;		___ftmul
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text14
  1785  000510                     __ptext14:
  1786                           	opt stack 0
  1787  000510                     ___ftpack:
  1788                           	opt stack 27
  1789                           
  1790                           ;incstack = 0
  1791  000510  5023               	movf	___ftpack@exp,w,c
  1792  000512  B4D8               	btfsc	status,2,c
  1793  000514  D005               	goto	l1070
  1794  000516  5020               	movf	___ftpack@arg,w,c
  1795  000518  1021               	iorwf	___ftpack@arg+1,w,c
  1796  00051A  1022               	iorwf	___ftpack@arg+2,w,c
  1797  00051C  A4D8               	btfss	status,2,c
  1798  00051E  D00C               	goto	l1076
  1799  000520                     l1070:
  1800  000520  0E00               	movlw	0
  1801  000522  6E20               	movwf	?___ftpack,c
  1802  000524  0E00               	movlw	0
  1803  000526  6E21               	movwf	?___ftpack+1,c
  1804  000528  0E00               	movlw	0
  1805  00052A  6E22               	movwf	?___ftpack+2,c
  1806  00052C  0012               	return	
  1807  00052E                     l1074:
  1808  00052E  2A23               	incf	___ftpack@exp,f,c
  1809  000530  90D8               	bcf	status,0,c
  1810  000532  3222               	rrcf	___ftpack@arg+2,f,c
  1811  000534  3221               	rrcf	___ftpack@arg+1,f,c
  1812  000536  3220               	rrcf	___ftpack@arg,f,c
  1813  000538                     l1076:
  1814  000538  0E00               	movlw	0
  1815  00053A  1420               	andwf	___ftpack@arg,w,c
  1816  00053C  6E25               	movwf	??___ftpack& (0+255),c
  1817  00053E  0E00               	movlw	0
  1818  000540  1421               	andwf	___ftpack@arg+1,w,c
  1819  000542  6E26               	movwf	(??___ftpack+1)& (0+255),c
  1820  000544  0EFE               	movlw	254
  1821  000546  1422               	andwf	___ftpack@arg+2,w,c
  1822  000548  6E27               	movwf	(??___ftpack+2)& (0+255),c
  1823  00054A  5025               	movf	??___ftpack,w,c
  1824  00054C  1026               	iorwf	??___ftpack+1,w,c
  1825  00054E  1027               	iorwf	??___ftpack+2,w,c
  1826  000550  B4D8               	btfsc	status,2,c
  1827  000552  D00C               	goto	l1082
  1828  000554  D7EC               	goto	l1074
  1829  000556                     l1078:
  1830  000556  2A23               	incf	___ftpack@exp,f,c
  1831  000558  0E01               	movlw	1
  1832  00055A  2620               	addwf	___ftpack@arg,f,c
  1833  00055C  0E00               	movlw	0
  1834  00055E  2221               	addwfc	___ftpack@arg+1,f,c
  1835  000560  0E00               	movlw	0
  1836  000562  2222               	addwfc	___ftpack@arg+2,f,c
  1837  000564  90D8               	bcf	status,0,c
  1838  000566  3222               	rrcf	___ftpack@arg+2,f,c
  1839  000568  3221               	rrcf	___ftpack@arg+1,f,c
  1840  00056A  3220               	rrcf	___ftpack@arg,f,c
  1841  00056C                     l1082:
  1842  00056C  0E00               	movlw	0
  1843  00056E  1420               	andwf	___ftpack@arg,w,c
  1844  000570  6E25               	movwf	??___ftpack& (0+255),c
  1845  000572  0E00               	movlw	0
  1846  000574  1421               	andwf	___ftpack@arg+1,w,c
  1847  000576  6E26               	movwf	(??___ftpack+1)& (0+255),c
  1848  000578  0EFF               	movlw	255
  1849  00057A  1422               	andwf	___ftpack@arg+2,w,c
  1850  00057C  6E27               	movwf	(??___ftpack+2)& (0+255),c
  1851  00057E  5025               	movf	??___ftpack,w,c
  1852  000580  1026               	iorwf	??___ftpack+1,w,c
  1853  000582  1027               	iorwf	??___ftpack+2,w,c
  1854  000584  B4D8               	btfsc	status,2,c
  1855  000586  D006               	goto	l1086
  1856  000588  D7E6               	goto	l1078
  1857  00058A                     l1084:
  1858  00058A  0623               	decf	___ftpack@exp,f,c
  1859  00058C  90D8               	bcf	status,0,c
  1860  00058E  3620               	rlcf	___ftpack@arg,f,c
  1861  000590  3621               	rlcf	___ftpack@arg+1,f,c
  1862  000592  3622               	rlcf	___ftpack@arg+2,f,c
  1863  000594                     l1086:
  1864  000594  BE21               	btfsc	___ftpack@arg+1,7,c
  1865  000596  D003               	goto	l385
  1866  000598  0E02               	movlw	2
  1867  00059A  6023               	cpfslt	___ftpack@exp,c
  1868  00059C  D7F6               	goto	l1084
  1869  00059E                     l385:
  1870  00059E  A023               	btfss	___ftpack@exp,0,c
  1871  0005A0  9E21               	bcf	___ftpack@arg+1,7,c
  1872  0005A2  90D8               	bcf	status,0,c
  1873  0005A4  3223               	rrcf	___ftpack@exp,f,c
  1874  0005A6  5023               	movf	___ftpack@exp,w,c
  1875  0005A8  1222               	iorwf	___ftpack@arg+2,f,c
  1876  0005AA  5024               	movf	___ftpack@sign,w,c
  1877  0005AC  A4D8               	btfss	status,2,c
  1878  0005AE  8E22               	bsf	___ftpack@arg+2,7,c
  1879  0005B0  C020  F020         	movff	___ftpack@arg,?___ftpack
  1880  0005B4  C021  F021         	movff	___ftpack@arg+1,?___ftpack+1
  1881  0005B8  C022  F022         	movff	___ftpack@arg+2,?___ftpack+2
  1882  0005BC  0012               	return	
  1883  0005BE                     __end_of___ftpack:
  1884                           	opt stack 0
  1885                           wreg	equ	0xFE8
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _ConfigureOscillator *****************
  1889 ;; Defined at:
  1890 ;;		line 26 in file "system.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		None
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1908 ;;Total ram usage:        0 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    2
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_main
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text15
  1919  00077A                     __ptext15:
  1920                           	opt stack 0
  1921  00077A                     _ConfigureOscillator:
  1922                           	opt stack 28
  1923                           
  1924                           ;system.c: 33: OSCTUNEbits.PLLEN = 1;
  1925                           
  1926                           ;incstack = 0
  1927  00077A  8C9B               	bsf	3995,6,c	;volatile
  1928                           
  1929                           ;system.c: 34: OSCCONbits.IRCF0 = 1;
  1930  00077C  88D3               	bsf	4051,4,c	;volatile
  1931                           
  1932                           ;system.c: 35: OSCCONbits.IRCF1 = 1;
  1933  00077E  8AD3               	bsf	4051,5,c	;volatile
  1934                           
  1935                           ;system.c: 36: OSCCONbits.IRCF2 = 1;
  1936  000780  8CD3               	bsf	4051,6,c	;volatile
  1937                           
  1938                           ;system.c: 39: TRISAbits.TRISA6 = 0;
  1939  000782  9C92               	bcf	3986,6,c	;volatile
  1940  000784  0012               	return		;funcret
  1941  000786                     __end_of_ConfigureOscillator:
  1942                           	opt stack 0
  1943                           wreg	equ	0xFE8
  1944                           status	equ	0xFD8
  1945                           
  1946 ;; *************** function _low_isr *****************
  1947 ;; Defined at:
  1948 ;;		line 67 in file "interrupts.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		None
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1964 ;;      Temps:         17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1965 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1966 ;;Total ram usage:       17 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; Hardware stack levels required when called:    1
  1969 ;; This function calls:
  1970 ;;		Nothing
  1971 ;; This function is called by:
  1972 ;;		Interrupt level 1
  1973 ;; This function uses a non-reentrant model
  1974 ;;
  1975                           
  1976                           	psect	intcodelo
  1977  000018                     __pintcodelo:
  1978                           	opt stack 0
  1979  000018                     _low_isr:
  1980                           	opt stack 27
  1981                           
  1982                           ;incstack = 0
  1983  000018  803B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1984  00001A  CFD8 F00F          	movff	status,??_low_isr
  1985  00001E  CFE8 F010          	movff	wreg,??_low_isr+1
  1986  000022  CFE0 F011          	movff	bsr,??_low_isr+2
  1987  000026  CFFA F012          	movff	pclath,??_low_isr+3
  1988  00002A  CFFB F013          	movff	pclatu,??_low_isr+4
  1989  00002E  CFE9 F014          	movff	fsr0l,??_low_isr+5
  1990  000032  CFEA F015          	movff	fsr0h,??_low_isr+6
  1991  000036  CFE1 F016          	movff	fsr1l,??_low_isr+7
  1992  00003A  CFE2 F017          	movff	fsr1h,??_low_isr+8
  1993  00003E  CFD9 F018          	movff	fsr2l,??_low_isr+9
  1994  000042  CFDA F019          	movff	fsr2h,??_low_isr+10
  1995  000046  CFF3 F01A          	movff	prodl,??_low_isr+11
  1996  00004A  CFF4 F01B          	movff	prodh,??_low_isr+12
  1997  00004E  CFF6 F01C          	movff	tblptrl,??_low_isr+13
  1998  000052  CFF7 F01D          	movff	tblptrh,??_low_isr+14
  1999  000056  CFF8 F01E          	movff	tblptru,??_low_isr+15
  2000  00005A  CFF5 F01F          	movff	tablat,??_low_isr+16
  2001  00005E  C01F  FFF5         	movff	??_low_isr+16,tablat
  2002  000062  C01E  FFF8         	movff	??_low_isr+15,tblptru
  2003  000066  C01D  FFF7         	movff	??_low_isr+14,tblptrh
  2004  00006A  C01C  FFF6         	movff	??_low_isr+13,tblptrl
  2005  00006E  C01B  FFF4         	movff	??_low_isr+12,prodh
  2006  000072  C01A  FFF3         	movff	??_low_isr+11,prodl
  2007  000076  C019  FFDA         	movff	??_low_isr+10,fsr2h
  2008  00007A  C018  FFD9         	movff	??_low_isr+9,fsr2l
  2009  00007E  C017  FFE2         	movff	??_low_isr+8,fsr1h
  2010  000082  C016  FFE1         	movff	??_low_isr+7,fsr1l
  2011  000086  C015  FFEA         	movff	??_low_isr+6,fsr0h
  2012  00008A  C014  FFE9         	movff	??_low_isr+5,fsr0l
  2013  00008E  C013  FFFB         	movff	??_low_isr+4,pclatu
  2014  000092  C012  FFFA         	movff	??_low_isr+3,pclath
  2015  000096  C011  FFE0         	movff	??_low_isr+2,bsr
  2016  00009A  C010  FFE8         	movff	??_low_isr+1,wreg
  2017  00009E  C00F  FFD8         	movff	??_low_isr,status
  2018  0000A2  903B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2019  0000A4  0010               	retfie	
  2020  0000A6                     __end_of_low_isr:
  2021                           	opt stack 0
  2022                           pclatu	equ	0xFFB
  2023                           pclath	equ	0xFFA
  2024                           tblptru	equ	0xFF8
  2025                           tblptrh	equ	0xFF7
  2026                           tblptrl	equ	0xFF6
  2027                           tablat	equ	0xFF5
  2028                           prodh	equ	0xFF4
  2029                           prodl	equ	0xFF3
  2030                           fsr0h	equ	0xFEA
  2031                           fsr0l	equ	0xFE9
  2032                           wreg	equ	0xFE8
  2033                           fsr1h	equ	0xFE2
  2034                           fsr1l	equ	0xFE1
  2035                           bsr	equ	0xFE0
  2036                           fsr2h	equ	0xFDA
  2037                           fsr2l	equ	0xFD9
  2038                           status	equ	0xFD8
  2039                           
  2040 ;; *************** function _high_isr *****************
  2041 ;; Defined at:
  2042 ;;		line 27 in file "interrupts.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;		None
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		None
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2058 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2059 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2060 ;;Total ram usage:       14 bytes
  2061 ;; Hardware stack levels used:    1
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		Interrupt level 2
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	intcode
  2070  000008                     __pintcode:
  2071                           	opt stack 0
  2072  000008                     _high_isr:
  2073                           	opt stack 27
  2074                           
  2075                           ;incstack = 0
  2076  000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2077  00000A  CFFA F001          	movff	pclath,??_high_isr
  2078  00000E  CFFB F002          	movff	pclatu,??_high_isr+1
  2079  000012  EFDF  F002         	goto	int_func
  2080                           pclatu	equ	0xFFB
  2081                           pclath	equ	0xFFA
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           prodh	equ	0xFF4
  2087                           prodl	equ	0xFF3
  2088                           fsr0h	equ	0xFEA
  2089                           fsr0l	equ	0xFE9
  2090                           wreg	equ	0xFE8
  2091                           fsr1h	equ	0xFE2
  2092                           fsr1l	equ	0xFE1
  2093                           bsr	equ	0xFE0
  2094                           fsr2h	equ	0xFDA
  2095                           fsr2l	equ	0xFD9
  2096                           status	equ	0xFD8
  2097                           
  2098                           	psect	intcode_body
  2099  0005BE                     __pintcode_body:
  2100                           	opt stack 27
  2101  0005BE                     int_func:
  2102                           	opt stack 27
  2103  0005BE  CFE9 F003          	movff	fsr0l,??_high_isr+2
  2104  0005C2  CFEA F004          	movff	fsr0h,??_high_isr+3
  2105  0005C6  CFE1 F005          	movff	fsr1l,??_high_isr+4
  2106  0005CA  CFE2 F006          	movff	fsr1h,??_high_isr+5
  2107  0005CE  CFD9 F007          	movff	fsr2l,??_high_isr+6
  2108  0005D2  CFDA F008          	movff	fsr2h,??_high_isr+7
  2109  0005D6  CFF3 F009          	movff	prodl,??_high_isr+8
  2110  0005DA  CFF4 F00A          	movff	prodh,??_high_isr+9
  2111  0005DE  CFF6 F00B          	movff	tblptrl,??_high_isr+10
  2112  0005E2  CFF7 F00C          	movff	tblptrh,??_high_isr+11
  2113  0005E6  CFF8 F00D          	movff	tblptru,??_high_isr+12
  2114  0005EA  CFF5 F00E          	movff	tablat,??_high_isr+13
  2115  0005EE  C00E  FFF5         	movff	??_high_isr+13,tablat
  2116  0005F2  C00D  FFF8         	movff	??_high_isr+12,tblptru
  2117  0005F6  C00C  FFF7         	movff	??_high_isr+11,tblptrh
  2118  0005FA  C00B  FFF6         	movff	??_high_isr+10,tblptrl
  2119  0005FE  C00A  FFF4         	movff	??_high_isr+9,prodh
  2120  000602  C009  FFF3         	movff	??_high_isr+8,prodl
  2121  000606  C008  FFDA         	movff	??_high_isr+7,fsr2h
  2122  00060A  C007  FFD9         	movff	??_high_isr+6,fsr2l
  2123  00060E  C006  FFE2         	movff	??_high_isr+5,fsr1h
  2124  000612  C005  FFE1         	movff	??_high_isr+4,fsr1l
  2125  000616  C004  FFEA         	movff	??_high_isr+3,fsr0h
  2126  00061A  C003  FFE9         	movff	??_high_isr+2,fsr0l
  2127  00061E  C002  FFFB         	movff	??_high_isr+1,pclatu
  2128  000622  C001  FFFA         	movff	??_high_isr,pclath
  2129  000626  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2130  000628  0011               	retfie		f
  2131  00062A                     __end_of_high_isr:
  2132                           	opt stack 0
  2133  0000                     pclatu	equ	0xFFB
  2134                           pclath	equ	0xFFA
  2135                           tblptru	equ	0xFF8
  2136                           tblptrh	equ	0xFF7
  2137                           tblptrl	equ	0xFF6
  2138                           tablat	equ	0xFF5
  2139                           prodh	equ	0xFF4
  2140                           prodl	equ	0xFF3
  2141                           fsr0h	equ	0xFEA
  2142                           fsr0l	equ	0xFE9
  2143                           wreg	equ	0xFE8
  2144                           fsr1h	equ	0xFE2
  2145                           fsr1l	equ	0xFE1
  2146                           bsr	equ	0xFE0
  2147                           fsr2h	equ	0xFDA
  2148                           fsr2l	equ	0xFD9
  2149                           status	equ	0xFD8
  2150                           pclatu	equ	0xFFB
  2151                           pclath	equ	0xFFA
  2152                           tblptru	equ	0xFF8
  2153                           tblptrh	equ	0xFF7
  2154                           tblptrl	equ	0xFF6
  2155                           tablat	equ	0xFF5
  2156                           prodh	equ	0xFF4
  2157                           prodl	equ	0xFF3
  2158                           fsr0h	equ	0xFEA
  2159                           fsr0l	equ	0xFE9
  2160                           wreg	equ	0xFE8
  2161                           fsr1h	equ	0xFE2
  2162                           fsr1l	equ	0xFE1
  2163                           bsr	equ	0xFE0
  2164                           fsr2h	equ	0xFDA
  2165                           fsr2l	equ	0xFD9
  2166                           status	equ	0xFD8
  2167                           
  2168                           	psect	rparam
  2169  0000                     pclatu	equ	0xFFB
  2170                           pclath	equ	0xFFA
  2171                           tblptru	equ	0xFF8
  2172                           tblptrh	equ	0xFF7
  2173                           tblptrl	equ	0xFF6
  2174                           tablat	equ	0xFF5
  2175                           prodh	equ	0xFF4
  2176                           prodl	equ	0xFF3
  2177                           fsr0h	equ	0xFEA
  2178                           fsr0l	equ	0xFE9
  2179                           wreg	equ	0xFE8
  2180                           fsr1h	equ	0xFE2
  2181                           fsr1l	equ	0xFE1
  2182                           bsr	equ	0xFE0
  2183                           fsr2h	equ	0xFDA
  2184                           fsr2l	equ	0xFD9
  2185                           status	equ	0xFD8
  2186                           
  2187                           	psect	temp
  2188  00003B                     btemp:
  2189                           	opt stack 0
  2190  00003B                     	ds	1
  2191  0000                     int$flags	set	btemp
  2192                           pclatu	equ	0xFFB
  2193                           pclath	equ	0xFFA
  2194                           tblptru	equ	0xFF8
  2195                           tblptrh	equ	0xFF7
  2196                           tblptrl	equ	0xFF6
  2197                           tablat	equ	0xFF5
  2198                           prodh	equ	0xFF4
  2199                           prodl	equ	0xFF3
  2200                           fsr0h	equ	0xFEA
  2201                           fsr0l	equ	0xFE9
  2202                           wreg	equ	0xFE8
  2203                           fsr1h	equ	0xFE2
  2204                           fsr1l	equ	0xFE1
  2205                           bsr	equ	0xFE0
  2206                           fsr2h	equ	0xFDA
  2207                           fsr2l	equ	0xFD9
  2208                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     58      58
    BANK0           160     49      49
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___ftmul
    _readZ->_spi_write
    _readY->_spi_write
    _readX->_spi_write
    _init_AccelFS->_spi_write
    ___ftmul->___awtoft
    ___awtoft->___ftpack

Critical Paths under _low_isr in COMRAM

    None.

Critical Paths under _high_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_isr in BANK0

    None.

Critical Paths under _high_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _low_isr in BANK1

    None.

Critical Paths under _high_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_isr in BANK2

    None.

Critical Paths under _high_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_isr in BANK3

    None.

Critical Paths under _high_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_isr in BANK4

    None.

Critical Paths under _high_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_isr in BANK5

    None.

Critical Paths under _high_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_isr in BANK6

    None.

Critical Paths under _high_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_isr in BANK7

    None.

Critical Paths under _high_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_isr in BANK8

    None.

Critical Paths under _high_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_isr in BANK9

    None.

Critical Paths under _high_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_isr in BANK10

    None.

Critical Paths under _high_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_isr in BANK11

    None.

Critical Paths under _high_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_isr in BANK12

    None.

Critical Paths under _high_isr in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                49    49      0    4921
                                              0 BANK0     49    49      0
                _ConfigureOscillator
                           ___awtoft
                            ___ftmul
                        _delay_milli
                       _init_AccelFS
                           _init_spi
                            _readADC
                              _readX
                              _readY
                              _readZ
                          _selectAN0
                          _selectAN1
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _selectAN1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _selectAN0                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readZ                                                5     3      2      46
                                             32 COMRAM     5     3      2
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _readY                                                5     3      2      46
                                             32 COMRAM     5     3      2
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _readX                                                5     3      2      46
                                             32 COMRAM     5     3      2
                           _spi_read
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _readADC                                              4     2      2      24
                                             31 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_spi                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_AccelFS                                         0     0      0      22
                          _spi_write
 ---------------------------------------------------------------------------------
 (1) _spi_write                                            1     1      0      22
                                             31 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delay_milli                                          5     3      2     175
                                             31 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2459
                                             43 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1648
                                             39 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1299
                                             31 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _low_isr                                             17    17      0       0
                                             14 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _high_isr                                            14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   ___awtoft
     ___ftpack
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   _delay_milli
   _init_AccelFS
     _spi_write
   _init_spi
   _readADC
   _readX
     _spi_read
     _spi_write
   _readY
     _spi_read
     _spi_write
   _readZ
     _spi_read
     _spi_write
   _selectAN0
   _selectAN1
   _spi_read
   _spi_write

 _low_isr (ROOT)

 _high_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     3A      3A       1       61.7%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     31      31       5       30.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BIGRAM             CFF      0       0      31        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Sun Feb 28 04:16:58 2016

                 _SSPSTATbits 000FC7                            l94 0770                            l88 07A4  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                __CFG_CP4$OFF 000000                  __CFG_CP5$OFF 000000                   __CFG_LVP$ON 000000  
                         l109 071A                           l157 0748                           l385 059E  
                __CFG_CPB$OFF 000000                           u411 0454                  __CFG_CPD$OFF 000000  
                         u391 042C                           u527 070E              spi_write@message 0020  
                         wreg 000FE8                  __CFG_WDT$OFF 000000                          l1204 04C6  
                        l1070 0520                          l1224 063E                          l1208 04D6  
                        l1082 056C                          l1074 052E                          l1306 02F6  
                        l1084 058A                          l1076 0538                          l1180 046C  
                        l1164 0708                          l1086 0594                          l1078 0556  
                        l1174 0444                          l1264 018A                          l1194 049E  
                        l1198 04AE                          l1286 0200                          _main 00AA  
                ___ftpack@arg 0020                   main@tempOne 0072                  ___ftpack@exp 0023  
                 main@tempTwo 0074                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          fsr1l 000FE1  
                        fsr2l 000FD9                          btemp 003B                          pclat 000FFA  
                        prodh 000FF4                          prodl 000FF3                          start 00A6  
               __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000                  ___ftmul@cntr 0039  
                ___param_bank 000010                  ___ftmul@sign 003A                         ?_main 0001  
             __end_of___ftmul 0510                  main@xGyroRaw 0085           _ConfigureOscillator 077A  
               __CFG_PWRT$OFF 000000                  main@yGyroRaw 0087                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
               __CFG_WRT4$OFF 000000                  main@zGyroRaw 0089                 __CFG_WRT5$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                __CFG_EBTR4$OFF 000000  
              __CFG_EBTR5$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000               __end_of_readADC 0760                __CFG_EBTRB$OFF 000000  
               ___awtoft@sign 002B                  main@gyroStat 008D                         _readX 06CA  
                       _readY 0696                         _readZ 0662                 ___ftpack@sign 0024  
             __end_of_low_isr 00A6                         tablat 000FF5                 main@accelStat 008C  
                       status 000FD8                __CFG_PBADEN$ON 000000          ?_ConfigureOscillator 0001  
             __initialization 0786                 ?_init_AccelFS 0001          __size_of_delay_milli 002A  
                __end_of_main 041C                 main@xAccelRaw 007F                 main@yAccelRaw 0081  
               main@zAccelRaw 0083                        ??_main 003B                 __activetblptr 000000  
                      ?_readX 0021                        ?_readY 0021                        ?_readZ 0021  
                      _ADRESH 000FC4                        _ADRESL 000FC3               __CFG_BBSIZ$1024 000000  
            __end_of___awtoft 0662              __end_of___ftpack 05BE                        _SSPBUF 000FC9  
               main@xGyroRate 0076         ??_ConfigureOscillator 0020                 main@yGyroRate 0079  
               main@zGyroRate 007C                ??_init_AccelFS 0021                __CFG_XINST$OFF 000000  
            __end_of_high_isr 062A             main@checkRegReady 008B                __CFG_STVREN$ON 000000  
                   ??___ftmul 0032              __end_of_init_spi 0746         ___ftmul@f3_as_product 0036  
                   ??_readADC 0022               __CFG_BOREN$BOHW 000000                        readX@x 0024  
                      readY@y 0024                        readZ@z 0024                     ??_low_isr 000F  
             delay_milli@time 0020                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8              __end_of_spi_read 07AC                    __accesstop 0060  
     __end_of__initialization 0786                 ___rparam_used 000001                    ___awtoft@c 0028  
                  ___ftmul@f1 002C                    ___ftmul@f2 002F                __pcstackCOMRAM 0001  
               __end_of_readX 06FE                 __end_of_readY 06CA                 __end_of_readZ 0696  
                     ??_readX 0023                       ??_readY 0023                       ??_readZ 0023  
          __size_of_selectAN0 000A            __size_of_selectAN1 000A                     ?___awtoft 0028  
                   ?___ftpack 0020          __end_of_init_AccelFS 076E            __size_of_spi_write 000C  
                   ?_high_isr 0001                     ?_init_spi 0001                       __Hparam 0000  
                     __Lparam 0000                     ?_spi_read 0001                       ___ftmul 041C  
              main@loopPeriod 008E                       __pcinit 0786                    ??___awtoft 002B  
                  ??___ftpack 0025                       __ramtop 0D00                       __ptext0 00AA  
                     __ptext1 0790                       __ptext2 079A                       __ptext3 0662  
                     __ptext4 0696                       __ptext5 06CA                       __ptext6 07A4  
                     __ptext7 0746                       __ptext8 0728                       __ptext9 0760  
                     _readADC 0746                       _low_isr 0018                    ??_high_isr 0001  
              __pintcode_body 05BE             __end_of_selectAN0 07A4             __end_of_selectAN1 079A  
        end_of_initialization 0786                       int_func 05BE                    ??_init_spi 0020  
               ??_delay_milli 0022             __end_of_spi_write 077A                    ??_spi_read 0020  
                   _TRISAbits 000F92                     _TRISBbits 000F93                     _TRISCbits 000F94  
                   _TRISDbits 000F95                     _TRISEbits 000F96   __end_of_ConfigureOscillator 0786  
                  main@xAccel 0060                    main@yAccel 0063                    main@zAccel 0066  
                 ___ftmul@exp 0035           __end_of_delay_milli 0728             readADC@digitalVal 0022  
       __size_of_init_AccelFS 000E           start_initialization 0786              __CFG_OSC$IRCIO67 000000  
                _init_AccelFS 0760              __CFG_LPT1OSC$OFF 000000             __size_of___awtoft 0038  
           __size_of___ftpack 00AE                 __pcstackBANK0 0060             __size_of_high_isr 0622  
                 _delay_milli 06FE             __size_of_init_spi 001E                     __pintcode 0008  
                    ?___ftmul 002C                   __pintcodelo 0018             __size_of_spi_read 0008  
                    ?_readADC 0020                      ?_low_isr 0001                __size_of_readX 0034  
              __size_of_readY 0034                __size_of_readZ 0034                      _LATCbits 000F8B  
                   _selectAN0 079A                     _selectAN1 0790              __CFG_WDTPS$32768 000000  
                   _spi_write 076E                    _ADCON0bits 000FC2                    _ADCON1bits 000FC1  
                  _ADCON2bits 000FC0                     main@xGyro 0069                     main@yGyro 006C  
                   main@zGyro 006F                  delay_milli@i 0023                    ?_selectAN0 0001  
                  ?_selectAN1 0001                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___ftmul 00F4                      ___awtoft 062A                      ___ftpack 0510  
                  ?_spi_write 0001              __size_of_readADC 001A              __size_of_low_isr 008E  
                    __ptext10 076E                      __ptext11 06FE                      __ptext12 041C  
                    __ptext13 062A                      __ptext14 0510                      __ptext15 077A  
                    _high_isr 0008                 __size_of_main 0372                      _init_spi 0728  
__size_of_ConfigureOscillator 000C                      _spi_read 07A4                      int$flags 003B  
                 _OSCTUNEbits 000F9B                      intlevel1 0000                      intlevel2 0000  
                 ??_selectAN0 0020                   ??_selectAN1 0020                  ?_delay_milli 0020  
                  _OSCCONbits 000FD3                   ??_spi_write 0020                   _SSPCON1bits 000FC6  
